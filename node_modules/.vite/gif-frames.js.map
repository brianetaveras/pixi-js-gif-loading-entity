{
  "version": 3,
  "sources": ["../multi-integer-range/lib/multi-integer-range.js", "../iota-array/iota.js", "../is-buffer/index.js", "../ndarray/ndarray.js", "../uniq/uniq.js", "../cwise-compiler/lib/compile.js", "../cwise-compiler/lib/thunk.js", "../cwise-compiler/compiler.js", "../ndarray-pack/doConvert.js", "../ndarray-pack/convert.js", "browser-external:stream", "../through/index.js", "../data-uri-to-buffer/index.js", "../get-pixels-frame-info-update/dom-pixels.js", "../isarray/index.js", "browser-external:events", "../core-util-is/lib/util.js", "../inherits/inherits_browser.js", "../string_decoder/index.js", "../readable-stream/lib/_stream_readable.js", "../readable-stream/lib/_stream_duplex.js", "../readable-stream/lib/_stream_writable.js", "../readable-stream/lib/_stream_transform.js", "../readable-stream/lib/_stream_passthrough.js", "../readable-stream/readable.js", "browser-external:util", "../contentstream/index.js", "browser-external:assert", "../gif-encoder/node_modules/readable-stream/lib/_stream_writable.js", "../gif-encoder/node_modules/readable-stream/lib/_stream_duplex.js", "../gif-encoder/node_modules/readable-stream/lib/_stream_readable.js", "../gif-encoder/node_modules/readable-stream/lib/_stream_transform.js", "../gif-encoder/node_modules/readable-stream/lib/_stream_passthrough.js", "../gif-encoder/node_modules/readable-stream/readable.js", "../gif-encoder/lib/TypedNeuQuant.js", "../gif-encoder/lib/LZWEncoder.js", "../gif-encoder/lib/GIFEncoder.js", "../jpeg-js/lib/encoder.js", "../jpeg-js/lib/decoder.js", "../jpeg-js/index.js", "browser-external:zlib", "../pngjs-nozlib/lib/chunkstream.js", "../pngjs-nozlib/lib/interlace.js", "../pngjs-nozlib/lib/paeth-predictor.js", "../pngjs-nozlib/lib/filter-parse.js", "../pngjs-nozlib/lib/filter-parse-async.js", "../pngjs-nozlib/lib/constants.js", "../pngjs-nozlib/lib/crc.js", "../pngjs-nozlib/lib/parser.js", "../pngjs-nozlib/lib/bitmapper.js", "../pngjs-nozlib/lib/format-normaliser.js", "../pngjs-nozlib/lib/parser-async.js", "../pngjs-nozlib/lib/bitpacker.js", "../pngjs-nozlib/lib/filter-pack.js", "../pngjs-nozlib/lib/packer.js", "../pngjs-nozlib/lib/packer-async.js", "../pngjs-nozlib/lib/sync-reader.js", "../pngjs-nozlib/lib/filter-parse-sync.js", "../pngjs-nozlib/lib/parser-sync.js", "../pngjs-nozlib/lib/packer-sync.js", "../pngjs-nozlib/lib/png-sync.js", "../pngjs-nozlib/lib/png.js", "../ndarray-ops/ndarray-ops.js", "../save-pixels-jpeg-js-upgrade/save-pixels.js", "../gif-frames/gif-frames.js", "dep:gif-frames"],
  "sourcesContent": ["/*! multi-integer-range (c) 2015 Soichiro Miki */\n\"use strict\";\nvar MultiRange = (function () {\n    /**\n     * Creates a new MultiRange object.\n     */\n    function MultiRange(data) {\n        function isArray(x) {\n            return Object.prototype.toString.call(x) === '[object Array]';\n        }\n        this.ranges = [];\n        if (typeof data === 'string') {\n            this.parseString(data);\n        }\n        else if (typeof data === 'number') {\n            this.appendRange(data, data);\n        }\n        else if (data instanceof MultiRange) {\n            this.ranges = data.getRanges();\n        }\n        else if (isArray(data)) {\n            for (var _i = 0, _a = data; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (isArray(item)) {\n                    if (item.length === 2) {\n                        this.appendRange(item[0], item[1]);\n                    }\n                    else {\n                        throw new TypeError('Invalid array initializer');\n                    }\n                }\n                else if (typeof item === 'number') {\n                    this.append(item);\n                }\n                else {\n                    throw new TypeError('Invalid array initialzer');\n                }\n            }\n        }\n        else if (data !== undefined) {\n            throw new TypeError('Invalid input');\n        }\n    }\n    /**\n     * Parses the initialize string and build the range data.\n     * Override this if you need to customize the parsing strategy.\n     */\n    MultiRange.prototype.parseString = function (data) {\n        function toInt(str) {\n            var m = str.match(/^\\(?(\\-?\\d+)/);\n            return parseInt(m[1], 10);\n        }\n        var s = data.replace(/\\s/g, '');\n        if (!s.length)\n            return;\n        var match;\n        for (var _i = 0, _a = s.split(','); _i < _a.length; _i++) {\n            var r = _a[_i];\n            if (match = r.match(/^(\\d+|\\(\\-?\\d+\\))$/)) {\n                var val = toInt(match[1]);\n                this.appendRange(val, val);\n            }\n            else if (match = r.match(/^(\\d+|\\(\\-?\\d+\\))?\\-(\\d+|\\(\\-?\\d+\\))?$/)) {\n                var min = match[1] === undefined ? -Infinity : toInt(match[1]);\n                var max = match[2] === undefined ? +Infinity : toInt(match[2]);\n                this.appendRange(min, max);\n            }\n            else {\n                throw new SyntaxError('Invalid input');\n            }\n        }\n        ;\n    };\n    /**\n     * Clones this instance.\n     */\n    MultiRange.prototype.clone = function () {\n        return new MultiRange(this);\n    };\n    /**\n     * Appends to this instance.\n     * @parasm value The data to append.\n     */\n    MultiRange.prototype.append = function (value) {\n        if (value === undefined) {\n            throw new TypeError('Invalid input');\n        }\n        else if (value instanceof MultiRange) {\n            for (var _i = 0, _a = value.ranges; _i < _a.length; _i++) {\n                var r = _a[_i];\n                this.appendRange(r[0], r[1]);\n            }\n            return this;\n        }\n        else {\n            return this.append(new MultiRange(value));\n        }\n    };\n    /**\n     * Appends a specified range of integers to this isntance.\n     * @param min The minimum value of the range to append.\n     * @param max The minimum value of the range to append.\n     */\n    MultiRange.prototype.appendRange = function (min, max) {\n        var newRange = [min, max];\n        if (newRange[0] > newRange[1]) {\n            newRange = [newRange[1], newRange[0]];\n        }\n        if (newRange[0] === Infinity && newRange[1] === Infinity ||\n            newRange[0] === -Infinity && newRange[1] === -Infinity) {\n            throw new RangeError('Infinity can be used only within an unbounded range segment');\n        }\n        var overlap = this.findOverlap(newRange);\n        this.ranges.splice(overlap.lo, overlap.count, overlap.union);\n        return this;\n    };\n    /**\n     * Subtracts from this instance.\n     * @param value The data to subtract.\n     */\n    MultiRange.prototype.subtract = function (value) {\n        if (value === undefined) {\n            throw new TypeError('Invalid input');\n        }\n        else if (value instanceof MultiRange) {\n            for (var _i = 0, _a = value.ranges; _i < _a.length; _i++) {\n                var r = _a[_i];\n                this.subtractRange(r[0], r[1]);\n            }\n            return this;\n        }\n        else {\n            return this.subtract(new MultiRange(value));\n        }\n    };\n    /**\n     * Subtracts a specified range of integers from this instance.\n     * @param min The minimum value of the range to subtract.\n     * @param max The minimum value of the range to subtract.\n     */\n    MultiRange.prototype.subtractRange = function (min, max) {\n        var newRange = [min, max];\n        if (newRange[0] > newRange[1]) {\n            newRange = [newRange[1], newRange[0]];\n        }\n        var overlap = this.findOverlap(newRange);\n        if (overlap.count > 0) {\n            var remain = [];\n            if (this.ranges[overlap.lo][0] < newRange[0]) {\n                remain.push([this.ranges[overlap.lo][0], newRange[0] - 1]);\n            }\n            if (newRange[1] < this.ranges[overlap.lo + overlap.count - 1][1]) {\n                remain.push([newRange[1] + 1, this.ranges[overlap.lo + overlap.count - 1][1]]);\n            }\n            this.ranges.splice.apply(this.ranges, [overlap.lo, overlap.count].concat(remain));\n        }\n        return this;\n    };\n    /**\n     * Remove integers which are not included in the given ranges (aka intersection).\n     * @param value The data to calculate the intersetion.\n     */\n    MultiRange.prototype.intersect = function (value) {\n        if (value === undefined) {\n            throw new TypeError('Invalid input');\n        }\n        else if (value instanceof MultiRange) {\n            var result = [];\n            var jstart = 0; // used for optimization\n            for (var i = 0; i < this.ranges.length; i++) {\n                var r1 = this.ranges[i];\n                for (var j = jstart; j < value.ranges.length; j++) {\n                    var r2 = value.ranges[j];\n                    if (r1[0] <= r2[1] && r1[1] >= r2[0]) {\n                        jstart = j;\n                        var min = Math.max(r1[0], r2[0]);\n                        var max = Math.min(r1[1], r2[1]);\n                        result.push([min, max]);\n                    }\n                    else if (r1[1] < r2[0]) {\n                        break;\n                    }\n                }\n            }\n            this.ranges = result;\n            return this;\n        }\n        else {\n            return this.intersect(new MultiRange(value));\n        }\n    };\n    /**\n     * Determines how the given range overlaps or touches the existing ranges.\n     * This is a helper method that calculates how an append/subtract operation\n     * affects the existing range members.\n     * @param target The range array to test.\n     * @return An object containing information about how the given range\n     * overlaps or touches this instance.\n     */\n    MultiRange.prototype.findOverlap = function (target) {\n        //   a        b  c     d         e  f       g h i   j k  l       m\n        //--------------------------------------------------------------------\n        //   |----(0)----|     |---(1)---|  |---(2)---|          |--(3)--|\n        //            |------------(A)--------------|\n        //                                            |-(B)-|\n        //                                              |-(C)-|\n        //\n        // (0)-(3) represent the existing ranges (this.ranges),\n        // and (A)-(C) are the ranges being passed to this function.\n        //\n        // A pseudocode findOverlap(A) returns { lo: 0, count: 3, union: <a-h> },\n        // meaning (A) overlaps the 3 existing ranges from index 0.\n        //\n        // findOverlap(B) returns { lo: 2, count: 1, union: <f-j> },\n        // meaning (B) \"touches\" one range element, (2).\n        //\n        // findOverlap(C) returns { lo: 3, count: 0, union: <i-k> }\n        // meaning (C) is between (2) and (3) but overlaps/touches neither of them.\n        for (var hi = this.ranges.length - 1; hi >= 0; hi--) {\n            var r = this.ranges[hi];\n            var union = void 0;\n            if (union = this.calcUnion(r, target)) {\n                var count = 1;\n                var tmp = void 0;\n                while ((hi - count >= 0) && (tmp = this.calcUnion(union, this.ranges[hi - count]))) {\n                    union = tmp;\n                    count++;\n                }\n                // The given target touches or overlaps one or more of the existing ranges\n                return { lo: hi + 1 - count, count: count, union: union };\n            }\n            else if (r[1] < target[0]) {\n                // The given target does not touch nor overlap the existing ranges\n                return { lo: hi + 1, count: 0, union: target };\n            }\n        }\n        // The given target is smaller than the smallest existing range\n        return { lo: 0, count: 0, union: target };\n    };\n    /**\n     * Calculates the union of two specified ranges.\n     * @param a Range A\n     * @param b Range B\n     * @return Union of a and b. Null if a and b do not touch nor intersect.\n     */\n    MultiRange.prototype.calcUnion = function (a, b) {\n        if (a[1] + 1 < b[0] || a[0] - 1 > b[1]) {\n            return null; // cannot make union\n        }\n        return [Math.min(a[0], b[0]), Math.max(a[1], b[1])];\n    };\n    /**\n     * Exports the whole range data as an array of arrays.\n     */\n    MultiRange.prototype.getRanges = function () {\n        var result = [];\n        for (var _i = 0, _a = this.ranges; _i < _a.length; _i++) {\n            var r = _a[_i];\n            result.push([r[0], r[1]]);\n        }\n        return result;\n    };\n    /**\n     * Checks if the instance contains the specified value.\n     * @param value Value to be checked\n     * @return True if the specified value is included in the instance.\n     */\n    MultiRange.prototype.has = function (value) {\n        if (value === undefined) {\n            throw new TypeError('Invalid input');\n        }\n        else if (value instanceof MultiRange) {\n            var s = 0;\n            var len = this.ranges.length;\n            for (var _i = 0, _a = value.ranges; _i < _a.length; _i++) {\n                var tr = _a[_i];\n                var i = void 0;\n                for (i = s; i < len; i++) {\n                    var my = this.ranges[i];\n                    if (tr[0] >= my[0] && tr[1] <= my[1] && tr[1] >= my[0] && tr[1] <= my[1])\n                        break;\n                }\n                if (i === len)\n                    return false;\n            }\n            return true;\n        }\n        else {\n            return this.has(new MultiRange(value));\n        }\n    };\n    /**\n     * Checks if the instance contains the range specified by the two parameters.\n     * @param min The minimum value of the range to subtract.\n     * @param max The minimum value of the range to subtract.\n     * @return True if the specified value is included in the instance.\n     */\n    MultiRange.prototype.hasRange = function (min, max) {\n        return this.has(new MultiRange([[min, max]]));\n    };\n    /**\n     * Returns the number of range segments.\n     * For example, the segmentLength of `2-5,7,9-11' is 3.\n     * Returns 0 for an empty instance.\n     * @return The number of segments.\n     */\n    MultiRange.prototype.segmentLength = function () {\n        return this.ranges.length;\n    };\n    /**\n     * Calculates how many numbers are effectively included in this instance.\n     * (i.e. '1-10,51-60,90' returns 21)\n     * @return The number of integer values in this instance.\n     *    Returns `Infinity` for unbounded ranges.\n     */\n    MultiRange.prototype.length = function () {\n        if (this.isUnbounded())\n            return Infinity;\n        var result = 0;\n        for (var _i = 0, _a = this.ranges; _i < _a.length; _i++) {\n            var r = _a[_i];\n            result += r[1] - r[0] + 1;\n        }\n        return result;\n    };\n    /**\n     * Checks if two instances of MultiRange are identical.\n     * @param cmp The data to compare.\n     * @return True if cmp is exactly the same as this instance.\n     */\n    MultiRange.prototype.equals = function (cmp) {\n        if (cmp === undefined) {\n            throw new TypeError('Invalid input');\n        }\n        else if (cmp instanceof MultiRange) {\n            if (cmp === this)\n                return true;\n            if (this.ranges.length !== cmp.ranges.length)\n                return false;\n            for (var i = 0; i < this.ranges.length; i++) {\n                if (this.ranges[i][0] !== cmp.ranges[i][0] || this.ranges[i][1] !== cmp.ranges[i][1])\n                    return false;\n            }\n            return true;\n        }\n        else {\n            return this.equals(new MultiRange(cmp));\n        }\n    };\n    /**\n     * Checks if the current instance is unbounded (i.e., infinite).\n     */\n    MultiRange.prototype.isUnbounded = function () {\n        return (this.ranges.length > 0\n            && (this.ranges[0][0] === -Infinity ||\n                this.ranges[this.ranges.length - 1][1] === Infinity));\n    };\n    /**\n     * Returns the minimum number contained in this insntance. Can be -Infinity or undefined.\n     */\n    MultiRange.prototype.min = function () {\n        if (this.ranges.length === 0)\n            return undefined;\n        return this.ranges[0][0];\n    };\n    /**\n     * Returns the maximum number contained in this insntance. Can be +Infinity or undefined.\n     */\n    MultiRange.prototype.max = function () {\n        if (this.ranges.length === 0)\n            return undefined;\n        return this.ranges[this.ranges.length - 1][1];\n    };\n    /**\n     * Removes the smallest integer from this instance and returns that integer.\n     */\n    MultiRange.prototype.shift = function () {\n        var min = this.min();\n        if (min === -Infinity)\n            throw new RangeError('shift() was invoked on an unbounded MultiRange which contains -Infinity');\n        if (min !== undefined)\n            this.subtract(min);\n        return min;\n    };\n    /**\n     * Removes the largest integer from this instance and returns that integer.\n     */\n    MultiRange.prototype.pop = function () {\n        var max = this.max();\n        if (max === Infinity)\n            throw new RangeError('pop() was invoked on an unbounded MultiRange which contains +Infinity');\n        if (max !== undefined)\n            this.subtract(max);\n        return max;\n    };\n    /**\n     * Returns the string respresentation of this MultiRange.\n     */\n    MultiRange.prototype.toString = function () {\n        function wrap(i) {\n            return (i >= 0 ? String(i) : \"(\" + i + \")\");\n        }\n        var ranges = [];\n        for (var _i = 0, _a = this.ranges; _i < _a.length; _i++) {\n            var r = _a[_i];\n            if (r[0] === -Infinity) {\n                if (r[1] === Infinity) {\n                    ranges.push('-');\n                }\n                else {\n                    ranges.push(\"-\" + wrap(r[1]));\n                }\n            }\n            else if (r[1] === Infinity) {\n                ranges.push(wrap(r[0]) + \"-\");\n            }\n            else if (r[0] == r[1]) {\n                ranges.push(wrap(r[0]));\n            }\n            else {\n                ranges.push(wrap(r[0]) + \"-\" + wrap(r[1]));\n            }\n        }\n        return ranges.join(',');\n    };\n    /**\n     * Builds an array of integer which holds all elements in this MultiRange.\n     * Note that this may be slow and memory-consuming for large ranges such as '1-10000'.\n     */\n    MultiRange.prototype.toArray = function () {\n        if (this.isUnbounded()) {\n            throw new RangeError('You cannot build an array from an unbounded range');\n        }\n        var result = new Array(this.length());\n        var idx = 0;\n        for (var _i = 0, _a = this.ranges; _i < _a.length; _i++) {\n            var r = _a[_i];\n            for (var n = r[0]; n <= r[1]; n++) {\n                result[idx++] = n;\n            }\n        }\n        return result;\n    };\n    /**\n     * Returns ES6-compatible iterator.\n     */\n    MultiRange.prototype.getIterator = function () {\n        var _this = this;\n        if (this.isUnbounded()) {\n            throw new RangeError('Unbounded ranges cannot be iterated over');\n        }\n        var i = 0, curRange = this.ranges[i], j = curRange ? curRange[0] : undefined;\n        return {\n            next: function () {\n                if (!curRange)\n                    return { done: true };\n                var ret = j;\n                if (++j > curRange[1]) {\n                    curRange = _this.ranges[++i];\n                    j = curRange ? curRange[0] : undefined;\n                }\n                return { value: ret };\n            }\n        };\n    };\n    return MultiRange;\n}());\nexports.MultiRange = MultiRange;\n// Set ES6 iterator, if Symbol.iterator is defined\n/* istanbul ignore else */\nif (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n    MultiRange.prototype[Symbol.iterator] = MultiRange.prototype.getIterator;\n}\n// A shorthand function to get a new MultiRange instance\nfunction multirange(data) {\n    return new MultiRange(data);\n}\nexports.multirange = multirange;\n", "\"use strict\"\n\nfunction iota(n) {\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = i\n  }\n  return result\n}\n\nmodule.exports = iota", "/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n", "var iota = require(\"iota-array\")\nvar isBuffer = require(\"is-buffer\")\n\nvar hasTypedArrays  = ((typeof Float64Array) !== \"undefined\")\n\nfunction compare1st(a, b) {\n  return a[0] - b[0]\n}\n\nfunction order() {\n  var stride = this.stride\n  var terms = new Array(stride.length)\n  var i\n  for(i=0; i<terms.length; ++i) {\n    terms[i] = [Math.abs(stride[i]), i]\n  }\n  terms.sort(compare1st)\n  var result = new Array(terms.length)\n  for(i=0; i<result.length; ++i) {\n    result[i] = terms[i][1]\n  }\n  return result\n}\n\nfunction compileConstructor(dtype, dimension) {\n  var className = [\"View\", dimension, \"d\", dtype].join(\"\")\n  if(dimension < 0) {\n    className = \"View_Nil\" + dtype\n  }\n  var useGetters = (dtype === \"generic\")\n\n  if(dimension === -1) {\n    //Special case for trivial arrays\n    var code =\n      \"function \"+className+\"(a){this.data=a;};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return -1};\\\nproto.size=0;\\\nproto.dimension=-1;\\\nproto.shape=proto.stride=proto.order=[];\\\nproto.lo=proto.hi=proto.transpose=proto.step=\\\nfunction(){return new \"+className+\"(this.data);};\\\nproto.get=proto.set=function(){};\\\nproto.pick=function(){return null};\\\nreturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\"\n    var procedure = new Function(code)\n    return procedure()\n  } else if(dimension === 0) {\n    //Special case for 0d arrays\n    var code =\n      \"function \"+className+\"(a,d) {\\\nthis.data = a;\\\nthis.offset = d\\\n};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return this.offset};\\\nproto.dimension=0;\\\nproto.size=1;\\\nproto.shape=\\\nproto.stride=\\\nproto.order=[];\\\nproto.lo=\\\nproto.hi=\\\nproto.transpose=\\\nproto.step=function \"+className+\"_copy() {\\\nreturn new \"+className+\"(this.data,this.offset)\\\n};\\\nproto.pick=function \"+className+\"_pick(){\\\nreturn TrivialArray(this.data);\\\n};\\\nproto.valueOf=proto.get=function \"+className+\"_get(){\\\nreturn \"+(useGetters ? \"this.data.get(this.offset)\" : \"this.data[this.offset]\")+\n\"};\\\nproto.set=function \"+className+\"_set(v){\\\nreturn \"+(useGetters ? \"this.data.set(this.offset,v)\" : \"this.data[this.offset]=v\")+\"\\\n};\\\nreturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\"\n    var procedure = new Function(\"TrivialArray\", code)\n    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n  }\n\n  var code = [\"'use strict'\"]\n\n  //Create constructor for view\n  var indices = iota(dimension)\n  var args = indices.map(function(i) { return \"i\"+i })\n  var index_str = \"this.offset+\" + indices.map(function(i) {\n        return \"this.stride[\" + i + \"]*i\" + i\n      }).join(\"+\")\n  var shapeArg = indices.map(function(i) {\n      return \"b\"+i\n    }).join(\",\")\n  var strideArg = indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")\n  code.push(\n    \"function \"+className+\"(a,\" + shapeArg + \",\" + strideArg + \",d){this.data=a\",\n      \"this.shape=[\" + shapeArg + \"]\",\n      \"this.stride=[\" + strideArg + \"]\",\n      \"this.offset=d|0}\",\n    \"var proto=\"+className+\".prototype\",\n    \"proto.dtype='\"+dtype+\"'\",\n    \"proto.dimension=\"+dimension)\n\n  //view.size:\n  code.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\nreturn \"+indices.map(function(i) { return \"this.shape[\"+i+\"]\" }).join(\"*\"),\n\"}})\")\n\n  //view.order:\n  if(dimension === 1) {\n    code.push(\"proto.order=[0]\")\n  } else {\n    code.push(\"Object.defineProperty(proto,'order',{get:\")\n    if(dimension < 4) {\n      code.push(\"function \"+className+\"_order(){\")\n      if(dimension === 2) {\n        code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\")\n      } else if(dimension === 3) {\n        code.push(\n\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\nif(s0>s1){\\\nif(s1>s2){\\\nreturn [2,1,0];\\\n}else if(s0>s2){\\\nreturn [1,2,0];\\\n}else{\\\nreturn [1,0,2];\\\n}\\\n}else if(s0>s2){\\\nreturn [2,0,1];\\\n}else if(s2>s1){\\\nreturn [0,1,2];\\\n}else{\\\nreturn [0,2,1];\\\n}}})\")\n      }\n    } else {\n      code.push(\"ORDER})\")\n    }\n  }\n\n  //view.set(i0, ..., v):\n  code.push(\n\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\")\n  if(useGetters) {\n    code.push(\"return this.data.set(\"+index_str+\",v)}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]=v}\")\n  }\n\n  //view.get(i0, ...):\n  code.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\")\n  if(useGetters) {\n    code.push(\"return this.data.get(\"+index_str+\")}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]}\")\n  }\n\n  //view.index:\n  code.push(\n    \"proto.index=function \"+className+\"_index(\", args.join(), \"){return \"+index_str+\"}\")\n\n  //view.hi():\n  code.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return [\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\", i, \"]:i\", i,\"|0\"].join(\"\")\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"this.stride[\"+i + \"]\"\n    }).join(\",\")+\",this.offset)}\")\n\n  //view.lo():\n  var a_vars = indices.map(function(i) { return \"a\"+i+\"=this.shape[\"+i+\"]\" })\n  var c_vars = indices.map(function(i) { return \"c\"+i+\"=this.stride[\"+i+\"]\" })\n  code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"))\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\nd=i\"+i+\"|0;\\\nb+=c\"+i+\"*d;\\\na\"+i+\"-=d}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\"+i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")+\",b)}\")\n\n  //view.step():\n  code.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+\n    indices.map(function(i) {\n      return \"a\"+i+\"=this.shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\"+i+\"=this.stride[\"+i+\"]\"\n    }).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'){\\\nd=i\"+i+\"|0;\\\nif(d<0){\\\nc+=b\"+i+\"*(a\"+i+\"-1);\\\na\"+i+\"=ceil(-a\"+i+\"/d)\\\n}else{\\\na\"+i+\"=ceil(a\"+i+\"/d)\\\n}\\\nb\"+i+\"*=d\\\n}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\" + i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\" + i\n    }).join(\",\")+\",c)}\")\n\n  //view.transpose():\n  var tShape = new Array(dimension)\n  var tStride = new Array(dimension)\n  for(var i=0; i<dimension; ++i) {\n    tShape[i] = \"a[i\"+i+\"]\"\n    tStride[i] = \"b[i\"+i+\"]\"\n  }\n  code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+\n    args.map(function(n,idx) { return n + \"=(\" + n + \"===undefined?\" + idx + \":\" + n + \"|0)\"}).join(\";\"),\n    \"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\")\n\n  //view.pick():\n  code.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\")\n  }\n  code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\")\n\n  //Add return statement\n  code.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+\n    indices.map(function(i) {\n      return \"shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"stride[\"+i+\"]\"\n    }).join(\",\")+\",offset)}\")\n\n  //Compile procedure\n  var procedure = new Function(\"CTOR_LIST\", \"ORDER\", code.join(\"\\n\"))\n  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n}\n\nfunction arrayDType(data) {\n  if(isBuffer(data)) {\n    return \"buffer\"\n  }\n  if(hasTypedArrays) {\n    switch(Object.prototype.toString.call(data)) {\n      case \"[object Float64Array]\":\n        return \"float64\"\n      case \"[object Float32Array]\":\n        return \"float32\"\n      case \"[object Int8Array]\":\n        return \"int8\"\n      case \"[object Int16Array]\":\n        return \"int16\"\n      case \"[object Int32Array]\":\n        return \"int32\"\n      case \"[object Uint8Array]\":\n        return \"uint8\"\n      case \"[object Uint16Array]\":\n        return \"uint16\"\n      case \"[object Uint32Array]\":\n        return \"uint32\"\n      case \"[object Uint8ClampedArray]\":\n        return \"uint8_clamped\"\n      case \"[object BigInt64Array]\":\n        return \"bigint64\"\n      case \"[object BigUint64Array]\":\n        return \"biguint64\"\n    }\n  }\n  if(Array.isArray(data)) {\n    return \"array\"\n  }\n  return \"generic\"\n}\n\nvar CACHED_CONSTRUCTORS = {\n  \"float32\":[],\n  \"float64\":[],\n  \"int8\":[],\n  \"int16\":[],\n  \"int32\":[],\n  \"uint8\":[],\n  \"uint16\":[],\n  \"uint32\":[],\n  \"array\":[],\n  \"uint8_clamped\":[],\n  \"bigint64\": [],\n  \"biguint64\": [],\n  \"buffer\":[],\n  \"generic\":[]\n}\n\n;(function() {\n  for(var id in CACHED_CONSTRUCTORS) {\n    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n  }\n});\n\nfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n  if(data === undefined) {\n    var ctor = CACHED_CONSTRUCTORS.array[0]\n    return ctor([])\n  } else if(typeof data === \"number\") {\n    data = [data]\n  }\n  if(shape === undefined) {\n    shape = [ data.length ]\n  }\n  var d = shape.length\n  if(stride === undefined) {\n    stride = new Array(d)\n    for(var i=d-1, sz=1; i>=0; --i) {\n      stride[i] = sz\n      sz *= shape[i]\n    }\n  }\n  if(offset === undefined) {\n    offset = 0\n    for(var i=0; i<d; ++i) {\n      if(stride[i] < 0) {\n        offset -= (shape[i]-1)*stride[i]\n      }\n    }\n  }\n  var dtype = arrayDType(data)\n  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n  while(ctor_list.length <= d+1) {\n    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n  }\n  var ctor = ctor_list[d+1]\n  return ctor(data, shape, stride, offset)\n}\n\nmodule.exports = wrappedNDArrayCtor\n", "\"use strict\"\n\nfunction unique_pred(list, compare) {\n  var ptr = 1\n    , len = list.length\n    , a=list[0], b=list[0]\n  for(var i=1; i<len; ++i) {\n    b = a\n    a = list[i]\n    if(compare(a, b)) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      list[ptr++] = a\n    }\n  }\n  list.length = ptr\n  return list\n}\n\nfunction unique_eq(list) {\n  var ptr = 1\n    , len = list.length\n    , a=list[0], b = list[0]\n  for(var i=1; i<len; ++i, b=a) {\n    b = a\n    a = list[i]\n    if(a !== b) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      list[ptr++] = a\n    }\n  }\n  list.length = ptr\n  return list\n}\n\nfunction unique(list, compare, sorted) {\n  if(list.length === 0) {\n    return list\n  }\n  if(compare) {\n    if(!sorted) {\n      list.sort(compare)\n    }\n    return unique_pred(list, compare)\n  }\n  if(!sorted) {\n    list.sort()\n  }\n  return unique_eq(list)\n}\n\nmodule.exports = unique\n", "\"use strict\"\n\nvar uniq = require(\"uniq\")\n\n// This function generates very simple loops analogous to how you typically traverse arrays (the outermost loop corresponds to the slowest changing index, the innermost loop to the fastest changing index)\n// TODO: If two arrays have the same strides (and offsets) there is potential for decreasing the number of \"pointers\" and related variables. The drawback is that the type signature would become more specific and that there would thus be less potential for caching, but it might still be worth it, especially when dealing with large numbers of arguments.\nfunction innerFill(order, proc, body) {\n  var dimension = order.length\n    , nargs = proc.arrayArgs.length\n    , has_index = proc.indexArgs.length>0\n    , code = []\n    , vars = []\n    , idx=0, pidx=0, i, j\n  for(i=0; i<dimension; ++i) { // Iteration variables\n    vars.push([\"i\",i,\"=0\"].join(\"\"))\n  }\n  //Compute scan deltas\n  for(j=0; j<nargs; ++j) {\n    for(i=0; i<dimension; ++i) {\n      pidx = idx\n      idx = order[i]\n      if(i === 0) { // The innermost/fastest dimension's delta is simply its stride\n        vars.push([\"d\",j,\"s\",i,\"=t\",j,\"p\",idx].join(\"\"))\n      } else { // For other dimensions the delta is basically the stride minus something which essentially \"rewinds\" the previous (more inner) dimension\n        vars.push([\"d\",j,\"s\",i,\"=(t\",j,\"p\",idx,\"-s\",pidx,\"*t\",j,\"p\",pidx,\")\"].join(\"\"))\n      }\n    }\n  }\n  if (vars.length > 0) {\n    code.push(\"var \" + vars.join(\",\"))\n  }  \n  //Scan loop\n  for(i=dimension-1; i>=0; --i) { // Start at largest stride and work your way inwards\n    idx = order[i]\n    code.push([\"for(i\",i,\"=0;i\",i,\"<s\",idx,\";++i\",i,\"){\"].join(\"\"))\n  }\n  //Push body of inner loop\n  code.push(body)\n  //Advance scan pointers\n  for(i=0; i<dimension; ++i) {\n    pidx = idx\n    idx = order[i]\n    for(j=0; j<nargs; ++j) {\n      code.push([\"p\",j,\"+=d\",j,\"s\",i].join(\"\"))\n    }\n    if(has_index) {\n      if(i > 0) {\n        code.push([\"index[\",pidx,\"]-=s\",pidx].join(\"\"))\n      }\n      code.push([\"++index[\",idx,\"]\"].join(\"\"))\n    }\n    code.push(\"}\")\n  }\n  return code.join(\"\\n\")\n}\n\n// Generate \"outer\" loops that loop over blocks of data, applying \"inner\" loops to the blocks by manipulating the local variables in such a way that the inner loop only \"sees\" the current block.\n// TODO: If this is used, then the previous declaration (done by generateCwiseOp) of s* is essentially unnecessary.\n//       I believe the s* are not used elsewhere (in particular, I don't think they're used in the pre/post parts and \"shape\" is defined independently), so it would be possible to make defining the s* dependent on what loop method is being used.\nfunction outerFill(matched, order, proc, body) {\n  var dimension = order.length\n    , nargs = proc.arrayArgs.length\n    , blockSize = proc.blockSize\n    , has_index = proc.indexArgs.length > 0\n    , code = []\n  for(var i=0; i<nargs; ++i) {\n    code.push([\"var offset\",i,\"=p\",i].join(\"\"))\n  }\n  //Generate loops for unmatched dimensions\n  // The order in which these dimensions are traversed is fairly arbitrary (from small stride to large stride, for the first argument)\n  // TODO: It would be nice if the order in which these loops are placed would also be somehow \"optimal\" (at the very least we should check that it really doesn't hurt us if they're not).\n  for(var i=matched; i<dimension; ++i) {\n    code.push([\"for(var j\"+i+\"=SS[\", order[i], \"]|0;j\", i, \">0;){\"].join(\"\")) // Iterate back to front\n    code.push([\"if(j\",i,\"<\",blockSize,\"){\"].join(\"\")) // Either decrease j by blockSize (s = blockSize), or set it to zero (after setting s = j).\n    code.push([\"s\",order[i],\"=j\",i].join(\"\"))\n    code.push([\"j\",i,\"=0\"].join(\"\"))\n    code.push([\"}else{s\",order[i],\"=\",blockSize].join(\"\"))\n    code.push([\"j\",i,\"-=\",blockSize,\"}\"].join(\"\"))\n    if(has_index) {\n      code.push([\"index[\",order[i],\"]=j\",i].join(\"\"))\n    }\n  }\n  for(var i=0; i<nargs; ++i) {\n    var indexStr = [\"offset\"+i]\n    for(var j=matched; j<dimension; ++j) {\n      indexStr.push([\"j\",j,\"*t\",i,\"p\",order[j]].join(\"\"))\n    }\n    code.push([\"p\",i,\"=(\",indexStr.join(\"+\"),\")\"].join(\"\"))\n  }\n  code.push(innerFill(order, proc, body))\n  for(var i=matched; i<dimension; ++i) {\n    code.push(\"}\")\n  }\n  return code.join(\"\\n\")\n}\n\n//Count the number of compatible inner orders\n// This is the length of the longest common prefix of the arrays in orders.\n// Each array in orders lists the dimensions of the correspond ndarray in order of increasing stride.\n// This is thus the maximum number of dimensions that can be efficiently traversed by simple nested loops for all arrays.\nfunction countMatches(orders) {\n  var matched = 0, dimension = orders[0].length\n  while(matched < dimension) {\n    for(var j=1; j<orders.length; ++j) {\n      if(orders[j][matched] !== orders[0][matched]) {\n        return matched\n      }\n    }\n    ++matched\n  }\n  return matched\n}\n\n//Processes a block according to the given data types\n// Replaces variable names by different ones, either \"local\" ones (that are then ferried in and out of the given array) or ones matching the arguments that the function performing the ultimate loop will accept.\nfunction processBlock(block, proc, dtypes) {\n  var code = block.body\n  var pre = []\n  var post = []\n  for(var i=0; i<block.args.length; ++i) {\n    var carg = block.args[i]\n    if(carg.count <= 0) {\n      continue\n    }\n    var re = new RegExp(carg.name, \"g\")\n    var ptrStr = \"\"\n    var arrNum = proc.arrayArgs.indexOf(i)\n    switch(proc.argTypes[i]) {\n      case \"offset\":\n        var offArgIndex = proc.offsetArgIndex.indexOf(i)\n        var offArg = proc.offsetArgs[offArgIndex]\n        arrNum = offArg.array\n        ptrStr = \"+q\" + offArgIndex // Adds offset to the \"pointer\" in the array\n      case \"array\":\n        ptrStr = \"p\" + arrNum + ptrStr\n        var localStr = \"l\" + i\n        var arrStr = \"a\" + arrNum\n        if (proc.arrayBlockIndices[arrNum] === 0) { // Argument to body is just a single value from this array\n          if(carg.count === 1) { // Argument/array used only once(?)\n            if(dtypes[arrNum] === \"generic\") {\n              if(carg.lvalue) {\n                pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\n                code = code.replace(re, localStr)\n                post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n              } else {\n                code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\n              }\n            } else {\n              code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\n            }\n          } else if(dtypes[arrNum] === \"generic\") {\n            pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\n            code = code.replace(re, localStr)\n            if(carg.lvalue) {\n              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n            }\n          } else {\n            pre.push([\"var \", localStr, \"=\", arrStr, \"[\", ptrStr, \"]\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\n            code = code.replace(re, localStr)\n            if(carg.lvalue) {\n              post.push([arrStr, \"[\", ptrStr, \"]=\", localStr].join(\"\"))\n            }\n          }\n        } else { // Argument to body is a \"block\"\n          var reStrArr = [carg.name], ptrStrArr = [ptrStr]\n          for(var j=0; j<Math.abs(proc.arrayBlockIndices[arrNum]); j++) {\n            reStrArr.push(\"\\\\s*\\\\[([^\\\\]]+)\\\\]\")\n            ptrStrArr.push(\"$\" + (j+1) + \"*t\" + arrNum + \"b\" + j) // Matched index times stride\n          }\n          re = new RegExp(reStrArr.join(\"\"), \"g\")\n          ptrStr = ptrStrArr.join(\"+\")\n          if(dtypes[arrNum] === \"generic\") {\n            /*if(carg.lvalue) {\n              pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\n              code = code.replace(re, localStr)\n              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n            } else {\n              code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\n            }*/\n            throw new Error(\"cwise: Generic arrays not supported in combination with blocks!\")\n          } else {\n            // This does not produce any local variables, even if variables are used multiple times. It would be possible to do so, but it would complicate things quite a bit.\n            code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\n          }\n        }\n      break\n      case \"scalar\":\n        code = code.replace(re, \"Y\" + proc.scalarArgs.indexOf(i))\n      break\n      case \"index\":\n        code = code.replace(re, \"index\")\n      break\n      case \"shape\":\n        code = code.replace(re, \"shape\")\n      break\n    }\n  }\n  return [pre.join(\"\\n\"), code, post.join(\"\\n\")].join(\"\\n\").trim()\n}\n\nfunction typeSummary(dtypes) {\n  var summary = new Array(dtypes.length)\n  var allEqual = true\n  for(var i=0; i<dtypes.length; ++i) {\n    var t = dtypes[i]\n    var digits = t.match(/\\d+/)\n    if(!digits) {\n      digits = \"\"\n    } else {\n      digits = digits[0]\n    }\n    if(t.charAt(0) === 0) {\n      summary[i] = \"u\" + t.charAt(1) + digits\n    } else {\n      summary[i] = t.charAt(0) + digits\n    }\n    if(i > 0) {\n      allEqual = allEqual && summary[i] === summary[i-1]\n    }\n  }\n  if(allEqual) {\n    return summary[0]\n  }\n  return summary.join(\"\")\n}\n\n//Generates a cwise operator\nfunction generateCWiseOp(proc, typesig) {\n\n  //Compute dimension\n  // Arrays get put first in typesig, and there are two entries per array (dtype and order), so this gets the number of dimensions in the first array arg.\n  var dimension = (typesig[1].length - Math.abs(proc.arrayBlockIndices[0]))|0\n  var orders = new Array(proc.arrayArgs.length)\n  var dtypes = new Array(proc.arrayArgs.length)\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    dtypes[i] = typesig[2*i]\n    orders[i] = typesig[2*i+1]\n  }\n  \n  //Determine where block and loop indices start and end\n  var blockBegin = [], blockEnd = [] // These indices are exposed as blocks\n  var loopBegin = [], loopEnd = [] // These indices are iterated over\n  var loopOrders = [] // orders restricted to the loop indices\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    if (proc.arrayBlockIndices[i]<0) {\n      loopBegin.push(0)\n      loopEnd.push(dimension)\n      blockBegin.push(dimension)\n      blockEnd.push(dimension+proc.arrayBlockIndices[i])\n    } else {\n      loopBegin.push(proc.arrayBlockIndices[i]) // Non-negative\n      loopEnd.push(proc.arrayBlockIndices[i]+dimension)\n      blockBegin.push(0)\n      blockEnd.push(proc.arrayBlockIndices[i])\n    }\n    var newOrder = []\n    for(var j=0; j<orders[i].length; j++) {\n      if (loopBegin[i]<=orders[i][j] && orders[i][j]<loopEnd[i]) {\n        newOrder.push(orders[i][j]-loopBegin[i]) // If this is a loop index, put it in newOrder, subtracting loopBegin, to make sure that all loopOrders are using a common set of indices.\n      }\n    }\n    loopOrders.push(newOrder)\n  }\n\n  //First create arguments for procedure\n  var arglist = [\"SS\"] // SS is the overall shape over which we iterate\n  var code = [\"'use strict'\"]\n  var vars = []\n  \n  for(var j=0; j<dimension; ++j) {\n    vars.push([\"s\", j, \"=SS[\", j, \"]\"].join(\"\")) // The limits for each dimension.\n  }\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    arglist.push(\"a\"+i) // Actual data array\n    arglist.push(\"t\"+i) // Strides\n    arglist.push(\"p\"+i) // Offset in the array at which the data starts (also used for iterating over the data)\n    \n    for(var j=0; j<dimension; ++j) { // Unpack the strides into vars for looping\n      vars.push([\"t\",i,\"p\",j,\"=t\",i,\"[\",loopBegin[i]+j,\"]\"].join(\"\"))\n    }\n    \n    for(var j=0; j<Math.abs(proc.arrayBlockIndices[i]); ++j) { // Unpack the strides into vars for block iteration\n      vars.push([\"t\",i,\"b\",j,\"=t\",i,\"[\",blockBegin[i]+j,\"]\"].join(\"\"))\n    }\n  }\n  for(var i=0; i<proc.scalarArgs.length; ++i) {\n    arglist.push(\"Y\" + i)\n  }\n  if(proc.shapeArgs.length > 0) {\n    vars.push(\"shape=SS.slice(0)\") // Makes the shape over which we iterate available to the user defined functions (so you can use width/height for example)\n  }\n  if(proc.indexArgs.length > 0) {\n    // Prepare an array to keep track of the (logical) indices, initialized to dimension zeroes.\n    var zeros = new Array(dimension)\n    for(var i=0; i<dimension; ++i) {\n      zeros[i] = \"0\"\n    }\n    vars.push([\"index=[\", zeros.join(\",\"), \"]\"].join(\"\"))\n  }\n  for(var i=0; i<proc.offsetArgs.length; ++i) { // Offset arguments used for stencil operations\n    var off_arg = proc.offsetArgs[i]\n    var init_string = []\n    for(var j=0; j<off_arg.offset.length; ++j) {\n      if(off_arg.offset[j] === 0) {\n        continue\n      } else if(off_arg.offset[j] === 1) {\n        init_string.push([\"t\", off_arg.array, \"p\", j].join(\"\"))      \n      } else {\n        init_string.push([off_arg.offset[j], \"*t\", off_arg.array, \"p\", j].join(\"\"))\n      }\n    }\n    if(init_string.length === 0) {\n      vars.push(\"q\" + i + \"=0\")\n    } else {\n      vars.push([\"q\", i, \"=\", init_string.join(\"+\")].join(\"\"))\n    }\n  }\n\n  //Prepare this variables\n  var thisVars = uniq([].concat(proc.pre.thisVars)\n                      .concat(proc.body.thisVars)\n                      .concat(proc.post.thisVars))\n  vars = vars.concat(thisVars)\n  if (vars.length > 0) {\n    code.push(\"var \" + vars.join(\",\"))\n  }\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    code.push(\"p\"+i+\"|=0\")\n  }\n  \n  //Inline prelude\n  if(proc.pre.body.length > 3) {\n    code.push(processBlock(proc.pre, proc, dtypes))\n  }\n\n  //Process body\n  var body = processBlock(proc.body, proc, dtypes)\n  var matched = countMatches(loopOrders)\n  if(matched < dimension) {\n    code.push(outerFill(matched, loopOrders[0], proc, body)) // TODO: Rather than passing loopOrders[0], it might be interesting to look at passing an order that represents the majority of the arguments for example.\n  } else {\n    code.push(innerFill(loopOrders[0], proc, body))\n  }\n\n  //Inline epilog\n  if(proc.post.body.length > 3) {\n    code.push(processBlock(proc.post, proc, dtypes))\n  }\n  \n  if(proc.debug) {\n    console.log(\"-----Generated cwise routine for \", typesig, \":\\n\" + code.join(\"\\n\") + \"\\n----------\")\n  }\n  \n  var loopName = [(proc.funcName||\"unnamed\"), \"_cwise_loop_\", orders[0].join(\"s\"),\"m\",matched,typeSummary(dtypes)].join(\"\")\n  var f = new Function([\"function \",loopName,\"(\", arglist.join(\",\"),\"){\", code.join(\"\\n\"),\"} return \", loopName].join(\"\"))\n  return f()\n}\nmodule.exports = generateCWiseOp\n", "\"use strict\"\n\n// The function below is called when constructing a cwise function object, and does the following:\n// A function object is constructed which accepts as argument a compilation function and returns another function.\n// It is this other function that is eventually returned by createThunk, and this function is the one that actually\n// checks whether a certain pattern of arguments has already been used before and compiles new loops as needed.\n// The compilation passed to the first function object is used for compiling new functions.\n// Once this function object is created, it is called with compile as argument, where the first argument of compile\n// is bound to \"proc\" (essentially containing a preprocessed version of the user arguments to cwise).\n// So createThunk roughly works like this:\n// function createThunk(proc) {\n//   var thunk = function(compileBound) {\n//     var CACHED = {}\n//     return function(arrays and scalars) {\n//       if (dtype and order of arrays in CACHED) {\n//         var func = CACHED[dtype and order of arrays]\n//       } else {\n//         var func = CACHED[dtype and order of arrays] = compileBound(dtype and order of arrays)\n//       }\n//       return func(arrays and scalars)\n//     }\n//   }\n//   return thunk(compile.bind1(proc))\n// }\n\nvar compile = require(\"./compile.js\")\n\nfunction createThunk(proc) {\n  var code = [\"'use strict'\", \"var CACHED={}\"]\n  var vars = []\n  var thunkName = proc.funcName + \"_cwise_thunk\"\n  \n  //Build thunk\n  code.push([\"return function \", thunkName, \"(\", proc.shimArgs.join(\",\"), \"){\"].join(\"\"))\n  var typesig = []\n  var string_typesig = []\n  var proc_args = [[\"array\",proc.arrayArgs[0],\".shape.slice(\", // Slice shape so that we only retain the shape over which we iterate (which gets passed to the cwise operator as SS).\n                    Math.max(0,proc.arrayBlockIndices[0]),proc.arrayBlockIndices[0]<0?(\",\"+proc.arrayBlockIndices[0]+\")\"):\")\"].join(\"\")]\n  var shapeLengthConditions = [], shapeConditions = []\n  // Process array arguments\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    var j = proc.arrayArgs[i]\n    vars.push([\"t\", j, \"=array\", j, \".dtype,\",\n               \"r\", j, \"=array\", j, \".order\"].join(\"\"))\n    typesig.push(\"t\" + j)\n    typesig.push(\"r\" + j)\n    string_typesig.push(\"t\"+j)\n    string_typesig.push(\"r\"+j+\".join()\")\n    proc_args.push(\"array\" + j + \".data\")\n    proc_args.push(\"array\" + j + \".stride\")\n    proc_args.push(\"array\" + j + \".offset|0\")\n    if (i>0) { // Gather conditions to check for shape equality (ignoring block indices)\n      shapeLengthConditions.push(\"array\" + proc.arrayArgs[0] + \".shape.length===array\" + j + \".shape.length+\" + (Math.abs(proc.arrayBlockIndices[0])-Math.abs(proc.arrayBlockIndices[i])))\n      shapeConditions.push(\"array\" + proc.arrayArgs[0] + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[0]) + \"]===array\" + j + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[i]) + \"]\")\n    }\n  }\n  // Check for shape equality\n  if (proc.arrayArgs.length > 1) {\n    code.push(\"if (!(\" + shapeLengthConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same dimensionality!')\")\n    code.push(\"for(var shapeIndex=array\" + proc.arrayArgs[0] + \".shape.length-\" + Math.abs(proc.arrayBlockIndices[0]) + \"; shapeIndex-->0;) {\")\n    code.push(\"if (!(\" + shapeConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same shape!')\")\n    code.push(\"}\")\n  }\n  // Process scalar arguments\n  for(var i=0; i<proc.scalarArgs.length; ++i) {\n    proc_args.push(\"scalar\" + proc.scalarArgs[i])\n  }\n  // Check for cached function (and if not present, generate it)\n  vars.push([\"type=[\", string_typesig.join(\",\"), \"].join()\"].join(\"\"))\n  vars.push(\"proc=CACHED[type]\")\n  code.push(\"var \" + vars.join(\",\"))\n  \n  code.push([\"if(!proc){\",\n             \"CACHED[type]=proc=compile([\", typesig.join(\",\"), \"])}\",\n             \"return proc(\", proc_args.join(\",\"), \")}\"].join(\"\"))\n\n  if(proc.debug) {\n    console.log(\"-----Generated thunk:\\n\" + code.join(\"\\n\") + \"\\n----------\")\n  }\n  \n  //Compile thunk\n  var thunk = new Function(\"compile\", code.join(\"\\n\"))\n  return thunk(compile.bind(undefined, proc))\n}\n\nmodule.exports = createThunk\n", "\"use strict\"\n\nvar createThunk = require(\"./lib/thunk.js\")\n\nfunction Procedure() {\n  this.argTypes = []\n  this.shimArgs = []\n  this.arrayArgs = []\n  this.arrayBlockIndices = []\n  this.scalarArgs = []\n  this.offsetArgs = []\n  this.offsetArgIndex = []\n  this.indexArgs = []\n  this.shapeArgs = []\n  this.funcName = \"\"\n  this.pre = null\n  this.body = null\n  this.post = null\n  this.debug = false\n}\n\nfunction compileCwise(user_args) {\n  //Create procedure\n  var proc = new Procedure()\n  \n  //Parse blocks\n  proc.pre    = user_args.pre\n  proc.body   = user_args.body\n  proc.post   = user_args.post\n\n  //Parse arguments\n  var proc_args = user_args.args.slice(0)\n  proc.argTypes = proc_args\n  for(var i=0; i<proc_args.length; ++i) {\n    var arg_type = proc_args[i]\n    if(arg_type === \"array\" || (typeof arg_type === \"object\" && arg_type.blockIndices)) {\n      proc.argTypes[i] = \"array\"\n      proc.arrayArgs.push(i)\n      proc.arrayBlockIndices.push(arg_type.blockIndices ? arg_type.blockIndices : 0)\n      proc.shimArgs.push(\"array\" + i)\n      if(i < proc.pre.args.length && proc.pre.args[i].count>0) {\n        throw new Error(\"cwise: pre() block may not reference array args\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].count>0) {\n        throw new Error(\"cwise: post() block may not reference array args\")\n      }\n    } else if(arg_type === \"scalar\") {\n      proc.scalarArgs.push(i)\n      proc.shimArgs.push(\"scalar\" + i)\n    } else if(arg_type === \"index\") {\n      proc.indexArgs.push(i)\n      if(i < proc.pre.args.length && proc.pre.args[i].count > 0) {\n        throw new Error(\"cwise: pre() block may not reference array index\")\n      }\n      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\n        throw new Error(\"cwise: body() block may not write to array index\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].count > 0) {\n        throw new Error(\"cwise: post() block may not reference array index\")\n      }\n    } else if(arg_type === \"shape\") {\n      proc.shapeArgs.push(i)\n      if(i < proc.pre.args.length && proc.pre.args[i].lvalue) {\n        throw new Error(\"cwise: pre() block may not write to array shape\")\n      }\n      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\n        throw new Error(\"cwise: body() block may not write to array shape\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].lvalue) {\n        throw new Error(\"cwise: post() block may not write to array shape\")\n      }\n    } else if(typeof arg_type === \"object\" && arg_type.offset) {\n      proc.argTypes[i] = \"offset\"\n      proc.offsetArgs.push({ array: arg_type.array, offset:arg_type.offset })\n      proc.offsetArgIndex.push(i)\n    } else {\n      throw new Error(\"cwise: Unknown argument type \" + proc_args[i])\n    }\n  }\n  \n  //Make sure at least one array argument was specified\n  if(proc.arrayArgs.length <= 0) {\n    throw new Error(\"cwise: No array arguments specified\")\n  }\n  \n  //Make sure arguments are correct\n  if(proc.pre.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in pre() block\")\n  }\n  if(proc.body.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in body() block\")\n  }\n  if(proc.post.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in post() block\")\n  }\n\n  //Check debug flag\n  proc.debug = !!user_args.printCode || !!user_args.debug\n  \n  //Retrieve name\n  proc.funcName = user_args.funcName || \"cwise\"\n  \n  //Read in block size\n  proc.blockSize = user_args.blockSize || 64\n\n  return createThunk(proc)\n}\n\nmodule.exports = compileCwise\n", "module.exports=require('cwise-compiler')({\"args\":[\"array\",\"scalar\",\"index\"],\"pre\":{\"body\":\"{}\",\"args\":[],\"thisVars\":[],\"localVars\":[]},\"body\":{\"body\":\"{\\nvar _inline_1_v=_inline_1_arg1_,_inline_1_i\\nfor(_inline_1_i=0;_inline_1_i<_inline_1_arg2_.length-1;++_inline_1_i) {\\n_inline_1_v=_inline_1_v[_inline_1_arg2_[_inline_1_i]]\\n}\\n_inline_1_arg0_=_inline_1_v[_inline_1_arg2_[_inline_1_arg2_.length-1]]\\n}\",\"args\":[{\"name\":\"_inline_1_arg0_\",\"lvalue\":true,\"rvalue\":false,\"count\":1},{\"name\":\"_inline_1_arg1_\",\"lvalue\":false,\"rvalue\":true,\"count\":1},{\"name\":\"_inline_1_arg2_\",\"lvalue\":false,\"rvalue\":true,\"count\":4}],\"thisVars\":[],\"localVars\":[\"_inline_1_i\",\"_inline_1_v\"]},\"post\":{\"body\":\"{}\",\"args\":[],\"thisVars\":[],\"localVars\":[]},\"funcName\":\"convert\",\"blockSize\":64})\n", "\"use strict\"\n\nvar ndarray = require(\"ndarray\")\nvar do_convert = require(\"./doConvert.js\")\n\nmodule.exports = function convert(arr, result) {\n  var shape = [], c = arr, sz = 1\n  while(Array.isArray(c)) {\n    shape.push(c.length)\n    sz *= c.length\n    c = c[0]\n  }\n  if(shape.length === 0) {\n    return ndarray()\n  }\n  if(!result) {\n    result = ndarray(new Float64Array(sz), shape)\n  }\n  do_convert(result, arr)\n  return result\n}\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"stream\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "var Stream = require('stream')\n\n// through\n//\n// a stream that does nothing but re-emit the input.\n// useful for aggregating a series of changing but not ending streams into one stream)\n\nexports = module.exports = through\nthrough.through = through\n\n//create a readable writable stream.\n\nfunction through (write, end, opts) {\n  write = write || function (data) { this.queue(data) }\n  end = end || function () { this.queue(null) }\n\n  var ended = false, destroyed = false, buffer = [], _ended = false\n  var stream = new Stream()\n  stream.readable = stream.writable = true\n  stream.paused = false\n\n//  stream.autoPause   = !(opts && opts.autoPause   === false)\n  stream.autoDestroy = !(opts && opts.autoDestroy === false)\n\n  stream.write = function (data) {\n    write.call(this, data)\n    return !stream.paused\n  }\n\n  function drain() {\n    while(buffer.length && !stream.paused) {\n      var data = buffer.shift()\n      if(null === data)\n        return stream.emit('end')\n      else\n        stream.emit('data', data)\n    }\n  }\n\n  stream.queue = stream.push = function (data) {\n//    console.error(ended)\n    if(_ended) return stream\n    if(data === null) _ended = true\n    buffer.push(data)\n    drain()\n    return stream\n  }\n\n  //this will be registered as the first 'end' listener\n  //must call destroy next tick, to make sure we're after any\n  //stream piped from here.\n  //this is only a problem if end is not emitted synchronously.\n  //a nicer way to do this is to make sure this is the last listener for 'end'\n\n  stream.on('end', function () {\n    stream.readable = false\n    if(!stream.writable && stream.autoDestroy)\n      process.nextTick(function () {\n        stream.destroy()\n      })\n  })\n\n  function _end () {\n    stream.writable = false\n    end.call(stream)\n    if(!stream.readable && stream.autoDestroy)\n      stream.destroy()\n  }\n\n  stream.end = function (data) {\n    if(ended) return\n    ended = true\n    if(arguments.length) stream.write(data)\n    _end() // will emit or queue\n    return stream\n  }\n\n  stream.destroy = function () {\n    if(destroyed) return\n    destroyed = true\n    ended = true\n    buffer.length = 0\n    stream.writable = stream.readable = false\n    stream.emit('close')\n    return stream\n  }\n\n  stream.pause = function () {\n    if(stream.paused) return\n    stream.paused = true\n    return stream\n  }\n\n  stream.resume = function () {\n    if(stream.paused) {\n      stream.paused = false\n      stream.emit('resume')\n    }\n    drain()\n    //may have become paused again,\n    //as drain emits 'data'.\n    if(!stream.paused)\n      stream.emit('drain')\n    return stream\n  }\n  return stream\n}\n\n", "\n/**\n * Module exports.\n */\n\nmodule.exports = dataUriToBuffer;\n\n/**\n * Returns a `Buffer` instance from the given data URI `uri`.\n *\n * @param {String} uri Data URI to turn into a Buffer instance\n * @return {Buffer} Buffer instance from Data URI\n * @api public\n */\n\nfunction dataUriToBuffer (uri) {\n  if (!/^data\\:/i.test(uri)) {\n    throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")');\n  }\n\n  // strip newlines\n  uri = uri.replace(/\\r?\\n/g, '');\n\n  // split the URI up into the \"metadata\" and the \"data\" portions\n  var firstComma = uri.indexOf(',');\n  if (-1 === firstComma || firstComma <= 4) throw new TypeError('malformed data: URI');\n\n  // remove the \"data:\" scheme and parse the metadata\n  var meta = uri.substring(5, firstComma).split(';');\n\n  var base64 = false;\n  var charset = 'US-ASCII';\n  for (var i = 0; i < meta.length; i++) {\n    if ('base64' == meta[i]) {\n      base64 = true;\n    } else if (0 == meta[i].indexOf('charset=')) {\n      charset = meta[i].substring(8);\n    }\n  }\n\n  // get the encoded data portion and decode URI-encoded chars\n  var data = unescape(uri.substring(firstComma + 1));\n\n  var encoding = base64 ? 'base64' : 'ascii';\n  var buffer = new Buffer(data, encoding);\n\n  // set `.type` property to MIME type\n  buffer.type = meta[0] || 'text/plain';\n\n  // set the `.charset` property\n  buffer.charset = charset;\n\n  return buffer;\n}\n", "'use strict'\n\nvar path          = require('path')\nvar ndarray       = require('ndarray')\nvar GifReader     = require('omggif').GifReader\nvar pack          = require('ndarray-pack')\nvar through       = require('through')\nvar parseDataURI  = require('data-uri-to-buffer')\n\nfunction defaultImage(url, cb) {\n  var img = new Image()\n  img.crossOrigin = \"Anonymous\"\n  img.onload = function() {\n    var canvas = document.createElement('canvas')\n    canvas.width = img.width\n    canvas.height = img.height\n    var context = canvas.getContext('2d')\n    context.drawImage(img, 0, 0)\n    var pixels = context.getImageData(0, 0, img.width, img.height)\n    cb(null, ndarray(new Uint8Array(pixels.data), [img.width, img.height, 4], [4, 4*img.width, 1], 0))\n  }\n  img.onerror = function(err) {\n    cb(err)\n  }\n  img.src = url\n}\n\n//Animated gif loading\nfunction handleGif(data, cb) {\n  var reader\n  try {\n    reader = new GifReader(data)\n  } catch(err) {\n    cb(err)\n    return\n  }\n  if(reader.numFrames() > 0) {\n    var framesInfo = []\n    var nshape = [reader.numFrames(), reader.height, reader.width, 4]\n    var ndata = new Uint8Array(nshape[0] * nshape[1] * nshape[2] * nshape[3])\n    var result = ndarray(ndata, nshape)\n    try {\n      for(var i=0; i<reader.numFrames(); ++i) {\n        reader.decodeAndBlitFrameRGBA(i, ndata.subarray(\n          result.index(i, 0, 0, 0),\n          result.index(i+1, 0, 0, 0)));\n        framesInfo.push(reader.frameInfo(i));\n      }\n    } catch(err) {\n      cb(err)\n      return\n    }\n    cb(null, result.transpose(0,2,1), framesInfo)\n  } else {\n    var nshape = [reader.height, reader.width, 4]\n    var ndata = new Uint8Array(nshape[0] * nshape[1] * nshape[2])\n    var result = ndarray(ndata, nshape)\n    try {\n      reader.decodeAndBlitFrameRGBA(0, ndata)\n    } catch(err) {\n      cb(err)\n      return\n    }\n    cb(null, result.transpose(1,0))\n  }\n}\n\nfunction httpGif(url, cb) {\n  var xhr          = new XMLHttpRequest()\n  xhr.open('GET', url, true)\n  xhr.responseType = 'arraybuffer'\n  if(xhr.overrideMimeType){\n    xhr.overrideMimeType('application/binary')\n  }\n  xhr.onerror = function(err) {\n    cb(err)\n  }\n  xhr.onload = function() {\n    if(xhr.readyState !== 4) {\n      return\n    }\n    var data = new Uint8Array(xhr.response)\n    handleGif(data, cb)\n    return\n  }\n  xhr.send()\n}\n\nfunction copyBuffer(buffer) {\n  if(buffer[0] === undefined) {\n    var n = buffer.length\n    var result = new Uint8Array(n)\n    for(var i=0; i<n; ++i) {\n      result[i] = buffer.get(i)\n    }\n    return result\n  } else {\n    return new Uint8Array(buffer)\n  }\n}\n\nfunction dataGif(url, cb) {\n  process.nextTick(function() {\n    try {\n      var buffer = parseDataURI(url)\n      if(buffer) {\n        handleGif(copyBuffer(buffer), cb)\n      } else {\n        cb(new Error('Error parsing data URI'))\n      }\n    } catch(err) {\n      cb(err)\n    }\n  })\n}\n\nmodule.exports = function getPixels(url, type, cb) {\n  if(!cb) {\n    cb = type\n    type = ''\n  }\n  var ext = path.extname(url)\n  switch(type || ext.toUpperCase()) {\n    case '.GIF':\n      httpGif(url, cb)\n    break\n    default:\n      if(Buffer.isBuffer(url)) {\n        url = 'data:' + type + ';base64,' + url.toString('base64')\n      }\n      if(url.indexOf('data:image/gif;') === 0) {\n        dataGif(url, cb)\n      } else {\n        defaultImage(url, cb)\n      }\n  }\n}\n", "module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"events\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events').EventEmitter;\n\n/*<replacement>*/\nif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\nvar Stream = require('stream');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nfunction ReadableState(options, stream) {\n  options = options || {};\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = false;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // In streams that never have any data, and do push(null) right away,\n  // the consumer can miss the 'end' event if they do some I/O before\n  // consuming the stream.  So, we don't emit('end') until some reading\n  // happens.\n  this.calledRead = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, becuase any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (typeof chunk === 'string' && !state.objectMode) {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null || chunk === undefined) {\n    state.reading = false;\n    if (!state.ended)\n      onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      // update the buffer info.\n      state.length += state.objectMode ? 1 : chunk.length;\n      if (addToFront) {\n        state.buffer.unshift(chunk);\n      } else {\n        state.reading = false;\n        state.buffer.push(chunk);\n      }\n\n      if (state.needReadable)\n        emitReadable(stream);\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n};\n\n// Don't raise the hwm > 128MB\nvar MAX_HWM = 0x800000;\nfunction roundUpToNextPowerOf2(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (n === null || isNaN(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else\n      return state.length;\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  var state = this._readableState;\n  state.calledRead = true;\n  var nOrig = n;\n  var ret;\n\n  if (typeof n !== 'number' || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    ret = null;\n\n    // In cases where the decoder did not receive enough data\n    // to produce a full chunk, then immediately received an\n    // EOF, state.buffer will contain [<Buffer >, <Buffer 00 ...>].\n    // howMuchToRead will see this and coerce the amount to\n    // read to zero (because it's looking at the length of the\n    // first <Buffer > in state.buffer), and we'll end up here.\n    //\n    // This can only happen via state.decoder -- no other venue\n    // exists for pushing a zero-length chunk into state.buffer\n    // and triggering this behavior. In this case, we return our\n    // remaining data and end the stream, if appropriate.\n    if (state.length > 0 && state.decoder) {\n      ret = fromList(n, state);\n      state.length -= ret.length;\n    }\n\n    if (state.length === 0)\n      endReadable(this);\n\n    return ret;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length - n <= state.highWaterMark)\n    doRead = true;\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading)\n    doRead = false;\n\n  if (doRead) {\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read called its callback synchronously, then `reading`\n  // will be false, and we need to re-evaluate how much data we\n  // can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we happened to read() exactly the remaining amount in the\n  // buffer, and the EOF has been seen at this point, then make sure\n  // that we emit 'end' on the very next tick.\n  if (state.ended && !state.endEmitted && state.length === 0)\n    endReadable(this);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!Buffer.isBuffer(chunk) &&\n      'string' !== typeof chunk &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.decoder && !state.ended) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // if we've ended and we have some data left, then emit\n  // 'readable' now to make sure it gets picked up.\n  if (state.length > 0)\n    emitReadable(stream);\n  else\n    endReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (state.emittedReadable)\n    return;\n\n  state.emittedReadable = true;\n  if (state.sync)\n    process.nextTick(function() {\n      emitReadable_(stream);\n    });\n  else\n    emitReadable_(stream);\n}\n\nfunction emitReadable_(stream) {\n  stream.emit('readable');\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(function() {\n      maybeReadMore_(stream, state);\n    });\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    if (readable !== src) return;\n    cleanup();\n  }\n\n  function onend() {\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  function cleanup() {\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (!dest._writableState || dest._writableState.needDrain)\n      ondrain();\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EE.listenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    // the handler that waits for readable events after all\n    // the data gets sucked out in flow.\n    // This would be easier to follow with a .once() handler\n    // in flow(), but that is too slow.\n    this.on('readable', pipeOnReadable);\n\n    state.flowing = true;\n    process.nextTick(function() {\n      flow(src);\n    });\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var dest = this;\n    var state = src._readableState;\n    state.awaitDrain--;\n    if (state.awaitDrain === 0)\n      flow(src);\n  };\n}\n\nfunction flow(src) {\n  var state = src._readableState;\n  var chunk;\n  state.awaitDrain = 0;\n\n  function write(dest, i, list) {\n    var written = dest.write(chunk);\n    if (false === written) {\n      state.awaitDrain++;\n    }\n  }\n\n  while (state.pipesCount && null !== (chunk = src.read())) {\n\n    if (state.pipesCount === 1)\n      write(state.pipes, 0, null);\n    else\n      forEach(state.pipes, write);\n\n    src.emit('data', chunk);\n\n    // if anyone needs a drain, then we have to wait for that.\n    if (state.awaitDrain > 0)\n      return;\n  }\n\n  // if every destination was unpiped, either before entering this\n  // function, or in the while loop, then stop flowing.\n  //\n  // NB: This is a pretty rare edge case.\n  if (state.pipesCount === 0) {\n    state.flowing = false;\n\n    // if there were data event listeners added, then switch to old mode.\n    if (EE.listenerCount(src, 'data') > 0)\n      emitDataEvents(src);\n    return;\n  }\n\n  // at this point, no one needed a drain, so we just ran out of data\n  // on the next readable event, start it over again.\n  state.ranOut = true;\n}\n\nfunction pipeOnReadable() {\n  if (this._readableState.ranOut) {\n    this._readableState.ranOut = false;\n    flow(this);\n  }\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    this.removeListener('readable', pipeOnReadable);\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    this.removeListener('readable', pipeOnReadable);\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data' && !this._readableState.flowing)\n    emitDataEvents(this);\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        this.read(0);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  emitDataEvents(this);\n  this.read(0);\n  this.emit('resume');\n};\n\nReadable.prototype.pause = function() {\n  emitDataEvents(this, true);\n  this.emit('pause');\n};\n\nfunction emitDataEvents(stream, startPaused) {\n  var state = stream._readableState;\n\n  if (state.flowing) {\n    // https://github.com/isaacs/readable-stream/issues/16\n    throw new Error('Cannot switch to old mode now.');\n  }\n\n  var paused = startPaused || false;\n  var readable = false;\n\n  // convert to an old-style stream.\n  stream.readable = true;\n  stream.pipe = Stream.prototype.pipe;\n  stream.on = stream.addListener = Stream.prototype.on;\n\n  stream.on('readable', function() {\n    readable = true;\n\n    var c;\n    while (!paused && (null !== (c = stream.read())))\n      stream.emit('data', c);\n\n    if (c === null) {\n      readable = false;\n      stream._readableState.needReadable = true;\n    }\n  });\n\n  stream.pause = function() {\n    paused = true;\n    this.emit('pause');\n  };\n\n  stream.resume = function() {\n    paused = false;\n    if (readable)\n      process.nextTick(function() {\n        stream.emit('readable');\n      });\n    else\n      this.read(0);\n    this.emit('resume');\n  };\n\n  // now make it start, just in case it hadn't already.\n  stream.emit('readable');\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    //if (state.objectMode && util.isNullOrUndefined(chunk))\n    if (state.objectMode && (chunk === null || chunk === undefined))\n      return;\n    else if (!state.objectMode && (!chunk || !chunk.length))\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (typeof stream[i] === 'function' &&\n        typeof this[i] === 'undefined') {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }}(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted && state.calledRead) {\n    state.ended = true;\n    process.nextTick(function() {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    });\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nforEach(objectKeys(Writable.prototype), function(method) {\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, cb), and it'll handle all\n// the drain event emission and buffering.\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Stream = require('stream');\n\nutil.inherits(Writable, Stream);\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n}\n\nfunction WritableState(options, stream) {\n  options = options || {};\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, becuase any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.buffer = [];\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nfunction Writable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, state, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  process.nextTick(function() {\n    cb(er);\n  });\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  if (!Buffer.isBuffer(chunk) &&\n      'string' !== typeof chunk &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    process.nextTick(function() {\n      cb(er);\n    });\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function')\n    cb = function() {};\n\n  if (state.ended)\n    writeAfterEnd(this, state, cb);\n  else if (validChunk(this, state, chunk, cb))\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n\n  return ret;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      typeof chunk === 'string') {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing)\n    state.buffer.push(new WriteReq(chunk, encoding, cb));\n  else\n    doWrite(stream, state, len, chunk, encoding, cb);\n\n  return ret;\n}\n\nfunction doWrite(stream, state, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  if (sync)\n    process.nextTick(function() {\n      cb(er);\n    });\n  else\n    cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(stream, state);\n\n    if (!finished && !state.bufferProcessing && state.buffer.length)\n      clearBuffer(stream, state);\n\n    if (sync) {\n      process.nextTick(function() {\n        afterWrite(stream, state, finished, cb);\n      });\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  cb();\n  if (finished)\n    finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n\n  for (var c = 0; c < state.buffer.length; c++) {\n    var entry = state.buffer[c];\n    var chunk = entry.chunk;\n    var encoding = entry.encoding;\n    var cb = entry.callback;\n    var len = state.objectMode ? 1 : chunk.length;\n\n    doWrite(stream, state, len, chunk, encoding, cb);\n\n    // if we didn't call the onwrite immediately, then\n    // it means that we need to wait until it does.\n    // also, that means that the chunk and cb are currently\n    // being processed, so move the buffer counter past them.\n    if (state.writing) {\n      c++;\n      break;\n    }\n  }\n\n  state.bufferProcessing = false;\n  if (c < state.buffer.length)\n    state.buffer = state.buffer.slice(c);\n  else\n    state.buffer.length = 0;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (typeof chunk !== 'undefined' && chunk !== null)\n    this.write(chunk, encoding);\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(stream, state) {\n  return (state.ending &&\n          state.length === 0 &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(stream, state);\n  if (need) {\n    state.finished = true;\n    stream.emit('finish');\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      process.nextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(options, stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined)\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  var ts = this._transformState = new TransformState(options, this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this.once('finish', function() {\n    if ('function' === typeof this._flush)\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var rs = stream._readableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function(chunk, encoding, cb) {\n  cb(null, chunk);\n};\n", "var Stream = require('stream'); // hack to fix a circular dependency issue when used with browserify\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = Stream;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nif (!process.browser && process.env.READABLE_STREAM === 'disable') {\n  module.exports = require('stream');\n}\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"util\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "/**!\n * contentstream - index.js\n *\n * Copyright(c) fengmk2 and other contributors.\n * MIT Licensed\n *\n * Authors:\n *   fengmk2 <fengmk2@gmail.com> (http://fengmk2.github.com)\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar Readable = require('readable-stream').Readable;\nvar util = require('util');\n\nmodule.exports = ContentStream;\n\nfunction ContentStream(obj, options) {\n  if (!(this instanceof ContentStream)) {\n    return new ContentStream(obj, options);\n  }\n  Readable.call(this, options);\n  if (obj === null || obj === undefined) {\n    obj = String(obj);\n  }\n  this._obj = obj;\n}\n\nutil.inherits(ContentStream, Readable);\n\nContentStream.prototype._read = function (n) {\n  var obj = this._obj;\n  if (typeof obj === 'string') {\n    this.push(new Buffer(obj));\n  } else if (Buffer.isBuffer(obj)) {\n    this.push(obj);\n  } else {\n    this.push(new Buffer(JSON.stringify(obj)));\n  }\n  this.push(null);\n};\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"assert\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, cb), and it'll handle all\n// the drain event emission and buffering.\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Stream = require('stream');\n\nutil.inherits(Writable, Stream);\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n}\n\nfunction WritableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.buffer = [];\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nfunction Writable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, state, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  process.nextTick(function() {\n    cb(er);\n  });\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    process.nextTick(function() {\n      cb(er);\n    });\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (!util.isFunction(cb))\n    cb = function() {};\n\n  if (state.ended)\n    writeAfterEnd(this, state, cb);\n  else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function() {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing &&\n        !state.corked &&\n        !state.finished &&\n        !state.bufferProcessing &&\n        state.buffer.length)\n      clearBuffer(this, state);\n  }\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      util.isString(chunk)) {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing || state.corked)\n    state.buffer.push(new WriteReq(chunk, encoding, cb));\n  else\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev)\n    stream._writev(chunk, state.onwrite);\n  else\n    stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  if (sync)\n    process.nextTick(function() {\n      state.pendingcb--;\n      cb(er);\n    });\n  else {\n    state.pendingcb--;\n    cb(er);\n  }\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(stream, state);\n\n    if (!finished &&\n        !state.corked &&\n        !state.bufferProcessing &&\n        state.buffer.length) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(function() {\n        afterWrite(stream, state, finished, cb);\n      });\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n\n  if (stream._writev && state.buffer.length > 1) {\n    // Fast case, write everything using _writev()\n    var cbs = [];\n    for (var c = 0; c < state.buffer.length; c++)\n      cbs.push(state.buffer[c].callback);\n\n    // count the one we are adding, as well.\n    // TODO(isaacs) clean this up\n    state.pendingcb++;\n    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {\n      for (var i = 0; i < cbs.length; i++) {\n        state.pendingcb--;\n        cbs[i](err);\n      }\n    });\n\n    // Clear buffer\n    state.buffer = [];\n  } else {\n    // Slow case, write chunks one-by-one\n    for (var c = 0; c < state.buffer.length; c++) {\n      var entry = state.buffer[c];\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        c++;\n        break;\n      }\n    }\n\n    if (c < state.buffer.length)\n      state.buffer = state.buffer.slice(c);\n    else\n      state.buffer.length = 0;\n  }\n\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (util.isFunction(chunk)) {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (!util.isNullOrUndefined(chunk))\n    this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(stream, state) {\n  return (state.ending &&\n          state.length === 0 &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(stream, state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else\n      prefinish(stream, state);\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      process.nextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nforEach(objectKeys(Writable.prototype), function(method) {\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events').EventEmitter;\n\n/*<replacement>*/\nif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\nvar Stream = require('stream');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar StringDecoder;\n\n\n/*<replacement>*/\nvar debug = require('util');\nif (debug && debug.debuglog) {\n  debug = debug.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\n\nutil.inherits(Readable, Stream);\n\nfunction ReadableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (util.isString(chunk) && !state.objectMode) {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (util.isNullOrUndefined(chunk)) {\n    state.reading = false;\n    if (!state.ended)\n      onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      if (!addToFront)\n        state.reading = false;\n\n      // if we want the data now, just emit it.\n      if (state.flowing && state.length === 0 && !state.sync) {\n        stream.emit('data', chunk);\n        stream.read(0);\n      } else {\n        // update the buffer info.\n        state.length += state.objectMode ? 1 : chunk.length;\n        if (addToFront)\n          state.buffer.unshift(chunk);\n        else\n          state.buffer.push(chunk);\n\n        if (state.needReadable)\n          emitReadable(stream);\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 128MB\nvar MAX_HWM = 0x800000;\nfunction roundUpToNextPowerOf2(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (isNaN(n) || util.isNull(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else\n      return state.length;\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read', n);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (!util.isNumber(n) || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  }\n\n  if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read pushed data synchronously, then `reading` will be false,\n  // and we need to re-evaluate how much data we can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  var ret;\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (util.isNull(ret)) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we tried to read() past the EOF, then emit end on the next tick.\n  if (nOrig !== n && state.ended && state.length === 0)\n    endReadable(this);\n\n  if (!util.isNull(ret))\n    this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.decoder && !state.ended) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync)\n      process.nextTick(function() {\n        emitReadable_(stream);\n      });\n    else\n      emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(function() {\n      maybeReadMore_(stream, state);\n    });\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    if (false === ret) {\n      debug('false write response, pause',\n            src._readableState.awaitDrain);\n      src._readableState.awaitDrain++;\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EE.listenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain)\n      state.awaitDrain--;\n    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  // If listening to data, and it has not explicitly been paused,\n  // then call resume to start the flow of data on the next tick.\n  if (ev === 'data' && false !== this._readableState.flowing) {\n    this.resume();\n  }\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        var self = this;\n        process.nextTick(function() {\n          debug('readable nexttick read 0');\n          self.read(0);\n        });\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    if (!state.reading) {\n      debug('resume read 0');\n      this.read(0);\n    }\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(function() {\n      resume_(stream, state);\n    });\n  }\n}\n\nfunction resume_(stream, state) {\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  if (state.flowing) {\n    do {\n      var chunk = stream.read();\n    } while (null !== chunk && state.flowing);\n  }\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    debug('wrapped data');\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n    if (!chunk || !state.objectMode && !chunk.length)\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }}(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(function() {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    });\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(options, stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (!util.isNullOrUndefined(data))\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(options, this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this.once('prefinish', function() {\n    if (util.isFunction(this._flush))\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function(chunk, encoding, cb) {\n  cb(null, chunk);\n};\n", "exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = require('stream');\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nif (!process.browser && process.env.READABLE_STREAM === 'disable') {\n  module.exports = require('stream');\n}\n", "/* NeuQuant Neural-Net Quantization Algorithm\n * ------------------------------------------\n *\n * Copyright (c) 1994 Anthony Dekker\n *\n * NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.\n * See \"Kohonen neural networks for optimal colour quantization\"\n * in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.\n * for a discussion of the algorithm.\n * See also  http://members.ozemail.com.au/~dekker/NEUQUANT.HTML\n *\n * Any party obtaining a copy of these files from the author, directly or\n * indirectly, is granted, free of charge, a full and unrestricted irrevocable,\n * world-wide, paid up, royalty-free, nonexclusive right and license to deal\n * in this software and documentation files (the \"Software\"), including without\n * limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons who receive\n * copies from any such party to do so, with the only requirement being\n * that this copyright notice remain intact.\n *\n * (JavaScript port 2012 by Johan Nordberg)\n */\n\nvar ncycles = 100; // number of learning cycles\nvar netsize = 256; // number of colors used\nvar maxnetpos = netsize - 1;\n\n// defs for freq and bias\nvar netbiasshift = 4; // bias for colour values\nvar intbiasshift = 16; // bias for fractions\nvar intbias = (1 << intbiasshift);\nvar gammashift = 10;\nvar gamma = (1 << gammashift);\nvar betashift = 10;\nvar beta = (intbias >> betashift); /* beta = 1/1024 */\nvar betagamma = (intbias << (gammashift - betashift));\n\n// defs for decreasing radius factor\nvar initrad = (netsize >> 3); // for 256 cols, radius starts\nvar radiusbiasshift = 6; // at 32.0 biased by 6 bits\nvar radiusbias = (1 << radiusbiasshift);\nvar initradius = (initrad * radiusbias); //and decreases by a\nvar radiusdec = 30; // factor of 1/30 each cycle\n\n// defs for decreasing alpha factor\nvar alphabiasshift = 10; // alpha starts at 1.0\nvar initalpha = (1 << alphabiasshift);\nvar alphadec; // biased by 10 bits\n\n/* radbias and alpharadbias used for radpower calculation */\nvar radbiasshift = 8;\nvar radbias = (1 << radbiasshift);\nvar alpharadbshift = (alphabiasshift + radbiasshift);\nvar alpharadbias = (1 << alpharadbshift);\n\n// four primes near 500 - assume no image has a length so large that it is\n// divisible by all four primes\nvar prime1 = 499;\nvar prime2 = 491;\nvar prime3 = 487;\nvar prime4 = 503;\nvar minpicturebytes = (3 * prime4);\n\n/*\n  Constructor: NeuQuant\n\n  Arguments:\n\n  pixels - array of pixels in RGB format\n  samplefac - sampling factor 1 to 30 where lower is better quality\n\n  >\n  > pixels = [r, g, b, r, g, b, r, g, b, ..]\n  >\n*/\nfunction NeuQuant(pixels, samplefac) {\n  var network; // int[netsize][4]\n  var netindex; // for network lookup - really 256\n\n  // bias and freq arrays for learning\n  var bias;\n  var freq;\n  var radpower;\n\n  /*\n    Private Method: init\n\n    sets up arrays\n  */\n  function init() {\n    network = [];\n    netindex = new Int32Array(256);\n    bias = new Int32Array(netsize);\n    freq = new Int32Array(netsize);\n    radpower = new Int32Array(netsize >> 3);\n\n    var i, v;\n    for (i = 0; i < netsize; i++) {\n      v = (i << (netbiasshift + 8)) / netsize;\n      network[i] = new Float64Array([v, v, v, 0]);\n      //network[i] = [v, v, v, 0]\n      freq[i] = intbias / netsize;\n      bias[i] = 0;\n    }\n  }\n\n  /*\n    Private Method: unbiasnet\n\n    unbiases network to give byte values 0..255 and record position i to prepare for sort\n  */\n  function unbiasnet() {\n    for (var i = 0; i < netsize; i++) {\n      network[i][0] >>= netbiasshift;\n      network[i][1] >>= netbiasshift;\n      network[i][2] >>= netbiasshift;\n      network[i][3] = i; // record color number\n    }\n  }\n\n  /*\n    Private Method: altersingle\n\n    moves neuron *i* towards biased (b,g,r) by factor *alpha*\n  */\n  function altersingle(alpha, i, b, g, r) {\n    network[i][0] -= (alpha * (network[i][0] - b)) / initalpha;\n    network[i][1] -= (alpha * (network[i][1] - g)) / initalpha;\n    network[i][2] -= (alpha * (network[i][2] - r)) / initalpha;\n  }\n\n  /*\n    Private Method: alterneigh\n\n    moves neurons in *radius* around index *i* towards biased (b,g,r) by factor *alpha*\n  */\n  function alterneigh(radius, i, b, g, r) {\n    var lo = Math.abs(i - radius);\n    var hi = Math.min(i + radius, netsize);\n\n    var j = i + 1;\n    var k = i - 1;\n    var m = 1;\n\n    var p, a;\n    while ((j < hi) || (k > lo)) {\n      a = radpower[m++];\n\n      if (j < hi) {\n        p = network[j++];\n        p[0] -= (a * (p[0] - b)) / alpharadbias;\n        p[1] -= (a * (p[1] - g)) / alpharadbias;\n        p[2] -= (a * (p[2] - r)) / alpharadbias;\n      }\n\n      if (k > lo) {\n        p = network[k--];\n        p[0] -= (a * (p[0] - b)) / alpharadbias;\n        p[1] -= (a * (p[1] - g)) / alpharadbias;\n        p[2] -= (a * (p[2] - r)) / alpharadbias;\n      }\n    }\n  }\n\n  /*\n    Private Method: contest\n\n    searches for biased BGR values\n  */\n  function contest(b, g, r) {\n    /*\n      finds closest neuron (min dist) and updates freq\n      finds best neuron (min dist-bias) and returns position\n      for frequently chosen neurons, freq[i] is high and bias[i] is negative\n      bias[i] = gamma * ((1 / netsize) - freq[i])\n    */\n\n    var bestd = ~(1 << 31);\n    var bestbiasd = bestd;\n    var bestpos = -1;\n    var bestbiaspos = bestpos;\n\n    var i, n, dist, biasdist, betafreq;\n    for (i = 0; i < netsize; i++) {\n      n = network[i];\n\n      dist = Math.abs(n[0] - b) + Math.abs(n[1] - g) + Math.abs(n[2] - r);\n      if (dist < bestd) {\n        bestd = dist;\n        bestpos = i;\n      }\n\n      biasdist = dist - ((bias[i]) >> (intbiasshift - netbiasshift));\n      if (biasdist < bestbiasd) {\n        bestbiasd = biasdist;\n        bestbiaspos = i;\n      }\n\n      betafreq = (freq[i] >> betashift);\n      freq[i] -= betafreq;\n      bias[i] += (betafreq << gammashift);\n    }\n\n    freq[bestpos] += beta;\n    bias[bestpos] -= betagamma;\n\n    return bestbiaspos;\n  }\n\n  /*\n    Private Method: inxbuild\n\n    sorts network and builds netindex[0..255]\n  */\n  function inxbuild() {\n    var i, j, p, q, smallpos, smallval, previouscol = 0, startpos = 0;\n    for (i = 0; i < netsize; i++) {\n      p = network[i];\n      smallpos = i;\n      smallval = p[1]; // index on g\n      // find smallest in i..netsize-1\n      for (j = i + 1; j < netsize; j++) {\n        q = network[j];\n        if (q[1] < smallval) { // index on g\n          smallpos = j;\n          smallval = q[1]; // index on g\n        }\n      }\n      q = network[smallpos];\n      // swap p (i) and q (smallpos) entries\n      if (i != smallpos) {\n        j = q[0];   q[0] = p[0];   p[0] = j;\n        j = q[1];   q[1] = p[1];   p[1] = j;\n        j = q[2];   q[2] = p[2];   p[2] = j;\n        j = q[3];   q[3] = p[3];   p[3] = j;\n      }\n      // smallval entry is now in position i\n\n      if (smallval != previouscol) {\n        netindex[previouscol] = (startpos + i) >> 1;\n        for (j = previouscol + 1; j < smallval; j++)\n          netindex[j] = i;\n        previouscol = smallval;\n        startpos = i;\n      }\n    }\n    netindex[previouscol] = (startpos + maxnetpos) >> 1;\n    for (j = previouscol + 1; j < 256; j++)\n      netindex[j] = maxnetpos; // really 256\n  }\n\n  /*\n    Private Method: inxsearch\n\n    searches for BGR values 0..255 and returns a color index\n  */\n  function inxsearch(b, g, r) {\n    var a, p, dist;\n\n    var bestd = 1000; // biggest possible dist is 256*3\n    var best = -1;\n\n    var i = netindex[g]; // index on g\n    var j = i - 1; // start at netindex[g] and work outwards\n\n    while ((i < netsize) || (j >= 0)) {\n      if (i < netsize) {\n        p = network[i];\n        dist = p[1] - g; // inx key\n        if (dist >= bestd) i = netsize; // stop iter\n        else {\n          i++;\n          if (dist < 0) dist = -dist;\n          a = p[0] - b; if (a < 0) a = -a;\n          dist += a;\n          if (dist < bestd) {\n            a = p[2] - r; if (a < 0) a = -a;\n            dist += a;\n            if (dist < bestd) {\n              bestd = dist;\n              best = p[3];\n            }\n          }\n        }\n      }\n      if (j >= 0) {\n        p = network[j];\n        dist = g - p[1]; // inx key - reverse dif\n        if (dist >= bestd) j = -1; // stop iter\n        else {\n          j--;\n          if (dist < 0) dist = -dist;\n          a = p[0] - b; if (a < 0) a = -a;\n          dist += a;\n          if (dist < bestd) {\n            a = p[2] - r; if (a < 0) a = -a;\n            dist += a;\n            if (dist < bestd) {\n              bestd = dist;\n              best = p[3];\n            }\n          }\n        }\n      }\n    }\n\n    return best;\n  }\n\n  /*\n    Private Method: learn\n\n    \"Main Learning Loop\"\n  */\n  function learn() {\n    var i;\n\n    var lengthcount = pixels.length;\n    var alphadec = 30 + ((samplefac - 1) / 3);\n    var samplepixels = lengthcount / (3 * samplefac);\n    var delta = ~~(samplepixels / ncycles);\n    var alpha = initalpha;\n    var radius = initradius;\n\n    var rad = radius >> radiusbiasshift;\n\n    if (rad <= 1) rad = 0;\n    for (i = 0; i < rad; i++)\n      radpower[i] = alpha * (((rad * rad - i * i) * radbias) / (rad * rad));\n\n    var step;\n    if (lengthcount < minpicturebytes) {\n      samplefac = 1;\n      step = 3;\n    } else if ((lengthcount % prime1) !== 0) {\n      step = 3 * prime1;\n    } else if ((lengthcount % prime2) !== 0) {\n      step = 3 * prime2;\n    } else if ((lengthcount % prime3) !== 0)  {\n      step = 3 * prime3;\n    } else {\n      step = 3 * prime4;\n    }\n\n    var b, g, r, j;\n    var pix = 0; // current pixel\n\n    i = 0;\n    while (i < samplepixels) {\n      b = (pixels[pix] & 0xff) << netbiasshift;\n      g = (pixels[pix + 1] & 0xff) << netbiasshift;\n      r = (pixels[pix + 2] & 0xff) << netbiasshift;\n\n      j = contest(b, g, r);\n\n      altersingle(alpha, j, b, g, r);\n      if (rad !== 0) alterneigh(rad, j, b, g, r); // alter neighbours\n\n      pix += step;\n      if (pix >= lengthcount) pix -= lengthcount;\n\n      i++;\n\n      if (delta === 0) delta = 1;\n      if (i % delta === 0) {\n        alpha -= alpha / alphadec;\n        radius -= radius / radiusdec;\n        rad = radius >> radiusbiasshift;\n\n        if (rad <= 1) rad = 0;\n        for (j = 0; j < rad; j++)\n          radpower[j] = alpha * (((rad * rad - j * j) * radbias) / (rad * rad));\n      }\n    }\n  }\n\n  /*\n    Method: buildColormap\n\n    1. initializes network\n    2. trains it\n    3. removes misconceptions\n    4. builds colorindex\n  */\n  function buildColormap() {\n    init();\n    learn();\n    unbiasnet();\n    inxbuild();\n  }\n  this.buildColormap = buildColormap;\n\n  /*\n    Method: getColormap\n\n    builds colormap from the index\n\n    returns array in the format:\n\n    >\n    > [r, g, b, r, g, b, r, g, b, ..]\n    >\n  */\n  function getColormap() {\n    var map = [];\n    var index = [];\n\n    for (var i = 0; i < netsize; i++)\n      index[network[i][3]] = i;\n\n    var k = 0;\n    for (var l = 0; l < netsize; l++) {\n      var j = index[l];\n      map[k++] = (network[j][0]);\n      map[k++] = (network[j][1]);\n      map[k++] = (network[j][2]);\n    }\n    return map;\n  }\n  this.getColormap = getColormap;\n\n  /*\n    Method: lookupRGB\n\n    looks for the closest *r*, *g*, *b* color in the map and\n    returns its index\n  */\n  this.lookupRGB = inxsearch;\n}\n\nmodule.exports = NeuQuant;\n", "/*\n  LZWEncoder.js\n\n  Authors\n  Kevin Weiner (original Java version - kweiner@fmsware.com)\n  Thibault Imbert (AS3 version - bytearray.org)\n  Johan Nordberg (JS version - code@johan-nordberg.com)\n\n  Acknowledgements\n  GIFCOMPR.C - GIF Image compression routines\n  Lempel-Ziv compression based on 'compress'. GIF modifications by\n  David Rowley (mgardi@watdcsu.waterloo.edu)\n  GIF Image compression - modified 'compress'\n  Based on: compress.c - File compression ala IEEE Computer, June 1984.\n  By Authors: Spencer W. Thomas (decvax!harpo!utah-cs!utah-gr!thomas)\n  Jim McKie (decvax!mcvax!jim)\n  Steve Davies (decvax!vax135!petsd!peora!srd)\n  Ken Turkowski (decvax!decwrl!turtlevax!ken)\n  James A. Woods (decvax!ihnp4!ames!jaw)\n  Joe Orost (decvax!vax135!petsd!joe)\n*/\n\nvar EOF = -1;\nvar BITS = 12;\nvar HSIZE = 5003; // 80% occupancy\nvar masks = [0x0000, 0x0001, 0x0003, 0x0007, 0x000F, 0x001F,\n             0x003F, 0x007F, 0x00FF, 0x01FF, 0x03FF, 0x07FF,\n             0x0FFF, 0x1FFF, 0x3FFF, 0x7FFF, 0xFFFF];\n\nfunction LZWEncoder(width, height, pixels, colorDepth) {\n  var initCodeSize = Math.max(2, colorDepth);\n\n  var accum = new Uint8Array(256);\n  var htab = new Int32Array(HSIZE);\n  var codetab = new Int32Array(HSIZE);\n\n  var cur_accum, cur_bits = 0;\n  var a_count;\n  var free_ent = 0; // first unused entry\n  var maxcode;\n  var remaining;\n  var curPixel;\n  var n_bits;\n\n  // block compression parameters -- after all codes are used up,\n  // and compression rate changes, start over.\n  var clear_flg = false;\n\n  // Algorithm: use open addressing double hashing (no chaining) on the\n  // prefix code / next character combination. We do a variant of Knuth's\n  // algorithm D (vol. 3, sec. 6.4) along with G. Knott's relatively-prime\n  // secondary probe. Here, the modular division first probe is gives way\n  // to a faster exclusive-or manipulation. Also do block compression with\n  // an adaptive reset, whereby the code table is cleared when the compression\n  // ratio decreases, but after the table fills. The variable-length output\n  // codes are re-sized at this point, and a special CLEAR code is generated\n  // for the decompressor. Late addition: construct the table according to\n  // file size for noticeable speed improvement on small files. Please direct\n  // questions about this implementation to ames!jaw.\n  var g_init_bits, ClearCode, EOFCode;\n\n  // Add a character to the end of the current packet, and if it is 254\n  // characters, flush the packet to disk.\n  function char_out(c, outs) {\n    accum[a_count++] = c;\n    if (a_count >= 254) flush_char(outs);\n  }\n\n  // Clear out the hash table\n  // table clear for block compress\n  function cl_block(outs) {\n    cl_hash(HSIZE);\n    free_ent = ClearCode + 2;\n    clear_flg = true;\n    output(ClearCode, outs);\n  }\n\n  // Reset code table\n  function cl_hash(hsize) {\n    for (var i = 0; i < hsize; ++i) htab[i] = -1;\n  }\n\n  function compress(init_bits, outs) {\n    var fcode, c, i, ent, disp, hsize_reg, hshift;\n\n    // Set up the globals: g_init_bits - initial number of bits\n    g_init_bits = init_bits;\n\n    // Set up the necessary values\n    clear_flg = false;\n    n_bits = g_init_bits;\n    maxcode = MAXCODE(n_bits);\n\n    ClearCode = 1 << (init_bits - 1);\n    EOFCode = ClearCode + 1;\n    free_ent = ClearCode + 2;\n\n    a_count = 0; // clear packet\n\n    ent = nextPixel();\n\n    hshift = 0;\n    for (fcode = HSIZE; fcode < 65536; fcode *= 2) ++hshift;\n    hshift = 8 - hshift; // set hash code range bound\n    hsize_reg = HSIZE;\n    cl_hash(hsize_reg); // clear hash table\n\n    output(ClearCode, outs);\n\n    outer_loop: while ((c = nextPixel()) != EOF) {\n      fcode = (c << BITS) + ent;\n      i = (c << hshift) ^ ent; // xor hashing\n      if (htab[i] === fcode) {\n        ent = codetab[i];\n        continue;\n      } else if (htab[i] >= 0) { // non-empty slot\n        disp = hsize_reg - i; // secondary hash (after G. Knott)\n        if (i === 0) disp = 1;\n        do {\n          if ((i -= disp) < 0) i += hsize_reg;\n          if (htab[i] === fcode) {\n            ent = codetab[i];\n            continue outer_loop;\n          }\n        } while (htab[i] >= 0);\n      }\n      output(ent, outs);\n      ent = c;\n      if (free_ent < 1 << BITS) {\n        codetab[i] = free_ent++; // code -> hashtable\n        htab[i] = fcode;\n      } else {\n        cl_block(outs);\n      }\n    }\n\n    // Put out the final code.\n    output(ent, outs);\n    output(EOFCode, outs);\n  }\n\n  function encode(outs) {\n    outs.writeByte(initCodeSize); // write \"initial code size\" byte\n    remaining = width * height; // reset navigation variables\n    curPixel = 0;\n    compress(initCodeSize + 1, outs); // compress and write the pixel data\n    outs.writeByte(0); // write block terminator\n  }\n\n  // Flush the packet to disk, and reset the accumulator\n  function flush_char(outs) {\n    if (a_count > 0) {\n      outs.writeByte(a_count);\n      outs.writeBytes(accum, 0, a_count);\n      a_count = 0;\n    }\n  }\n\n  function MAXCODE(n_bits) {\n    return (1 << n_bits) - 1;\n  }\n\n  // Return the next pixel from the image\n  function nextPixel() {\n    if (remaining === 0) return EOF;\n    --remaining;\n    var pix = pixels[curPixel++];\n    return pix & 0xff;\n  }\n\n  function output(code, outs) {\n    cur_accum &= masks[cur_bits];\n\n    if (cur_bits > 0) cur_accum |= (code << cur_bits);\n    else cur_accum = code;\n\n    cur_bits += n_bits;\n\n    while (cur_bits >= 8) {\n      char_out((cur_accum & 0xff), outs);\n      cur_accum >>= 8;\n      cur_bits -= 8;\n    }\n\n    // If the next entry is going to be too big for the code size,\n    // then increase it, if possible.\n    if (free_ent > maxcode || clear_flg) {\n      if (clear_flg) {\n        maxcode = MAXCODE(n_bits = g_init_bits);\n        clear_flg = false;\n      } else {\n        ++n_bits;\n        if (n_bits == BITS) maxcode = 1 << BITS;\n        else maxcode = MAXCODE(n_bits);\n      }\n    }\n\n    if (code == EOFCode) {\n      // At EOF, write the rest of the buffer.\n      while (cur_bits > 0) {\n        char_out((cur_accum & 0xff), outs);\n        cur_accum >>= 8;\n        cur_bits -= 8;\n      }\n      flush_char(outs);\n    }\n  }\n\n  this.encode = encode;\n}\n\nmodule.exports = LZWEncoder;\n", "/*\n  GIFEncoder.js\n\n  Authors\n  Kevin Weiner (original Java version - kweiner@fmsware.com)\n  Thibault Imbert (AS3 version - bytearray.org)\n  Johan Nordberg (JS version - code@johan-nordberg.com)\n  Todd Wolfson (Implemented streams - todd@twolfson.com)\n*/\n\nvar assert = require('assert');\nvar EventEmitter = require('events').EventEmitter;\nvar ReadableStream = require('readable-stream');\nvar util = require('util');\n\nvar NeuQuant = require('./TypedNeuQuant.js');\nvar LZWEncoder = require('./LZWEncoder.js');\n\n// DEV: By using a capacitor, we prevent creating a data event for every byte written\nfunction ByteCapacitor(options) {\n  // Inherit from ReadableStream\n  ReadableStream.call(this, options);\n\n  // Start with an empty buffer and allow writes\n  this.okayToPush = true;\n  this.resetData();\n}\nutil.inherits(ByteCapacitor, ReadableStream);\n\nByteCapacitor.prototype._read = function () {\n  // The output is controlled by the input provided by methods.\n  // If we exceed the highwater mark, we will raise an error.\n  this.okayToPush = true;\n};\n\nByteCapacitor.prototype.resetData = function () {\n  this.data = [];\n};\n\nByteCapacitor.prototype.flushData = function () {\n  // If we are not okay to push, emit an error\n  if (!this.okayToPush) {\n    var err = new Error('GIF memory limit exceeded. Please `read` from GIF before writing additional frames/information.');\n    return this.emit('error', err);\n  }\n\n  // Otherwise, push out the new buffer\n  var buff = new Buffer(this.data);\n  this.resetData();\n  this.okayToPush = this.push(buff);\n};\n\nByteCapacitor.prototype.writeByte = function (val) {\n  this.data.push(val);\n};\n\nByteCapacitor.prototype.writeUTFBytes = function (string) {\n  for (var l = string.length, i = 0; i < l; i++) {\n    this.writeByte(string.charCodeAt(i));\n  }\n};\n\nByteCapacitor.prototype.writeBytes = function (array, offset, length) {\n  for (var l = length || array.length, i = offset || 0; i < l; i++) {\n    this.writeByte(array[i]);\n  }\n};\n\nfunction GIFEncoder(width, height, options) {\n  // Fallback options\n  options = options || {};\n\n  // Inherit from ByteCapacitor immediately\n  // https://github.com/isaacs/readable-stream/blob/v1.1.9/lib/_stream_readable.js#L60-L63\n  var hwm = options.highWaterMark;\n  ByteCapacitor.call(this, {\n    // Allow for up to 64kB of GIFfy-goodness\n    highWaterMark: (hwm || hwm === 0) ? hwm : 64 * 1024\n  });\n\n  // image size\n  this.width = ~~width;\n  this.height = ~~height;\n\n  // transparent color if given\n  this.transparent = null;\n\n  // transparent index in color table\n  this.transIndex = 0;\n\n  // -1 = no repeat, 0 = forever. anything else is repeat count\n  this.repeat = -1;\n\n  // frame delay (hundredths)\n  this.delay = 0;\n\n  this.pixels = null; // BGR byte array from frame\n  this.indexedPixels = null; // converted frame indexed to palette\n  this.colorDepth = null; // number of bit planes\n  this.colorTab = null; // RGB palette\n  this.usedEntry = []; // active palette entries\n  this.palSize = 7; // color table size (bits-1)\n  this.dispose = -1; // disposal code (-1 = use default)\n  this.firstFrame = true;\n  this.sample = 10; // default sample interval for quantizer\n\n  // When we encounter a header, new frame, or stop, emit data\n  var that = this;\n  function flushData() {\n    that.flushData();\n  }\n  this.on('writeHeader#stop', flushData);\n  this.on('frame#stop', flushData);\n  this.on('finish#stop', function finishGif () {\n    // Flush the data\n    flushData();\n\n    // Close the gif\n    that.push(null);\n  });\n}\nutil.inherits(GIFEncoder, ByteCapacitor);\n\n/*\n  Sets the delay time between each frame, or changes it for subsequent frames\n  (applies to last frame added)\n*/\nGIFEncoder.prototype.setDelay = function(milliseconds) {\n  this.delay = Math.round(milliseconds / 10);\n};\n\n/*\n  Sets frame rate in frames per second.\n*/\nGIFEncoder.prototype.setFrameRate = function(fps) {\n  this.delay = Math.round(100 / fps);\n};\n\n/*\n  Sets the GIF frame disposal code for the last added frame and any\n  subsequent frames.\n\n  Default is 0 if no transparent color has been set, otherwise 2.\n*/\nGIFEncoder.prototype.setDispose = function(disposalCode) {\n  if (disposalCode >= 0) this.dispose = disposalCode;\n};\n\n/*\n  Sets the number of times the set of GIF frames should be played.\n\n  -1 = play once\n  0 = repeat indefinitely\n\n  Default is -1\n\n  Must be invoked before the first image is added\n*/\n\nGIFEncoder.prototype.setRepeat = function(repeat) {\n  this.repeat = repeat;\n};\n\n/*\n  Sets the transparent color for the last added frame and any subsequent\n  frames. Since all colors are subject to modification in the quantization\n  process, the color in the final palette for each frame closest to the given\n  color becomes the transparent color for that frame. May be set to null to\n  indicate no transparent color.\n*/\nGIFEncoder.prototype.setTransparent = function(color) {\n  this.transparent = color;\n};\n\n// Custom methods for performance hacks around streaming GIF data pieces without re-analyzing/loading\nGIFEncoder.prototype.analyzeImage = function (imageData) {\n  // convert to correct format if necessary\n  this.setImagePixels(this.removeAlphaChannel(imageData));\n  this.analyzePixels(); // build color table & map pixels\n};\n\nGIFEncoder.prototype.writeImageInfo = function () {\n  if (this.firstFrame) {\n    this.writeLSD(); // logical screen descriptior\n    this.writePalette(); // global color table\n    if (this.repeat >= 0) {\n      // use NS app extension to indicate reps\n      this.writeNetscapeExt();\n    }\n  }\n\n  this.writeGraphicCtrlExt(); // write graphic control extension\n  this.writeImageDesc(); // image descriptor\n  if (!this.firstFrame) this.writePalette(); // local color table\n\n  // DEV: This was originally after outputImage but it does not affect order it seems\n  this.firstFrame = false;\n};\n\nGIFEncoder.prototype.outputImage = function () {\n  this.writePixels(); // encode and write pixel data\n};\n\n/*\n  Adds next GIF frame. The frame is not written immediately, but is\n  actually deferred until the next frame is received so that timing\n  data can be inserted.  Invoking finish() flushes all frames.\n*/\nGIFEncoder.prototype.addFrame = function(imageData) {\n  this.emit('frame#start');\n\n  this.analyzeImage(imageData);\n  this.writeImageInfo();\n  this.outputImage();\n\n  this.emit('frame#stop');\n};\n\n/*\n  Adds final trailer to the GIF stream, if you don't call the finish method\n  the GIF stream will not be valid.\n*/\nGIFEncoder.prototype.finish = function() {\n  this.emit('finish#start');\n  this.writeByte(0x3b); // gif trailer\n  this.emit('finish#stop');\n};\n\n/*\n  Sets quality of color quantization (conversion of images to the maximum 256\n  colors allowed by the GIF specification). Lower values (minimum = 1)\n  produce better colors, but slow processing significantly. 10 is the\n  default, and produces good color mapping at reasonable speeds. Values\n  greater than 20 do not yield significant improvements in speed.\n*/\nGIFEncoder.prototype.setQuality = function(quality) {\n  if (quality < 1) quality = 1;\n  this.sample = quality;\n};\n\n/*\n  Writes GIF file header\n*/\nGIFEncoder.prototype.writeHeader = function() {\n  this.emit('writeHeader#start');\n  this.writeUTFBytes(\"GIF89a\");\n  this.emit('writeHeader#stop');\n};\n\n/*\n  Analyzes current frame colors and creates color map.\n*/\nGIFEncoder.prototype.analyzePixels = function() {\n  var len = this.pixels.length;\n  var nPix = len / 3;\n\n  // TODO: Re-use indexedPixels\n  this.indexedPixels = new Uint8Array(nPix);\n\n  var imgq = new NeuQuant(this.pixels, this.sample);\n  imgq.buildColormap(); // create reduced palette\n  this.colorTab = imgq.getColormap();\n\n  // map image pixels to new palette\n  var k = 0;\n  for (var j = 0; j < nPix; j++) {\n    var index = imgq.lookupRGB(\n      this.pixels[k++] & 0xff,\n      this.pixels[k++] & 0xff,\n      this.pixels[k++] & 0xff\n    );\n    this.usedEntry[index] = true;\n    this.indexedPixels[j] = index;\n  }\n\n  this.pixels = null;\n  this.colorDepth = 8;\n  this.palSize = 7;\n\n  // get closest match to transparent color if specified\n  if (this.transparent !== null) {\n    this.transIndex = this.findClosest(this.transparent);\n  }\n};\n\n/*\n  Returns index of palette color closest to c\n*/\nGIFEncoder.prototype.findClosest = function(c) {\n  if (this.colorTab === null) return -1;\n\n  var r = (c & 0xFF0000) >> 16;\n  var g = (c & 0x00FF00) >> 8;\n  var b = (c & 0x0000FF);\n  var minpos = 0;\n  var dmin = 256 * 256 * 256;\n  var len = this.colorTab.length;\n\n  for (var i = 0; i < len;) {\n    var dr = r - (this.colorTab[i++] & 0xff);\n    var dg = g - (this.colorTab[i++] & 0xff);\n    var db = b - (this.colorTab[i] & 0xff);\n    var d = dr * dr + dg * dg + db * db;\n    var index = i / 3;\n    if (this.usedEntry[index] && (d < dmin)) {\n      dmin = d;\n      minpos = index;\n    }\n    i++;\n  }\n\n  return minpos;\n};\n\n/*\n  Extracts image pixels into byte array pixels\n  (removes alphachannel from canvas imagedata)\n*/\nGIFEncoder.prototype.removeAlphaChannel = function (data) {\n  var w = this.width;\n  var h = this.height;\n  var pixels = new Uint8Array(w * h * 3);\n\n  var count = 0;\n\n  for (var i = 0; i < h; i++) {\n    for (var j = 0; j < w; j++) {\n      var b = (i * w * 4) + j * 4;\n      pixels[count++] = data[b];\n      pixels[count++] = data[b+1];\n      pixels[count++] = data[b+2];\n    }\n  }\n\n  return pixels;\n};\n\nGIFEncoder.prototype.setImagePixels = function(pixels) {\n  this.pixels = pixels;\n};\n\n/*\n  Writes Graphic Control Extension\n*/\nGIFEncoder.prototype.writeGraphicCtrlExt = function() {\n  this.writeByte(0x21); // extension introducer\n  this.writeByte(0xf9); // GCE label\n  this.writeByte(4); // data block size\n\n  var transp, disp;\n  if (this.transparent === null) {\n    transp = 0;\n    disp = 0; // dispose = no action\n  } else {\n    transp = 1;\n    disp = 2; // force clear if using transparent color\n  }\n\n  if (this.dispose >= 0) {\n    disp = dispose & 7; // user override\n  }\n  disp <<= 2;\n\n  // packed fields\n  this.writeByte(\n    0 | // 1:3 reserved\n    disp | // 4:6 disposal\n    0 | // 7 user input - 0 = none\n    transp // 8 transparency flag\n  );\n\n  this.writeShort(this.delay); // delay x 1/100 sec\n  this.writeByte(this.transIndex); // transparent color index\n  this.writeByte(0); // block terminator\n};\n\n/*\n  Writes Image Descriptor\n*/\nGIFEncoder.prototype.writeImageDesc = function() {\n  this.writeByte(0x2c); // image separator\n  this.writeShort(0); // image position x,y = 0,0\n  this.writeShort(0);\n  this.writeShort(this.width); // image size\n  this.writeShort(this.height);\n\n  // packed fields\n  if (this.firstFrame) {\n    // no LCT - GCT is used for first (or only) frame\n    this.writeByte(0);\n  } else {\n    // specify normal LCT\n    this.writeByte(\n      0x80 | // 1 local color table 1=yes\n      0 | // 2 interlace - 0=no\n      0 | // 3 sorted - 0=no\n      0 | // 4-5 reserved\n      this.palSize // 6-8 size of color table\n    );\n  }\n};\n\n/*\n  Writes Logical Screen Descriptor\n*/\nGIFEncoder.prototype.writeLSD = function() {\n  // logical screen size\n  this.writeShort(this.width);\n  this.writeShort(this.height);\n\n  // packed fields\n  this.writeByte(\n    0x80 | // 1 : global color table flag = 1 (gct used)\n    0x70 | // 2-4 : color resolution = 7\n    0x00 | // 5 : gct sort flag = 0\n    this.palSize // 6-8 : gct size\n  );\n\n  this.writeByte(0); // background color index\n  this.writeByte(0); // pixel aspect ratio - assume 1:1\n};\n\n/*\n  Writes Netscape application extension to define repeat count.\n*/\nGIFEncoder.prototype.writeNetscapeExt = function() {\n  this.writeByte(0x21); // extension introducer\n  this.writeByte(0xff); // app extension label\n  this.writeByte(11); // block size\n  this.writeUTFBytes('NETSCAPE2.0'); // app id + auth code\n  this.writeByte(3); // sub-block size\n  this.writeByte(1); // loop sub-block id\n  this.writeShort(this.repeat); // loop count (extra iterations, 0=repeat forever)\n  this.writeByte(0); // block terminator\n};\n\n/*\n  Writes color table\n*/\nGIFEncoder.prototype.writePalette = function() {\n  this.writeBytes(this.colorTab);\n  var n = (3 * 256) - this.colorTab.length;\n  for (var i = 0; i < n; i++)\n    this.writeByte(0);\n};\n\nGIFEncoder.prototype.writeShort = function(pValue) {\n  this.writeByte(pValue & 0xFF);\n  this.writeByte((pValue >> 8) & 0xFF);\n};\n\n/*\n  Encodes and writes pixel data\n*/\nGIFEncoder.prototype.writePixels = function() {\n  var enc = new LZWEncoder(this.width, this.height, this.indexedPixels, this.colorDepth);\n  enc.encode(this);\n};\n\n/*\n  Retrieves the GIF stream\n*/\nGIFEncoder.prototype.stream = function() {\n  return this;\n};\n\nGIFEncoder.ByteCapacitor = ByteCapacitor;\n\nmodule.exports = GIFEncoder;\n", "/*\n  Copyright (c) 2008, Adobe Systems Incorporated\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without \n  modification, are permitted provided that the following conditions are\n  met:\n\n  * Redistributions of source code must retain the above copyright notice, \n    this list of conditions and the following disclaimer.\n  \n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the \n    documentation and/or other materials provided with the distribution.\n  \n  * Neither the name of Adobe Systems Incorporated nor the names of its \n    contributors may be used to endorse or promote products derived from \n    this software without specific prior written permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n  IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR \n  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*\nJPEG encoder ported to JavaScript and optimized by Andreas Ritter, www.bytestrom.eu, 11/2009\n\nBasic GUI blocking jpeg encoder\n*/\n\nvar btoa = btoa || function(buf) {\n  return new Buffer(buf).toString('base64');\n};\n\nfunction JPEGEncoder(quality) {\n  var self = this;\n\tvar fround = Math.round;\n\tvar ffloor = Math.floor;\n\tvar YTable = new Array(64);\n\tvar UVTable = new Array(64);\n\tvar fdtbl_Y = new Array(64);\n\tvar fdtbl_UV = new Array(64);\n\tvar YDC_HT;\n\tvar UVDC_HT;\n\tvar YAC_HT;\n\tvar UVAC_HT;\n\t\n\tvar bitcode = new Array(65535);\n\tvar category = new Array(65535);\n\tvar outputfDCTQuant = new Array(64);\n\tvar DU = new Array(64);\n\tvar byteout = [];\n\tvar bytenew = 0;\n\tvar bytepos = 7;\n\t\n\tvar YDU = new Array(64);\n\tvar UDU = new Array(64);\n\tvar VDU = new Array(64);\n\tvar clt = new Array(256);\n\tvar RGB_YUV_TABLE = new Array(2048);\n\tvar currentQuality;\n\t\n\tvar ZigZag = [\n\t\t\t 0, 1, 5, 6,14,15,27,28,\n\t\t\t 2, 4, 7,13,16,26,29,42,\n\t\t\t 3, 8,12,17,25,30,41,43,\n\t\t\t 9,11,18,24,31,40,44,53,\n\t\t\t10,19,23,32,39,45,52,54,\n\t\t\t20,22,33,38,46,51,55,60,\n\t\t\t21,34,37,47,50,56,59,61,\n\t\t\t35,36,48,49,57,58,62,63\n\t\t];\n\t\n\tvar std_dc_luminance_nrcodes = [0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0];\n\tvar std_dc_luminance_values = [0,1,2,3,4,5,6,7,8,9,10,11];\n\tvar std_ac_luminance_nrcodes = [0,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,0x7d];\n\tvar std_ac_luminance_values = [\n\t\t\t0x01,0x02,0x03,0x00,0x04,0x11,0x05,0x12,\n\t\t\t0x21,0x31,0x41,0x06,0x13,0x51,0x61,0x07,\n\t\t\t0x22,0x71,0x14,0x32,0x81,0x91,0xa1,0x08,\n\t\t\t0x23,0x42,0xb1,0xc1,0x15,0x52,0xd1,0xf0,\n\t\t\t0x24,0x33,0x62,0x72,0x82,0x09,0x0a,0x16,\n\t\t\t0x17,0x18,0x19,0x1a,0x25,0x26,0x27,0x28,\n\t\t\t0x29,0x2a,0x34,0x35,0x36,0x37,0x38,0x39,\n\t\t\t0x3a,0x43,0x44,0x45,0x46,0x47,0x48,0x49,\n\t\t\t0x4a,0x53,0x54,0x55,0x56,0x57,0x58,0x59,\n\t\t\t0x5a,0x63,0x64,0x65,0x66,0x67,0x68,0x69,\n\t\t\t0x6a,0x73,0x74,0x75,0x76,0x77,0x78,0x79,\n\t\t\t0x7a,0x83,0x84,0x85,0x86,0x87,0x88,0x89,\n\t\t\t0x8a,0x92,0x93,0x94,0x95,0x96,0x97,0x98,\n\t\t\t0x99,0x9a,0xa2,0xa3,0xa4,0xa5,0xa6,0xa7,\n\t\t\t0xa8,0xa9,0xaa,0xb2,0xb3,0xb4,0xb5,0xb6,\n\t\t\t0xb7,0xb8,0xb9,0xba,0xc2,0xc3,0xc4,0xc5,\n\t\t\t0xc6,0xc7,0xc8,0xc9,0xca,0xd2,0xd3,0xd4,\n\t\t\t0xd5,0xd6,0xd7,0xd8,0xd9,0xda,0xe1,0xe2,\n\t\t\t0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,0xea,\n\t\t\t0xf1,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,\n\t\t\t0xf9,0xfa\n\t\t];\n\t\n\tvar std_dc_chrominance_nrcodes = [0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0];\n\tvar std_dc_chrominance_values = [0,1,2,3,4,5,6,7,8,9,10,11];\n\tvar std_ac_chrominance_nrcodes = [0,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,0x77];\n\tvar std_ac_chrominance_values = [\n\t\t\t0x00,0x01,0x02,0x03,0x11,0x04,0x05,0x21,\n\t\t\t0x31,0x06,0x12,0x41,0x51,0x07,0x61,0x71,\n\t\t\t0x13,0x22,0x32,0x81,0x08,0x14,0x42,0x91,\n\t\t\t0xa1,0xb1,0xc1,0x09,0x23,0x33,0x52,0xf0,\n\t\t\t0x15,0x62,0x72,0xd1,0x0a,0x16,0x24,0x34,\n\t\t\t0xe1,0x25,0xf1,0x17,0x18,0x19,0x1a,0x26,\n\t\t\t0x27,0x28,0x29,0x2a,0x35,0x36,0x37,0x38,\n\t\t\t0x39,0x3a,0x43,0x44,0x45,0x46,0x47,0x48,\n\t\t\t0x49,0x4a,0x53,0x54,0x55,0x56,0x57,0x58,\n\t\t\t0x59,0x5a,0x63,0x64,0x65,0x66,0x67,0x68,\n\t\t\t0x69,0x6a,0x73,0x74,0x75,0x76,0x77,0x78,\n\t\t\t0x79,0x7a,0x82,0x83,0x84,0x85,0x86,0x87,\n\t\t\t0x88,0x89,0x8a,0x92,0x93,0x94,0x95,0x96,\n\t\t\t0x97,0x98,0x99,0x9a,0xa2,0xa3,0xa4,0xa5,\n\t\t\t0xa6,0xa7,0xa8,0xa9,0xaa,0xb2,0xb3,0xb4,\n\t\t\t0xb5,0xb6,0xb7,0xb8,0xb9,0xba,0xc2,0xc3,\n\t\t\t0xc4,0xc5,0xc6,0xc7,0xc8,0xc9,0xca,0xd2,\n\t\t\t0xd3,0xd4,0xd5,0xd6,0xd7,0xd8,0xd9,0xda,\n\t\t\t0xe2,0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,\n\t\t\t0xea,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,\n\t\t\t0xf9,0xfa\n\t\t];\n\t\n\tfunction initQuantTables(sf){\n\t\t\tvar YQT = [\n\t\t\t\t16, 11, 10, 16, 24, 40, 51, 61,\n\t\t\t\t12, 12, 14, 19, 26, 58, 60, 55,\n\t\t\t\t14, 13, 16, 24, 40, 57, 69, 56,\n\t\t\t\t14, 17, 22, 29, 51, 87, 80, 62,\n\t\t\t\t18, 22, 37, 56, 68,109,103, 77,\n\t\t\t\t24, 35, 55, 64, 81,104,113, 92,\n\t\t\t\t49, 64, 78, 87,103,121,120,101,\n\t\t\t\t72, 92, 95, 98,112,100,103, 99\n\t\t\t];\n\t\t\t\n\t\t\tfor (var i = 0; i < 64; i++) {\n\t\t\t\tvar t = ffloor((YQT[i]*sf+50)/100);\n\t\t\t\tif (t < 1) {\n\t\t\t\t\tt = 1;\n\t\t\t\t} else if (t > 255) {\n\t\t\t\t\tt = 255;\n\t\t\t\t}\n\t\t\t\tYTable[ZigZag[i]] = t;\n\t\t\t}\n\t\t\tvar UVQT = [\n\t\t\t\t17, 18, 24, 47, 99, 99, 99, 99,\n\t\t\t\t18, 21, 26, 66, 99, 99, 99, 99,\n\t\t\t\t24, 26, 56, 99, 99, 99, 99, 99,\n\t\t\t\t47, 66, 99, 99, 99, 99, 99, 99,\n\t\t\t\t99, 99, 99, 99, 99, 99, 99, 99,\n\t\t\t\t99, 99, 99, 99, 99, 99, 99, 99,\n\t\t\t\t99, 99, 99, 99, 99, 99, 99, 99,\n\t\t\t\t99, 99, 99, 99, 99, 99, 99, 99\n\t\t\t];\n\t\t\tfor (var j = 0; j < 64; j++) {\n\t\t\t\tvar u = ffloor((UVQT[j]*sf+50)/100);\n\t\t\t\tif (u < 1) {\n\t\t\t\t\tu = 1;\n\t\t\t\t} else if (u > 255) {\n\t\t\t\t\tu = 255;\n\t\t\t\t}\n\t\t\t\tUVTable[ZigZag[j]] = u;\n\t\t\t}\n\t\t\tvar aasf = [\n\t\t\t\t1.0, 1.387039845, 1.306562965, 1.175875602,\n\t\t\t\t1.0, 0.785694958, 0.541196100, 0.275899379\n\t\t\t];\n\t\t\tvar k = 0;\n\t\t\tfor (var row = 0; row < 8; row++)\n\t\t\t{\n\t\t\t\tfor (var col = 0; col < 8; col++)\n\t\t\t\t{\n\t\t\t\t\tfdtbl_Y[k]  = (1.0 / (YTable [ZigZag[k]] * aasf[row] * aasf[col] * 8.0));\n\t\t\t\t\tfdtbl_UV[k] = (1.0 / (UVTable[ZigZag[k]] * aasf[row] * aasf[col] * 8.0));\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction computeHuffmanTbl(nrcodes, std_table){\n\t\t\tvar codevalue = 0;\n\t\t\tvar pos_in_table = 0;\n\t\t\tvar HT = new Array();\n\t\t\tfor (var k = 1; k <= 16; k++) {\n\t\t\t\tfor (var j = 1; j <= nrcodes[k]; j++) {\n\t\t\t\t\tHT[std_table[pos_in_table]] = [];\n\t\t\t\t\tHT[std_table[pos_in_table]][0] = codevalue;\n\t\t\t\t\tHT[std_table[pos_in_table]][1] = k;\n\t\t\t\t\tpos_in_table++;\n\t\t\t\t\tcodevalue++;\n\t\t\t\t}\n\t\t\t\tcodevalue*=2;\n\t\t\t}\n\t\t\treturn HT;\n\t\t}\n\t\t\n\t\tfunction initHuffmanTbl()\n\t\t{\n\t\t\tYDC_HT = computeHuffmanTbl(std_dc_luminance_nrcodes,std_dc_luminance_values);\n\t\t\tUVDC_HT = computeHuffmanTbl(std_dc_chrominance_nrcodes,std_dc_chrominance_values);\n\t\t\tYAC_HT = computeHuffmanTbl(std_ac_luminance_nrcodes,std_ac_luminance_values);\n\t\t\tUVAC_HT = computeHuffmanTbl(std_ac_chrominance_nrcodes,std_ac_chrominance_values);\n\t\t}\n\t\n\t\tfunction initCategoryNumber()\n\t\t{\n\t\t\tvar nrlower = 1;\n\t\t\tvar nrupper = 2;\n\t\t\tfor (var cat = 1; cat <= 15; cat++) {\n\t\t\t\t//Positive numbers\n\t\t\t\tfor (var nr = nrlower; nr<nrupper; nr++) {\n\t\t\t\t\tcategory[32767+nr] = cat;\n\t\t\t\t\tbitcode[32767+nr] = [];\n\t\t\t\t\tbitcode[32767+nr][1] = cat;\n\t\t\t\t\tbitcode[32767+nr][0] = nr;\n\t\t\t\t}\n\t\t\t\t//Negative numbers\n\t\t\t\tfor (var nrneg =-(nrupper-1); nrneg<=-nrlower; nrneg++) {\n\t\t\t\t\tcategory[32767+nrneg] = cat;\n\t\t\t\t\tbitcode[32767+nrneg] = [];\n\t\t\t\t\tbitcode[32767+nrneg][1] = cat;\n\t\t\t\t\tbitcode[32767+nrneg][0] = nrupper-1+nrneg;\n\t\t\t\t}\n\t\t\t\tnrlower <<= 1;\n\t\t\t\tnrupper <<= 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction initRGBYUVTable() {\n\t\t\tfor(var i = 0; i < 256;i++) {\n\t\t\t\tRGB_YUV_TABLE[i]      \t\t=  19595 * i;\n\t\t\t\tRGB_YUV_TABLE[(i+ 256)>>0] \t=  38470 * i;\n\t\t\t\tRGB_YUV_TABLE[(i+ 512)>>0] \t=   7471 * i + 0x8000;\n\t\t\t\tRGB_YUV_TABLE[(i+ 768)>>0] \t= -11059 * i;\n\t\t\t\tRGB_YUV_TABLE[(i+1024)>>0] \t= -21709 * i;\n\t\t\t\tRGB_YUV_TABLE[(i+1280)>>0] \t=  32768 * i + 0x807FFF;\n\t\t\t\tRGB_YUV_TABLE[(i+1536)>>0] \t= -27439 * i;\n\t\t\t\tRGB_YUV_TABLE[(i+1792)>>0] \t= - 5329 * i;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// IO functions\n\t\tfunction writeBits(bs)\n\t\t{\n\t\t\tvar value = bs[0];\n\t\t\tvar posval = bs[1]-1;\n\t\t\twhile ( posval >= 0 ) {\n\t\t\t\tif (value & (1 << posval) ) {\n\t\t\t\t\tbytenew |= (1 << bytepos);\n\t\t\t\t}\n\t\t\t\tposval--;\n\t\t\t\tbytepos--;\n\t\t\t\tif (bytepos < 0) {\n\t\t\t\t\tif (bytenew == 0xFF) {\n\t\t\t\t\t\twriteByte(0xFF);\n\t\t\t\t\t\twriteByte(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\twriteByte(bytenew);\n\t\t\t\t\t}\n\t\t\t\t\tbytepos=7;\n\t\t\t\t\tbytenew=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tfunction writeByte(value)\n\t\t{\n\t\t\t//byteout.push(clt[value]); // write char directly instead of converting later\n      byteout.push(value);\n\t\t}\n\t\n\t\tfunction writeWord(value)\n\t\t{\n\t\t\twriteByte((value>>8)&0xFF);\n\t\t\twriteByte((value   )&0xFF);\n\t\t}\n\t\t\n\t\t// DCT & quantization core\n\t\tfunction fDCTQuant(data, fdtbl)\n\t\t{\n\t\t\tvar d0, d1, d2, d3, d4, d5, d6, d7;\n\t\t\t/* Pass 1: process rows. */\n\t\t\tvar dataOff=0;\n\t\t\tvar i;\n\t\t\tvar I8 = 8;\n\t\t\tvar I64 = 64;\n\t\t\tfor (i=0; i<I8; ++i)\n\t\t\t{\n\t\t\t\td0 = data[dataOff];\n\t\t\t\td1 = data[dataOff+1];\n\t\t\t\td2 = data[dataOff+2];\n\t\t\t\td3 = data[dataOff+3];\n\t\t\t\td4 = data[dataOff+4];\n\t\t\t\td5 = data[dataOff+5];\n\t\t\t\td6 = data[dataOff+6];\n\t\t\t\td7 = data[dataOff+7];\n\t\t\t\t\n\t\t\t\tvar tmp0 = d0 + d7;\n\t\t\t\tvar tmp7 = d0 - d7;\n\t\t\t\tvar tmp1 = d1 + d6;\n\t\t\t\tvar tmp6 = d1 - d6;\n\t\t\t\tvar tmp2 = d2 + d5;\n\t\t\t\tvar tmp5 = d2 - d5;\n\t\t\t\tvar tmp3 = d3 + d4;\n\t\t\t\tvar tmp4 = d3 - d4;\n\t\n\t\t\t\t/* Even part */\n\t\t\t\tvar tmp10 = tmp0 + tmp3;\t/* phase 2 */\n\t\t\t\tvar tmp13 = tmp0 - tmp3;\n\t\t\t\tvar tmp11 = tmp1 + tmp2;\n\t\t\t\tvar tmp12 = tmp1 - tmp2;\n\t\n\t\t\t\tdata[dataOff] = tmp10 + tmp11; /* phase 3 */\n\t\t\t\tdata[dataOff+4] = tmp10 - tmp11;\n\t\n\t\t\t\tvar z1 = (tmp12 + tmp13) * 0.707106781; /* c4 */\n\t\t\t\tdata[dataOff+2] = tmp13 + z1; /* phase 5 */\n\t\t\t\tdata[dataOff+6] = tmp13 - z1;\n\t\n\t\t\t\t/* Odd part */\n\t\t\t\ttmp10 = tmp4 + tmp5; /* phase 2 */\n\t\t\t\ttmp11 = tmp5 + tmp6;\n\t\t\t\ttmp12 = tmp6 + tmp7;\n\t\n\t\t\t\t/* The rotator is modified from fig 4-8 to avoid extra negations. */\n\t\t\t\tvar z5 = (tmp10 - tmp12) * 0.382683433; /* c6 */\n\t\t\t\tvar z2 = 0.541196100 * tmp10 + z5; /* c2-c6 */\n\t\t\t\tvar z4 = 1.306562965 * tmp12 + z5; /* c2+c6 */\n\t\t\t\tvar z3 = tmp11 * 0.707106781; /* c4 */\n\t\n\t\t\t\tvar z11 = tmp7 + z3;\t/* phase 5 */\n\t\t\t\tvar z13 = tmp7 - z3;\n\t\n\t\t\t\tdata[dataOff+5] = z13 + z2;\t/* phase 6 */\n\t\t\t\tdata[dataOff+3] = z13 - z2;\n\t\t\t\tdata[dataOff+1] = z11 + z4;\n\t\t\t\tdata[dataOff+7] = z11 - z4;\n\t\n\t\t\t\tdataOff += 8; /* advance pointer to next row */\n\t\t\t}\n\t\n\t\t\t/* Pass 2: process columns. */\n\t\t\tdataOff = 0;\n\t\t\tfor (i=0; i<I8; ++i)\n\t\t\t{\n\t\t\t\td0 = data[dataOff];\n\t\t\t\td1 = data[dataOff + 8];\n\t\t\t\td2 = data[dataOff + 16];\n\t\t\t\td3 = data[dataOff + 24];\n\t\t\t\td4 = data[dataOff + 32];\n\t\t\t\td5 = data[dataOff + 40];\n\t\t\t\td6 = data[dataOff + 48];\n\t\t\t\td7 = data[dataOff + 56];\n\t\t\t\t\n\t\t\t\tvar tmp0p2 = d0 + d7;\n\t\t\t\tvar tmp7p2 = d0 - d7;\n\t\t\t\tvar tmp1p2 = d1 + d6;\n\t\t\t\tvar tmp6p2 = d1 - d6;\n\t\t\t\tvar tmp2p2 = d2 + d5;\n\t\t\t\tvar tmp5p2 = d2 - d5;\n\t\t\t\tvar tmp3p2 = d3 + d4;\n\t\t\t\tvar tmp4p2 = d3 - d4;\n\t\n\t\t\t\t/* Even part */\n\t\t\t\tvar tmp10p2 = tmp0p2 + tmp3p2;\t/* phase 2 */\n\t\t\t\tvar tmp13p2 = tmp0p2 - tmp3p2;\n\t\t\t\tvar tmp11p2 = tmp1p2 + tmp2p2;\n\t\t\t\tvar tmp12p2 = tmp1p2 - tmp2p2;\n\t\n\t\t\t\tdata[dataOff] = tmp10p2 + tmp11p2; /* phase 3 */\n\t\t\t\tdata[dataOff+32] = tmp10p2 - tmp11p2;\n\t\n\t\t\t\tvar z1p2 = (tmp12p2 + tmp13p2) * 0.707106781; /* c4 */\n\t\t\t\tdata[dataOff+16] = tmp13p2 + z1p2; /* phase 5 */\n\t\t\t\tdata[dataOff+48] = tmp13p2 - z1p2;\n\t\n\t\t\t\t/* Odd part */\n\t\t\t\ttmp10p2 = tmp4p2 + tmp5p2; /* phase 2 */\n\t\t\t\ttmp11p2 = tmp5p2 + tmp6p2;\n\t\t\t\ttmp12p2 = tmp6p2 + tmp7p2;\n\t\n\t\t\t\t/* The rotator is modified from fig 4-8 to avoid extra negations. */\n\t\t\t\tvar z5p2 = (tmp10p2 - tmp12p2) * 0.382683433; /* c6 */\n\t\t\t\tvar z2p2 = 0.541196100 * tmp10p2 + z5p2; /* c2-c6 */\n\t\t\t\tvar z4p2 = 1.306562965 * tmp12p2 + z5p2; /* c2+c6 */\n\t\t\t\tvar z3p2 = tmp11p2 * 0.707106781; /* c4 */\n\t\n\t\t\t\tvar z11p2 = tmp7p2 + z3p2;\t/* phase 5 */\n\t\t\t\tvar z13p2 = tmp7p2 - z3p2;\n\t\n\t\t\t\tdata[dataOff+40] = z13p2 + z2p2; /* phase 6 */\n\t\t\t\tdata[dataOff+24] = z13p2 - z2p2;\n\t\t\t\tdata[dataOff+ 8] = z11p2 + z4p2;\n\t\t\t\tdata[dataOff+56] = z11p2 - z4p2;\n\t\n\t\t\t\tdataOff++; /* advance pointer to next column */\n\t\t\t}\n\t\n\t\t\t// Quantize/descale the coefficients\n\t\t\tvar fDCTQuant;\n\t\t\tfor (i=0; i<I64; ++i)\n\t\t\t{\n\t\t\t\t// Apply the quantization and scaling factor & Round to nearest integer\n\t\t\t\tfDCTQuant = data[i]*fdtbl[i];\n\t\t\t\toutputfDCTQuant[i] = (fDCTQuant > 0.0) ? ((fDCTQuant + 0.5)|0) : ((fDCTQuant - 0.5)|0);\n\t\t\t\t//outputfDCTQuant[i] = fround(fDCTQuant);\n\n\t\t\t}\n\t\t\treturn outputfDCTQuant;\n\t\t}\n\t\t\n\t\tfunction writeAPP0()\n\t\t{\n\t\t\twriteWord(0xFFE0); // marker\n\t\t\twriteWord(16); // length\n\t\t\twriteByte(0x4A); // J\n\t\t\twriteByte(0x46); // F\n\t\t\twriteByte(0x49); // I\n\t\t\twriteByte(0x46); // F\n\t\t\twriteByte(0); // = \"JFIF\",'\\0'\n\t\t\twriteByte(1); // versionhi\n\t\t\twriteByte(1); // versionlo\n\t\t\twriteByte(0); // xyunits\n\t\t\twriteWord(1); // xdensity\n\t\t\twriteWord(1); // ydensity\n\t\t\twriteByte(0); // thumbnwidth\n\t\t\twriteByte(0); // thumbnheight\n\t\t}\n\t\n\t\tfunction writeSOF0(width, height)\n\t\t{\n\t\t\twriteWord(0xFFC0); // marker\n\t\t\twriteWord(17);   // length, truecolor YUV JPG\n\t\t\twriteByte(8);    // precision\n\t\t\twriteWord(height);\n\t\t\twriteWord(width);\n\t\t\twriteByte(3);    // nrofcomponents\n\t\t\twriteByte(1);    // IdY\n\t\t\twriteByte(0x11); // HVY\n\t\t\twriteByte(0);    // QTY\n\t\t\twriteByte(2);    // IdU\n\t\t\twriteByte(0x11); // HVU\n\t\t\twriteByte(1);    // QTU\n\t\t\twriteByte(3);    // IdV\n\t\t\twriteByte(0x11); // HVV\n\t\t\twriteByte(1);    // QTV\n\t\t}\n\t\n\t\tfunction writeDQT()\n\t\t{\n\t\t\twriteWord(0xFFDB); // marker\n\t\t\twriteWord(132);\t   // length\n\t\t\twriteByte(0);\n\t\t\tfor (var i=0; i<64; i++) {\n\t\t\t\twriteByte(YTable[i]);\n\t\t\t}\n\t\t\twriteByte(1);\n\t\t\tfor (var j=0; j<64; j++) {\n\t\t\t\twriteByte(UVTable[j]);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction writeDHT()\n\t\t{\n\t\t\twriteWord(0xFFC4); // marker\n\t\t\twriteWord(0x01A2); // length\n\t\n\t\t\twriteByte(0); // HTYDCinfo\n\t\t\tfor (var i=0; i<16; i++) {\n\t\t\t\twriteByte(std_dc_luminance_nrcodes[i+1]);\n\t\t\t}\n\t\t\tfor (var j=0; j<=11; j++) {\n\t\t\t\twriteByte(std_dc_luminance_values[j]);\n\t\t\t}\n\t\n\t\t\twriteByte(0x10); // HTYACinfo\n\t\t\tfor (var k=0; k<16; k++) {\n\t\t\t\twriteByte(std_ac_luminance_nrcodes[k+1]);\n\t\t\t}\n\t\t\tfor (var l=0; l<=161; l++) {\n\t\t\t\twriteByte(std_ac_luminance_values[l]);\n\t\t\t}\n\t\n\t\t\twriteByte(1); // HTUDCinfo\n\t\t\tfor (var m=0; m<16; m++) {\n\t\t\t\twriteByte(std_dc_chrominance_nrcodes[m+1]);\n\t\t\t}\n\t\t\tfor (var n=0; n<=11; n++) {\n\t\t\t\twriteByte(std_dc_chrominance_values[n]);\n\t\t\t}\n\t\n\t\t\twriteByte(0x11); // HTUACinfo\n\t\t\tfor (var o=0; o<16; o++) {\n\t\t\t\twriteByte(std_ac_chrominance_nrcodes[o+1]);\n\t\t\t}\n\t\t\tfor (var p=0; p<=161; p++) {\n\t\t\t\twriteByte(std_ac_chrominance_values[p]);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction writeSOS()\n\t\t{\n\t\t\twriteWord(0xFFDA); // marker\n\t\t\twriteWord(12); // length\n\t\t\twriteByte(3); // nrofcomponents\n\t\t\twriteByte(1); // IdY\n\t\t\twriteByte(0); // HTY\n\t\t\twriteByte(2); // IdU\n\t\t\twriteByte(0x11); // HTU\n\t\t\twriteByte(3); // IdV\n\t\t\twriteByte(0x11); // HTV\n\t\t\twriteByte(0); // Ss\n\t\t\twriteByte(0x3f); // Se\n\t\t\twriteByte(0); // Bf\n\t\t}\n\t\t\n\t\tfunction processDU(CDU, fdtbl, DC, HTDC, HTAC){\n\t\t\tvar EOB = HTAC[0x00];\n\t\t\tvar M16zeroes = HTAC[0xF0];\n\t\t\tvar pos;\n\t\t\tvar I16 = 16;\n\t\t\tvar I63 = 63;\n\t\t\tvar I64 = 64;\n\t\t\tvar DU_DCT = fDCTQuant(CDU, fdtbl);\n\t\t\t//ZigZag reorder\n\t\t\tfor (var j=0;j<I64;++j) {\n\t\t\t\tDU[ZigZag[j]]=DU_DCT[j];\n\t\t\t}\n\t\t\tvar Diff = DU[0] - DC; DC = DU[0];\n\t\t\t//Encode DC\n\t\t\tif (Diff==0) {\n\t\t\t\twriteBits(HTDC[0]); // Diff might be 0\n\t\t\t} else {\n\t\t\t\tpos = 32767+Diff;\n\t\t\t\twriteBits(HTDC[category[pos]]);\n\t\t\t\twriteBits(bitcode[pos]);\n\t\t\t}\n\t\t\t//Encode ACs\n\t\t\tvar end0pos = 63; // was const... which is crazy\n\t\t\tfor (; (end0pos>0)&&(DU[end0pos]==0); end0pos--) {};\n\t\t\t//end0pos = first element in reverse order !=0\n\t\t\tif ( end0pos == 0) {\n\t\t\t\twriteBits(EOB);\n\t\t\t\treturn DC;\n\t\t\t}\n\t\t\tvar i = 1;\n\t\t\tvar lng;\n\t\t\twhile ( i <= end0pos ) {\n\t\t\t\tvar startpos = i;\n\t\t\t\tfor (; (DU[i]==0) && (i<=end0pos); ++i) {}\n\t\t\t\tvar nrzeroes = i-startpos;\n\t\t\t\tif ( nrzeroes >= I16 ) {\n\t\t\t\t\tlng = nrzeroes>>4;\n\t\t\t\t\tfor (var nrmarker=1; nrmarker <= lng; ++nrmarker)\n\t\t\t\t\t\twriteBits(M16zeroes);\n\t\t\t\t\tnrzeroes = nrzeroes&0xF;\n\t\t\t\t}\n\t\t\t\tpos = 32767+DU[i];\n\t\t\t\twriteBits(HTAC[(nrzeroes<<4)+category[pos]]);\n\t\t\t\twriteBits(bitcode[pos]);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif ( end0pos != I63 ) {\n\t\t\t\twriteBits(EOB);\n\t\t\t}\n\t\t\treturn DC;\n\t\t}\n\n\t\tfunction initCharLookupTable(){\n\t\t\tvar sfcc = String.fromCharCode;\n\t\t\tfor(var i=0; i < 256; i++){ ///// ACHTUNG // 255\n\t\t\t\tclt[i] = sfcc(i);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.encode = function(image,quality) // image data object\n\t\t{\n\t\t\tvar time_start = new Date().getTime();\n\t\t\t\n\t\t\tif(quality) setQuality(quality);\n\t\t\t\n\t\t\t// Initialize bit writer\n\t\t\tbyteout = new Array();\n\t\t\tbytenew=0;\n\t\t\tbytepos=7;\n\t\n\t\t\t// Add JPEG headers\n\t\t\twriteWord(0xFFD8); // SOI\n\t\t\twriteAPP0();\n\t\t\twriteDQT();\n\t\t\twriteSOF0(image.width,image.height);\n\t\t\twriteDHT();\n\t\t\twriteSOS();\n\n\t\n\t\t\t// Encode 8x8 macroblocks\n\t\t\tvar DCY=0;\n\t\t\tvar DCU=0;\n\t\t\tvar DCV=0;\n\t\t\t\n\t\t\tbytenew=0;\n\t\t\tbytepos=7;\n\t\t\t\n\t\t\t\n\t\t\tthis.encode.displayName = \"_encode_\";\n\n\t\t\tvar imageData = image.data;\n\t\t\tvar width = image.width;\n\t\t\tvar height = image.height;\n\n\t\t\tvar quadWidth = width*4;\n\t\t\tvar tripleWidth = width*3;\n\t\t\t\n\t\t\tvar x, y = 0;\n\t\t\tvar r, g, b;\n\t\t\tvar start,p, col,row,pos;\n\t\t\twhile(y < height){\n\t\t\t\tx = 0;\n\t\t\t\twhile(x < quadWidth){\n\t\t\t\tstart = quadWidth * y + x;\n\t\t\t\tp = start;\n\t\t\t\tcol = -1;\n\t\t\t\trow = 0;\n\t\t\t\t\n\t\t\t\tfor(pos=0; pos < 64; pos++){\n\t\t\t\t\trow = pos >> 3;// /8\n\t\t\t\t\tcol = ( pos & 7 ) * 4; // %8\n\t\t\t\t\tp = start + ( row * quadWidth ) + col;\t\t\n\t\t\t\t\t\n\t\t\t\t\tif(y+row >= height){ // padding bottom\n\t\t\t\t\t\tp-= (quadWidth*(y+1+row-height));\n\t\t\t\t\t}\n\n\t\t\t\t\tif(x+col >= quadWidth){ // padding right\t\n\t\t\t\t\t\tp-= ((x+col) - quadWidth +4)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tr = imageData[ p++ ];\n\t\t\t\t\tg = imageData[ p++ ];\n\t\t\t\t\tb = imageData[ p++ ];\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t/* // calculate YUV values dynamically\n\t\t\t\t\tYDU[pos]=((( 0.29900)*r+( 0.58700)*g+( 0.11400)*b))-128; //-0x80\n\t\t\t\t\tUDU[pos]=(((-0.16874)*r+(-0.33126)*g+( 0.50000)*b));\n\t\t\t\t\tVDU[pos]=((( 0.50000)*r+(-0.41869)*g+(-0.08131)*b));\n\t\t\t\t\t*/\n\t\t\t\t\t\n\t\t\t\t\t// use lookup table (slightly faster)\n\t\t\t\t\tYDU[pos] = ((RGB_YUV_TABLE[r]             + RGB_YUV_TABLE[(g +  256)>>0] + RGB_YUV_TABLE[(b +  512)>>0]) >> 16)-128;\n\t\t\t\t\tUDU[pos] = ((RGB_YUV_TABLE[(r +  768)>>0] + RGB_YUV_TABLE[(g + 1024)>>0] + RGB_YUV_TABLE[(b + 1280)>>0]) >> 16)-128;\n\t\t\t\t\tVDU[pos] = ((RGB_YUV_TABLE[(r + 1280)>>0] + RGB_YUV_TABLE[(g + 1536)>>0] + RGB_YUV_TABLE[(b + 1792)>>0]) >> 16)-128;\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tDCY = processDU(YDU, fdtbl_Y, DCY, YDC_HT, YAC_HT);\n\t\t\t\tDCU = processDU(UDU, fdtbl_UV, DCU, UVDC_HT, UVAC_HT);\n\t\t\t\tDCV = processDU(VDU, fdtbl_UV, DCV, UVDC_HT, UVAC_HT);\n\t\t\t\tx+=32;\n\t\t\t\t}\n\t\t\t\ty+=8;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t////////////////////////////////////////////////////////////////\n\t\n\t\t\t// Do the bit alignment of the EOI marker\n\t\t\tif ( bytepos >= 0 ) {\n\t\t\t\tvar fillbits = [];\n\t\t\t\tfillbits[1] = bytepos+1;\n\t\t\t\tfillbits[0] = (1<<(bytepos+1))-1;\n\t\t\t\twriteBits(fillbits);\n\t\t\t}\n\t\n\t\t\twriteWord(0xFFD9); //EOI\n\n      //return new Uint8Array(byteout);\n      return new Buffer(byteout);\n\n\t\t\tvar jpegDataUri = 'data:image/jpeg;base64,' + btoa(byteout.join(''));\n\t\t\t\n\t\t\tbyteout = [];\n\t\t\t\n\t\t\t// benchmarking\n\t\t\tvar duration = new Date().getTime() - time_start;\n    \t\t//console.log('Encoding time: '+ duration + 'ms');\n    \t\t//\n\t\t\t\n\t\t\treturn jpegDataUri\t\t\t\n\t}\n\t\n\tfunction setQuality(quality){\n\t\tif (quality <= 0) {\n\t\t\tquality = 1;\n\t\t}\n\t\tif (quality > 100) {\n\t\t\tquality = 100;\n\t\t}\n\t\t\n\t\tif(currentQuality == quality) return // don't recalc if unchanged\n\t\t\n\t\tvar sf = 0;\n\t\tif (quality < 50) {\n\t\t\tsf = Math.floor(5000 / quality);\n\t\t} else {\n\t\t\tsf = Math.floor(200 - quality*2);\n\t\t}\n\t\t\n\t\tinitQuantTables(sf);\n\t\tcurrentQuality = quality;\n\t\t//console.log('Quality set to: '+quality +'%');\n\t}\n\t\n\tfunction init(){\n\t\tvar time_start = new Date().getTime();\n\t\tif(!quality) quality = 50;\n\t\t// Create tables\n\t\tinitCharLookupTable()\n\t\tinitHuffmanTbl();\n\t\tinitCategoryNumber();\n\t\tinitRGBYUVTable();\n\t\t\n\t\tsetQuality(quality);\n\t\tvar duration = new Date().getTime() - time_start;\n    \t//console.log('Initialization '+ duration + 'ms');\n\t}\n\t\n\tinit();\n\t\n};\nif (typeof module !== undefined) {\n\tmodule.exports = encode;\n}\n\nfunction encode(imgData, qu) {\n  if (typeof qu === 'undefined') qu = 50;\n  var encoder = new JPEGEncoder(qu);\n\tvar data = encoder.encode(imgData, qu);\n  return {\n    data: data,\n    width: imgData.width,\n    height: imgData.height\n  };\n}\n\n// helper function to get the imageData of an existing image on the current page.\nfunction getImageDataFromImage(idOrElement){\n\tvar theImg = (typeof(idOrElement)=='string')? document.getElementById(idOrElement):idOrElement;\n\tvar cvs = document.createElement('canvas');\n\tcvs.width = theImg.width;\n\tcvs.height = theImg.height;\n\tvar ctx = cvs.getContext(\"2d\");\n\tctx.drawImage(theImg,0,0);\n\t\n\treturn (ctx.getImageData(0, 0, cvs.width, cvs.height));\n}\n", "/* -*- tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- /\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n/*\n   Copyright 2011 notmasteryet\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\n// - The JPEG specification can be found in the ITU CCITT Recommendation T.81\n//   (www.w3.org/Graphics/JPEG/itu-t81.pdf)\n// - The JFIF specification can be found in the JPEG File Interchange Format\n//   (www.w3.org/Graphics/JPEG/jfif3.pdf)\n// - The Adobe Application-Specific JPEG markers in the Supporting the DCT Filters\n//   in PostScript Level 2, Technical Note #5116\n//   (partners.adobe.com/public/developer/en/ps/sdk/5116.DCT_Filter.pdf)\n\nvar JpegImage = (function jpegImage() {\n  \"use strict\";\n  var dctZigZag = new Int32Array([\n     0,\n     1,  8,\n    16,  9,  2,\n     3, 10, 17, 24,\n    32, 25, 18, 11, 4,\n     5, 12, 19, 26, 33, 40,\n    48, 41, 34, 27, 20, 13,  6,\n     7, 14, 21, 28, 35, 42, 49, 56,\n    57, 50, 43, 36, 29, 22, 15,\n    23, 30, 37, 44, 51, 58,\n    59, 52, 45, 38, 31,\n    39, 46, 53, 60,\n    61, 54, 47,\n    55, 62,\n    63\n  ]);\n\n  var dctCos1  =  4017   // cos(pi/16)\n  var dctSin1  =   799   // sin(pi/16)\n  var dctCos3  =  3406   // cos(3*pi/16)\n  var dctSin3  =  2276   // sin(3*pi/16)\n  var dctCos6  =  1567   // cos(6*pi/16)\n  var dctSin6  =  3784   // sin(6*pi/16)\n  var dctSqrt2 =  5793   // sqrt(2)\n  var dctSqrt1d2 = 2896  // sqrt(2) / 2\n\n  function constructor() {\n  }\n\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0, code = [], i, j, length = 16;\n    while (length > 0 && !codeLengths[length - 1])\n      length--;\n    code.push({children: [], index: 0});\n    var p = code[0], q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          if (code.length === 0)\n            throw new Error('Could not recreate Huffman Table');\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {children: [], index: 0});\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        // p here points to last code\n        code.push(q = {children: [], index: 0});\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n\n  function decodeScan(data, offset,\n                      frame, components, resetInterval,\n                      spectralStart, spectralEnd,\n                      successivePrev, successive) {\n    var precision = frame.precision;\n    var samplesPerLine = frame.samplesPerLine;\n    var scanLines = frame.scanLines;\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var maxH = frame.maxH, maxV = frame.maxV;\n\n    var startOffset = offset, bitsData = 0, bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return (bitsData >> bitsCount) & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData == 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          throw new Error(\"unexpected marker: \" + ((bitsData << 8) | nextByte).toString(16));\n        }\n        // unstuff 0\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree, bit;\n      while ((bit = readBit()) !== null) {\n        node = node[bit];\n        if (typeof node === 'number')\n          return node;\n        if (typeof node !== 'object')\n          throw new Error(\"invalid huffman sequence\");\n      }\n      return null;\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        var bit = readBit();\n        if (bit === null) return;\n        n = (n << 1) | bit;\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      var n = receive(length);\n      if (n >= 1 << (length - 1))\n        return n;\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, zz) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      zz[0]= (component.pred += diff);\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15, r = rs >> 4;\n        if (s === 0) {\n          if (r < 15)\n            break;\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        zz[z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, zz) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : (receiveAndExtend(t) << successive);\n      zz[0] = (component.pred += diff);\n    }\n    function decodeDCSuccessive(component, zz) {\n      zz[0] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, zz) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart, e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15, r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        zz[z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0, successiveACNextValue;\n    function decodeACSuccessive(component, zz) {\n      var k = spectralStart, e = spectralEnd, r = 0;\n      while (k <= e) {\n        var z = dctZigZag[k];\n        var direction = zz[z] < 0 ? -1 : 1;\n        switch (successiveACState) {\n        case 0: // initial state\n          var rs = decodeHuffman(component.huffmanTableAC);\n          var s = rs & 15, r = rs >> 4;\n          if (s === 0) {\n            if (r < 15) {\n              eobrun = receive(r) + (1 << r);\n              successiveACState = 4;\n            } else {\n              r = 16;\n              successiveACState = 1;\n            }\n          } else {\n            if (s !== 1)\n              throw new Error(\"invalid ACn encoding\");\n            successiveACNextValue = receiveAndExtend(s);\n            successiveACState = r ? 2 : 3;\n          }\n          continue;\n        case 1: // skipping r zero items\n        case 2:\n          if (zz[z])\n            zz[z] += (readBit() << successive) * direction;\n          else {\n            r--;\n            if (r === 0)\n              successiveACState = successiveACState == 2 ? 3 : 0;\n          }\n          break;\n        case 3: // set value for a zero item\n          if (zz[z])\n            zz[z] += (readBit() << successive) * direction;\n          else {\n            zz[z] = successiveACNextValue << successive;\n            successiveACState = 0;\n          }\n          break;\n        case 4: // eob\n          if (zz[z])\n            zz[z] += (readBit() << successive) * direction;\n          break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0)\n          successiveACState = 0;\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = (mcu / mcusPerLine) | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      decode(component, component.blocks[blockRow][blockCol]);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = (mcu / component.blocksPerLine) | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      decode(component, component.blocks[blockRow][blockCol]);\n    }\n\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0)\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      else\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n    } else {\n      decodeFn = decodeBaseline;\n    }\n\n    var mcu = 0, marker;\n    var mcuExpected;\n    if (componentsLength == 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    if (!resetInterval) resetInterval = mcuExpected;\n\n    var h, v;\n    while (mcu < mcuExpected) {\n      // reset interval stuff\n      for (i = 0; i < componentsLength; i++)\n        components[i].pred = 0;\n      eobrun = 0;\n\n      if (componentsLength == 1) {\n        component = components[0];\n        for (n = 0; n < resetInterval; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < resetInterval; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n\n          // If we've reached our expected MCU's, stop decoding\n          if (mcu === mcuExpected) break;\n        }\n      }\n\n      // find marker\n      bitsCount = 0;\n      marker = (data[offset] << 8) | data[offset + 1];\n      if (marker < 0xFF00) {\n        throw new Error(\"marker was not found\");\n      }\n\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) { // RSTx\n        offset += 2;\n      }\n      else\n        break;\n    }\n\n    return offset - startOffset;\n  }\n\n  function buildComponentData(frame, component) {\n    var lines = [];\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var samplesPerLine = blocksPerLine << 3;\n    var R = new Int32Array(64), r = new Uint8Array(64);\n\n    // A port of poppler's IDCT method which in turn is taken from:\n    //   Christoph Loeffler, Adriaan Ligtenberg, George S. Moschytz,\n    //   \"Practical Fast 1-D DCT Algorithms with 11 Multiplications\",\n    //   IEEE Intl. Conf. on Acoustics, Speech & Signal Processing, 1989,\n    //   988-991.\n    function quantizeAndInverse(zz, dataOut, dataIn) {\n      var qt = component.quantizationTable;\n      var v0, v1, v2, v3, v4, v5, v6, v7, t;\n      var p = dataIn;\n      var i;\n\n      // dequant\n      for (i = 0; i < 64; i++)\n        p[i] = zz[i] * qt[i];\n\n      // inverse DCT on rows\n      for (i = 0; i < 8; ++i) {\n        var row = 8 * i;\n\n        // check for all-zero AC coefficients\n        if (p[1 + row] == 0 && p[2 + row] == 0 && p[3 + row] == 0 &&\n            p[4 + row] == 0 && p[5 + row] == 0 && p[6 + row] == 0 &&\n            p[7 + row] == 0) {\n          t = (dctSqrt2 * p[0 + row] + 512) >> 10;\n          p[0 + row] = t;\n          p[1 + row] = t;\n          p[2 + row] = t;\n          p[3 + row] = t;\n          p[4 + row] = t;\n          p[5 + row] = t;\n          p[6 + row] = t;\n          p[7 + row] = t;\n          continue;\n        }\n\n        // stage 4\n        v0 = (dctSqrt2 * p[0 + row] + 128) >> 8;\n        v1 = (dctSqrt2 * p[4 + row] + 128) >> 8;\n        v2 = p[2 + row];\n        v3 = p[6 + row];\n        v4 = (dctSqrt1d2 * (p[1 + row] - p[7 + row]) + 128) >> 8;\n        v7 = (dctSqrt1d2 * (p[1 + row] + p[7 + row]) + 128) >> 8;\n        v5 = p[3 + row] << 4;\n        v6 = p[5 + row] << 4;\n\n        // stage 3\n        t = (v0 - v1+ 1) >> 1;\n        v0 = (v0 + v1 + 1) >> 1;\n        v1 = t;\n        t = (v2 * dctSin6 + v3 * dctCos6 + 128) >> 8;\n        v2 = (v2 * dctCos6 - v3 * dctSin6 + 128) >> 8;\n        v3 = t;\n        t = (v4 - v6 + 1) >> 1;\n        v4 = (v4 + v6 + 1) >> 1;\n        v6 = t;\n        t = (v7 + v5 + 1) >> 1;\n        v5 = (v7 - v5 + 1) >> 1;\n        v7 = t;\n\n        // stage 2\n        t = (v0 - v3 + 1) >> 1;\n        v0 = (v0 + v3 + 1) >> 1;\n        v3 = t;\n        t = (v1 - v2 + 1) >> 1;\n        v1 = (v1 + v2 + 1) >> 1;\n        v2 = t;\n        t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n        v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n        v7 = t;\n        t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n        v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n        v6 = t;\n\n        // stage 1\n        p[0 + row] = v0 + v7;\n        p[7 + row] = v0 - v7;\n        p[1 + row] = v1 + v6;\n        p[6 + row] = v1 - v6;\n        p[2 + row] = v2 + v5;\n        p[5 + row] = v2 - v5;\n        p[3 + row] = v3 + v4;\n        p[4 + row] = v3 - v4;\n      }\n\n      // inverse DCT on columns\n      for (i = 0; i < 8; ++i) {\n        var col = i;\n\n        // check for all-zero AC coefficients\n        if (p[1*8 + col] == 0 && p[2*8 + col] == 0 && p[3*8 + col] == 0 &&\n            p[4*8 + col] == 0 && p[5*8 + col] == 0 && p[6*8 + col] == 0 &&\n            p[7*8 + col] == 0) {\n          t = (dctSqrt2 * dataIn[i+0] + 8192) >> 14;\n          p[0*8 + col] = t;\n          p[1*8 + col] = t;\n          p[2*8 + col] = t;\n          p[3*8 + col] = t;\n          p[4*8 + col] = t;\n          p[5*8 + col] = t;\n          p[6*8 + col] = t;\n          p[7*8 + col] = t;\n          continue;\n        }\n\n        // stage 4\n        v0 = (dctSqrt2 * p[0*8 + col] + 2048) >> 12;\n        v1 = (dctSqrt2 * p[4*8 + col] + 2048) >> 12;\n        v2 = p[2*8 + col];\n        v3 = p[6*8 + col];\n        v4 = (dctSqrt1d2 * (p[1*8 + col] - p[7*8 + col]) + 2048) >> 12;\n        v7 = (dctSqrt1d2 * (p[1*8 + col] + p[7*8 + col]) + 2048) >> 12;\n        v5 = p[3*8 + col];\n        v6 = p[5*8 + col];\n\n        // stage 3\n        t = (v0 - v1 + 1) >> 1;\n        v0 = (v0 + v1 + 1) >> 1;\n        v1 = t;\n        t = (v2 * dctSin6 + v3 * dctCos6 + 2048) >> 12;\n        v2 = (v2 * dctCos6 - v3 * dctSin6 + 2048) >> 12;\n        v3 = t;\n        t = (v4 - v6 + 1) >> 1;\n        v4 = (v4 + v6 + 1) >> 1;\n        v6 = t;\n        t = (v7 + v5 + 1) >> 1;\n        v5 = (v7 - v5 + 1) >> 1;\n        v7 = t;\n\n        // stage 2\n        t = (v0 - v3 + 1) >> 1;\n        v0 = (v0 + v3 + 1) >> 1;\n        v3 = t;\n        t = (v1 - v2 + 1) >> 1;\n        v1 = (v1 + v2 + 1) >> 1;\n        v2 = t;\n        t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n        v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n        v7 = t;\n        t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n        v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n        v6 = t;\n\n        // stage 1\n        p[0*8 + col] = v0 + v7;\n        p[7*8 + col] = v0 - v7;\n        p[1*8 + col] = v1 + v6;\n        p[6*8 + col] = v1 - v6;\n        p[2*8 + col] = v2 + v5;\n        p[5*8 + col] = v2 - v5;\n        p[3*8 + col] = v3 + v4;\n        p[4*8 + col] = v3 - v4;\n      }\n\n      // convert to 8-bit integers\n      for (i = 0; i < 64; ++i) {\n        var sample = 128 + ((p[i] + 8) >> 4);\n        dataOut[i] = sample < 0 ? 0 : sample > 0xFF ? 0xFF : sample;\n      }\n    }\n\n    var i, j;\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      var scanLine = blockRow << 3;\n      for (i = 0; i < 8; i++)\n        lines.push(new Uint8Array(samplesPerLine));\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        quantizeAndInverse(component.blocks[blockRow][blockCol], r, R);\n\n        var offset = 0, sample = blockCol << 3;\n        for (j = 0; j < 8; j++) {\n          var line = lines[scanLine + j];\n          for (i = 0; i < 8; i++)\n            line[sample + i] = r[offset++];\n        }\n      }\n    }\n    return lines;\n  }\n\n  function clampTo8bit(a) {\n    return a < 0 ? 0 : a > 255 ? 255 : a;\n  }\n\n  constructor.prototype = {\n    load: function load(path) {\n      var xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", path, true);\n      xhr.responseType = \"arraybuffer\";\n      xhr.onload = (function() {\n        // TODO catch parse error\n        var data = new Uint8Array(xhr.response || xhr.mozResponseArrayBuffer);\n        this.parse(data);\n        if (this.onload)\n          this.onload();\n      }).bind(this);\n      xhr.send(null);\n    },\n    parse: function parse(data) {\n      var offset = 0, length = data.length;\n      function readUint16() {\n        var value = (data[offset] << 8) | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var array = data.subarray(offset, offset + length - 2);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var maxH = 0, maxV = 0;\n        var component, componentId;\n        for (componentId in frame.components) {\n          if (frame.components.hasOwnProperty(componentId)) {\n            component = frame.components[componentId];\n            if (maxH < component.h) maxH = component.h;\n            if (maxV < component.v) maxV = component.v;\n          }\n        }\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / maxV);\n        for (componentId in frame.components) {\n          if (frame.components.hasOwnProperty(componentId)) {\n            component = frame.components[componentId];\n            var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / maxH);\n            var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines  / 8) * component.v / maxV);\n            var blocksPerLineForMcu = mcusPerLine * component.h;\n            var blocksPerColumnForMcu = mcusPerColumn * component.v;\n            var blocks = [];\n            for (var i = 0; i < blocksPerColumnForMcu; i++) {\n              var row = [];\n              for (var j = 0; j < blocksPerLineForMcu; j++)\n                row.push(new Int32Array(64));\n              blocks.push(row);\n            }\n            component.blocksPerLine = blocksPerLine;\n            component.blocksPerColumn = blocksPerColumn;\n            component.blocks = blocks;\n          }\n        }\n        frame.maxH = maxH;\n        frame.maxV = maxV;\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var jfif = null;\n      var adobe = null;\n      var pixels = null;\n      var frame, resetInterval;\n      var quantizationTables = [], frames = [];\n      var huffmanTablesAC = [], huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker != 0xFFD8) { // SOI (Start of Image)\n        throw new Error(\"SOI not found\");\n      }\n\n      fileMarker = readUint16();\n      while (fileMarker != 0xFFD9) { // EOI (End of image)\n        var i, j, l;\n        switch(fileMarker) {\n          case 0xFF00: break;\n          case 0xFFE0: // APP0 (Application Specific)\n          case 0xFFE1: // APP1\n          case 0xFFE2: // APP2\n          case 0xFFE3: // APP3\n          case 0xFFE4: // APP4\n          case 0xFFE5: // APP5\n          case 0xFFE6: // APP6\n          case 0xFFE7: // APP7\n          case 0xFFE8: // APP8\n          case 0xFFE9: // APP9\n          case 0xFFEA: // APP10\n          case 0xFFEB: // APP11\n          case 0xFFEC: // APP12\n          case 0xFFED: // APP13\n          case 0xFFEE: // APP14\n          case 0xFFEF: // APP15\n          case 0xFFFE: // COM (Comment)\n            var appData = readDataBlock();\n\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 &&\n                appData[3] === 0x46 && appData[4] === 0) { // 'JFIF\\x00'\n                jfif = {\n                  version: { major: appData[5], minor: appData[6] },\n                  densityUnits: appData[7],\n                  xDensity: (appData[8] << 8) | appData[9],\n                  yDensity: (appData[10] << 8) | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            // TODO APP1 - Exif\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F &&\n                appData[3] === 0x62 && appData[4] === 0x65 && appData[5] === 0) { // 'Adobe\\x00'\n                adobe = {\n                  version: appData[6],\n                  flags0: (appData[7] << 8) | appData[8],\n                  flags1: (appData[9] << 8) | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n\n          case 0xFFDB: // DQT (Define Quantization Tables)\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Int32Array(64);\n              if ((quantizationTableSpec >> 4) === 0) { // 8 bit values\n                for (j = 0; j < 64; j++) {\n                  var z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if ((quantizationTableSpec >> 4) === 1) { //16 bit\n                for (j = 0; j < 64; j++) {\n                  var z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else\n                throw new Error(\"DQT: invalid table spec\");\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n\n          case 0xFFC0: // SOF0 (Start of Frame, Baseline DCT)\n          case 0xFFC1: // SOF1 (Start of Frame, Extended DCT)\n          case 0xFFC2: // SOF2 (Start of Frame, Progressive DCT)\n            readUint16(); // skip data length\n            frame = {};\n            frame.extended = (fileMarker === 0xFFC1);\n            frame.progressive = (fileMarker === 0xFFC2);\n            frame.precision = data[offset++];\n            frame.scanLines = readUint16();\n            frame.samplesPerLine = readUint16();\n            frame.components = {};\n            frame.componentsOrder = [];\n            var componentsCount = data[offset++], componentId;\n            var maxH = 0, maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              var qId = data[offset + 2];\n              frame.componentsOrder.push(componentId);\n              frame.components[componentId] = {\n                h: h,\n                v: v,\n                quantizationIdx: qId\n              };\n              offset += 3;\n            }\n            prepareComponents(frame);\n            frames.push(frame);\n            break;\n\n          case 0xFFC4: // DHT (Define Huffman Tables)\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++)\n                codeLengthSum += (codeLengths[j] = data[offset]);\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++)\n                huffmanValues[j] = data[offset];\n              i += 17 + codeLengthSum;\n\n              ((huffmanTableSpec >> 4) === 0 ?\n                huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] =\n                buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n\n          case 0xFFDD: // DRI (Define Restart Interval)\n            readUint16(); // skip data length\n            resetInterval = readUint16();\n            break;\n\n          case 0xFFDA: // SOS (Start of Scan)\n            var scanLength = readUint16();\n            var selectorsCount = data[offset++];\n            var components = [], component;\n            for (i = 0; i < selectorsCount; i++) {\n              component = frame.components[data[offset++]];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            var processed = decodeScan(data, offset,\n              frame, components, resetInterval,\n              spectralStart, spectralEnd,\n              successiveApproximation >> 4, successiveApproximation & 15);\n            offset += processed;\n            break;\n\n          case 0xFFFF: // Fill bytes\n            if (data[offset] !== 0xFF) { // Avoid skipping a valid marker.\n              offset--;\n            }\n            break;\n\n          default:\n            if (data[offset - 3] == 0xFF &&\n                data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              // could be incorrect encoding -- last 0xFF byte of the previous\n              // block was eaten by the encoder\n              offset -= 3;\n              break;\n            }\n            throw new Error(\"unknown JPEG marker \" + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      if (frames.length != 1)\n        throw new Error(\"only single frame JPEGs supported\");\n\n      // set each frame's components quantization table\n      for (var i = 0; i < frames.length; i++) {\n        var cp = frames[i].components;\n        for (var j in cp) {\n          cp[j].quantizationTable = quantizationTables[cp[j].quantizationIdx];\n          delete cp[j].quantizationIdx;\n        }\n      }\n\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (var i = 0; i < frame.componentsOrder.length; i++) {\n        var component = frame.components[frame.componentsOrder[i]];\n        this.components.push({\n          lines: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV\n        });\n      }\n    },\n    getData: function getData(width, height) {\n      var scaleX = this.width / width, scaleY = this.height / height;\n\n      var component1, component2, component3, component4;\n      var component1Line, component2Line, component3Line, component4Line;\n      var x, y;\n      var offset = 0;\n      var Y, Cb, Cr, K, C, M, Ye, R, G, B;\n      var colorTransform;\n      var dataLength = width * height * this.components.length;\n      var data = new Uint8Array(dataLength);\n      switch (this.components.length) {\n        case 1:\n          component1 = this.components[0];\n          for (y = 0; y < height; y++) {\n            component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];\n            for (x = 0; x < width; x++) {\n              Y = component1Line[0 | (x * component1.scaleX * scaleX)];\n\n              data[offset++] = Y;\n            }\n          }\n          break;\n        case 2:\n          // PDF might compress two component data in custom colorspace\n          component1 = this.components[0];\n          component2 = this.components[1];\n          for (y = 0; y < height; y++) {\n            component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];\n            component2Line = component2.lines[0 | (y * component2.scaleY * scaleY)];\n            for (x = 0; x < width; x++) {\n              Y = component1Line[0 | (x * component1.scaleX * scaleX)];\n              data[offset++] = Y;\n              Y = component2Line[0 | (x * component2.scaleX * scaleX)];\n              data[offset++] = Y;\n            }\n          }\n          break;\n        case 3:\n          // The default transform for three components is true\n          colorTransform = true;\n          // The adobe transform marker overrides any previous setting\n          if (this.adobe && this.adobe.transformCode)\n            colorTransform = true;\n          else if (typeof this.colorTransform !== 'undefined')\n            colorTransform = !!this.colorTransform;\n\n          component1 = this.components[0];\n          component2 = this.components[1];\n          component3 = this.components[2];\n          for (y = 0; y < height; y++) {\n            component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];\n            component2Line = component2.lines[0 | (y * component2.scaleY * scaleY)];\n            component3Line = component3.lines[0 | (y * component3.scaleY * scaleY)];\n            for (x = 0; x < width; x++) {\n              if (!colorTransform) {\n                R = component1Line[0 | (x * component1.scaleX * scaleX)];\n                G = component2Line[0 | (x * component2.scaleX * scaleX)];\n                B = component3Line[0 | (x * component3.scaleX * scaleX)];\n              } else {\n                Y = component1Line[0 | (x * component1.scaleX * scaleX)];\n                Cb = component2Line[0 | (x * component2.scaleX * scaleX)];\n                Cr = component3Line[0 | (x * component3.scaleX * scaleX)];\n\n                R = clampTo8bit(Y + 1.402 * (Cr - 128));\n                G = clampTo8bit(Y - 0.3441363 * (Cb - 128) - 0.71413636 * (Cr - 128));\n                B = clampTo8bit(Y + 1.772 * (Cb - 128));\n              }\n\n              data[offset++] = R;\n              data[offset++] = G;\n              data[offset++] = B;\n            }\n          }\n          break;\n        case 4:\n          if (!this.adobe)\n            throw new Error('Unsupported color mode (4 components)');\n          // The default transform for four components is false\n          colorTransform = false;\n          // The adobe transform marker overrides any previous setting\n          if (this.adobe && this.adobe.transformCode)\n            colorTransform = true;\n          else if (typeof this.colorTransform !== 'undefined')\n            colorTransform = !!this.colorTransform;\n\n          component1 = this.components[0];\n          component2 = this.components[1];\n          component3 = this.components[2];\n          component4 = this.components[3];\n          for (y = 0; y < height; y++) {\n            component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];\n            component2Line = component2.lines[0 | (y * component2.scaleY * scaleY)];\n            component3Line = component3.lines[0 | (y * component3.scaleY * scaleY)];\n            component4Line = component4.lines[0 | (y * component4.scaleY * scaleY)];\n            for (x = 0; x < width; x++) {\n              if (!colorTransform) {\n                C = component1Line[0 | (x * component1.scaleX * scaleX)];\n                M = component2Line[0 | (x * component2.scaleX * scaleX)];\n                Ye = component3Line[0 | (x * component3.scaleX * scaleX)];\n                K = component4Line[0 | (x * component4.scaleX * scaleX)];\n              } else {\n                Y = component1Line[0 | (x * component1.scaleX * scaleX)];\n                Cb = component2Line[0 | (x * component2.scaleX * scaleX)];\n                Cr = component3Line[0 | (x * component3.scaleX * scaleX)];\n                K = component4Line[0 | (x * component4.scaleX * scaleX)];\n\n                C = 255 - clampTo8bit(Y + 1.402 * (Cr - 128));\n                M = 255 - clampTo8bit(Y - 0.3441363 * (Cb - 128) - 0.71413636 * (Cr - 128));\n                Ye = 255 - clampTo8bit(Y + 1.772 * (Cb - 128));\n              }\n              data[offset++] = 255-C;\n              data[offset++] = 255-M;\n              data[offset++] = 255-Ye;\n              data[offset++] = 255-K;\n            }\n          }\n          break;\n        default:\n          throw new Error('Unsupported color mode');\n      }\n      return data;\n    },\n    copyToImageData: function copyToImageData(imageData, formatAsRGBA) {\n      var width = imageData.width, height = imageData.height;\n      var imageDataArray = imageData.data;\n      var data = this.getData(width, height);\n      var i = 0, j = 0, x, y;\n      var Y, K, C, M, R, G, B;\n      switch (this.components.length) {\n        case 1:\n          for (y = 0; y < height; y++) {\n            for (x = 0; x < width; x++) {\n              Y = data[i++];\n\n              imageDataArray[j++] = Y;\n              imageDataArray[j++] = Y;\n              imageDataArray[j++] = Y;\n              if (formatAsRGBA) {\n                imageDataArray[j++] = 255;\n              }\n            }\n          }\n          break;\n        case 3:\n          for (y = 0; y < height; y++) {\n            for (x = 0; x < width; x++) {\n              R = data[i++];\n              G = data[i++];\n              B = data[i++];\n\n              imageDataArray[j++] = R;\n              imageDataArray[j++] = G;\n              imageDataArray[j++] = B;\n              if (formatAsRGBA) {\n                imageDataArray[j++] = 255;\n              }\n            }\n          }\n          break;\n        case 4:\n          for (y = 0; y < height; y++) {\n            for (x = 0; x < width; x++) {\n              C = data[i++];\n              M = data[i++];\n              Y = data[i++];\n              K = data[i++];\n\n              R = 255 - clampTo8bit(C * (1 - K / 255) + K);\n              G = 255 - clampTo8bit(M * (1 - K / 255) + K);\n              B = 255 - clampTo8bit(Y * (1 - K / 255) + K);\n\n              imageDataArray[j++] = R;\n              imageDataArray[j++] = G;\n              imageDataArray[j++] = B;\n              if (formatAsRGBA) {\n                imageDataArray[j++] = 255;\n              }\n            }\n          }\n          break;\n        default:\n          throw new Error('Unsupported color mode');\n      }\n    }\n  };\n\n  return constructor;\n})();\nmodule.exports = decode;\n\nfunction decode(jpegData, opts) {\n  var defaultOpts = {\n    useTArray: false,\n    // \"undefined\" means \"Choose whether to transform colors based on the image\u2019s color model.\"\n    colorTransform: undefined,\n    formatAsRGBA: true\n  };\n  if (opts) {\n    if (typeof opts === 'object') {\n      opts = {\n        useTArray: (typeof opts.useTArray === 'undefined' ?\n                    defaultOpts.useTArray : opts.useTArray),\n        colorTransform: (typeof opts.colorTransform === 'undefined' ?\n                         defaultOpts.colorTransform : opts.colorTransform),\n        formatAsRGBA: (typeof opts.formatAsRGBA === 'undefined' ?\n                         defaultOpts.formatAsRGBA : opts.formatAsRGBA)\n      };\n    } else {\n      // backwards compatiblity, before 0.3.5, we only had the useTArray param\n      opts = defaultOpts;\n      opts.useTArray = true;\n    }\n  } else {\n    opts = defaultOpts;\n  }\n\n  var arr = new Uint8Array(jpegData);\n  var decoder = new JpegImage();\n  decoder.parse(arr);\n  decoder.colorTransform = opts.colorTransform;\n\n  var channels = (opts.formatAsRGBA) ? 4 : 3;\n  var bytesNeeded = decoder.width * decoder.height * channels;\n  try {\n    var image = {\n      width: decoder.width,\n      height: decoder.height,\n      data: opts.useTArray ?\n        new Uint8Array(bytesNeeded) :\n        new Buffer(bytesNeeded)\n    };\n  } catch (err){\n    if (err instanceof RangeError){\n      throw new Error(\"Could not allocate enough memory for the image. \" +\n                      \"Required: \" + bytesNeeded);\n    } else {\n      throw err;\n    }\n  }\n\n  decoder.copyToImageData(image, opts.formatAsRGBA);\n\n  return image;\n}\n", "var encode = require('./lib/encoder'),\n    decode = require('./lib/decoder');\n\nmodule.exports = {\n  encode: encode,\n  decode: decode\n};\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"zlib\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "'use strict';\n\n\nvar util = require('util');\nvar Stream = require('stream');\n\n\nvar ChunkStream = module.exports = function() {\n  Stream.call(this);\n\n  this._buffers = [];\n  this._buffered = 0;\n\n  this._reads = [];\n  this._paused = false;\n\n  this._encoding = 'utf8';\n  this.writable = true;\n};\nutil.inherits(ChunkStream, Stream);\n\n\nChunkStream.prototype.read = function(length, callback) {\n\n  this._reads.push({\n    length: Math.abs(length),  // if length < 0 then at most this length\n    allowLess: length < 0,\n    func: callback\n  });\n\n  process.nextTick(function() {\n    this._process();\n\n    // its paused and there is not enought data then ask for more\n    if (this._paused && this._reads.length > 0) {\n      this._paused = false;\n\n      this.emit('drain');\n    }\n  }.bind(this));\n};\n\nChunkStream.prototype.write = function(data, encoding) {\n\n  if (!this.writable) {\n    this.emit('error', new Error('Stream not writable'));\n    return false;\n  }\n\n  var dataBuffer;\n  if (Buffer.isBuffer(data)) {\n    dataBuffer = data;\n  }\n  else {\n    dataBuffer = new Buffer(data, encoding || this._encoding);\n  }\n\n  this._buffers.push(dataBuffer);\n  this._buffered += dataBuffer.length;\n\n  this._process();\n\n  // ok if there are no more read requests\n  if (this._reads && this._reads.length === 0) {\n    this._paused = true;\n  }\n\n  return this.writable && !this._paused;\n};\n\nChunkStream.prototype.end = function(data, encoding) {\n\n  if (data) {\n    this.write(data, encoding);\n  }\n\n  this.writable = false;\n\n  // already destroyed\n  if (!this._buffers) {\n    return;\n  }\n\n  // enqueue or handle end\n  if (this._buffers.length === 0) {\n    this._end();\n  }\n  else {\n    this._buffers.push(null);\n    this._process();\n  }\n};\n\nChunkStream.prototype.destroySoon = ChunkStream.prototype.end;\n\nChunkStream.prototype._end = function() {\n\n  if (this._reads.length > 0) {\n    this.emit('error',\n      new Error('There are some read requests waitng on finished stream')\n    );\n  }\n\n  this.destroy();\n};\n\nChunkStream.prototype.destroy = function() {\n\n  if (!this._buffers) {\n    return;\n  }\n\n  this.writable = false;\n  this._reads = null;\n  this._buffers = null;\n\n  this.emit('close');\n};\n\nChunkStream.prototype._processReadAllowingLess = function(read) {\n  // ok there is any data so that we can satisfy this request\n  this._reads.shift(); // == read\n\n  // first we need to peek into first buffer\n  var smallerBuf = this._buffers[0];\n\n  // ok there is more data than we need\n  if (smallerBuf.length > read.length) {\n\n    this._buffered -= read.length;\n    this._buffers[0] = smallerBuf.slice(read.length);\n\n    read.func.call(this, smallerBuf.slice(0, read.length));\n\n  }\n  else {\n    // ok this is less than maximum length so use it all\n    this._buffered -= smallerBuf.length;\n    this._buffers.shift(); // == smallerBuf\n\n    read.func.call(this, smallerBuf);\n  }\n};\n\nChunkStream.prototype._processRead = function(read) {\n  this._reads.shift(); // == read\n\n  var pos = 0;\n  var count = 0;\n  var data = new Buffer(read.length);\n\n  // create buffer for all data\n  while (pos < read.length) {\n\n    var buf = this._buffers[count++];\n    var len = Math.min(buf.length, read.length - pos);\n\n    buf.copy(data, pos, 0, len);\n    pos += len;\n\n    // last buffer wasn't used all so just slice it and leave\n    if (len !== buf.length) {\n      this._buffers[--count] = buf.slice(len);\n    }\n  }\n\n  // remove all used buffers\n  if (count > 0) {\n    this._buffers.splice(0, count);\n  }\n\n  this._buffered -= read.length;\n\n  read.func.call(this, data);\n};\n\nChunkStream.prototype._process = function() {\n\n  try {\n    // as long as there is any data and read requests\n    while (this._buffered > 0 && this._reads && this._reads.length > 0) {\n\n      var read = this._reads[0];\n\n      // read any data (but no more than length)\n      if (read.allowLess) {\n        this._processReadAllowingLess(read);\n\n      }\n      else if (this._buffered >= read.length) {\n        // ok we can meet some expectations\n\n        this._processRead(read);\n      }\n      else {\n        // not enought data to satisfy first request in queue\n        // so we need to wait for more\n        break;\n      }\n    }\n\n    if (this._buffers && this._buffers.length > 0 && this._buffers[0] === null) {\n      this._end();\n    }\n  }\n  catch (ex) {\n    this.emit('error', ex);\n  }\n};\n", "'use strict';\n\n// Adam 7\n//   0 1 2 3 4 5 6 7\n// 0 x 6 4 6 x 6 4 6\n// 1 7 7 7 7 7 7 7 7\n// 2 5 6 5 6 5 6 5 6\n// 3 7 7 7 7 7 7 7 7\n// 4 3 6 4 6 3 6 4 6\n// 5 7 7 7 7 7 7 7 7\n// 6 5 6 5 6 5 6 5 6\n// 7 7 7 7 7 7 7 7 7\n\n\nvar imagePasses = [\n  { // pass 1 - 1px\n    x: [0],\n    y: [0]\n  },\n  { // pass 2 - 1px\n    x: [4],\n    y: [0]\n  },\n  { // pass 3 - 2px\n    x: [0, 4],\n    y: [4]\n  },\n  { // pass 4 - 4px\n    x: [2, 6],\n    y: [0, 4]\n  },\n  { // pass 5 - 8px\n    x: [0, 2, 4, 6],\n    y: [2, 6]\n  },\n  { // pass 6 - 16px\n    x: [1, 3, 5, 7],\n    y: [0, 2, 4, 6]\n  },\n  { // pass 7 - 32px\n    x: [0, 1, 2, 3, 4, 5, 6, 7],\n    y: [1, 3, 5, 7]\n  }\n];\n\nexports.getImagePasses = function(width, height) {\n  var images = [];\n  var xLeftOver = width % 8;\n  var yLeftOver = height % 8;\n  var xRepeats = (width - xLeftOver) / 8;\n  var yRepeats = (height - yLeftOver) / 8;\n  for (var i = 0; i < imagePasses.length; i++) {\n    var pass = imagePasses[i];\n    var passWidth = xRepeats * pass.x.length;\n    var passHeight = yRepeats * pass.y.length;\n    for (var j = 0; j < pass.x.length; j++) {\n      if (pass.x[j] < xLeftOver) {\n        passWidth++;\n      }\n      else {\n        break;\n      }\n    }\n    for (j = 0; j < pass.y.length; j++) {\n      if (pass.y[j] < yLeftOver) {\n        passHeight++;\n      }\n      else {\n        break;\n      }\n    }\n    if (passWidth > 0 && passHeight > 0) {\n      images.push({ width: passWidth, height: passHeight, index: i });\n    }\n  }\n  return images;\n};\n\nexports.getInterlaceIterator = function(width) {\n  return function(x, y, pass) {\n    var outerXLeftOver = x % imagePasses[pass].x.length;\n    var outerX = (((x - outerXLeftOver) / imagePasses[pass].x.length) * 8) + imagePasses[pass].x[outerXLeftOver];\n    var outerYLeftOver = y % imagePasses[pass].y.length;\n    var outerY = (((y - outerYLeftOver) / imagePasses[pass].y.length) * 8) + imagePasses[pass].y[outerYLeftOver];\n    return (outerX * 4) + (outerY * width * 4);\n  };\n};", "'use strict';\r\n\r\nmodule.exports = function paethPredictor(left, above, upLeft) {\r\n\r\n  var paeth = left + above - upLeft;\r\n  var pLeft = Math.abs(paeth - left);\r\n  var pAbove = Math.abs(paeth - above);\r\n  var pUpLeft = Math.abs(paeth - upLeft);\r\n\r\n  if (pLeft <= pAbove && pLeft <= pUpLeft) {\r\n    return left;\r\n  }\r\n  if (pAbove <= pUpLeft) {\r\n    return above;\r\n  }\r\n  return upLeft;\r\n};", "'use strict';\n\nvar interlaceUtils = require('./interlace');\nvar paethPredictor = require('./paeth-predictor');\n\nfunction getByteWidth(width, bpp, depth) {\n  var byteWidth = width * bpp;\n  if (depth !== 8) {\n    byteWidth = Math.ceil(byteWidth / (8 / depth));\n  }\n  return byteWidth;\n}\n\nvar Filter = module.exports = function(bitmapInfo, dependencies) {\n\n  var width = bitmapInfo.width;\n  var height = bitmapInfo.height;\n  var interlace = bitmapInfo.interlace;\n  var bpp = bitmapInfo.bpp;\n  var depth = bitmapInfo.depth;\n\n  this.read = dependencies.read;\n  this.write = dependencies.write;\n  this.complete = dependencies.complete;\n\n  this._imageIndex = 0;\n  this._images = [];\n  if (interlace) {\n    var passes = interlaceUtils.getImagePasses(width, height);\n    for (var i = 0; i < passes.length; i++) {\n      this._images.push({\n        byteWidth: getByteWidth(passes[i].width, bpp, depth),\n        height: passes[i].height,\n        lineIndex: 0\n      });\n    }\n  }\n  else {\n    this._images.push({\n      byteWidth: getByteWidth(width, bpp, depth),\n      height: height,\n      lineIndex: 0\n    });\n  }\n\n  // when filtering the line we look at the pixel to the left\n  // the spec also says it is done on a byte level regardless of the number of pixels\n  // so if the depth is byte compatible (8 or 16) we subtract the bpp in order to compare back\n  // a pixel rather than just a different byte part. However if we are sub byte, we ignore.\n  if (depth === 8) {\n    this._xComparison = bpp;\n  }\n  else if (depth === 16) {\n    this._xComparison = bpp * 2;\n  }\n  else {\n    this._xComparison = 1;\n  }\n};\n\nFilter.prototype.start = function() {\n  this.read(this._images[this._imageIndex].byteWidth + 1, this._reverseFilterLine.bind(this));\n};\n\nFilter.prototype._unFilterType1 = function(rawData, unfilteredLine, byteWidth) {\n\n  var xComparison = this._xComparison;\n  var xBiggerThan = xComparison - 1;\n\n  for (var x = 0; x < byteWidth; x++) {\n    var rawByte = rawData[1 + x];\n    var f1Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;\n    unfilteredLine[x] = rawByte + f1Left;\n  }\n};\n\nFilter.prototype._unFilterType2 = function(rawData, unfilteredLine, byteWidth) {\n\n  var lastLine = this._lastLine;\n\n  for (var x = 0; x < byteWidth; x++) {\n    var rawByte = rawData[1 + x];\n    var f2Up = lastLine ? lastLine[x] : 0;\n    unfilteredLine[x] = rawByte + f2Up;\n  }\n};\n\nFilter.prototype._unFilterType3 = function(rawData, unfilteredLine, byteWidth) {\n\n  var xComparison = this._xComparison;\n  var xBiggerThan = xComparison - 1;\n  var lastLine = this._lastLine;\n\n  for (var x = 0; x < byteWidth; x++) {\n    var rawByte = rawData[1 + x];\n    var f3Up = lastLine ? lastLine[x] : 0;\n    var f3Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;\n    var f3Add = Math.floor((f3Left + f3Up) / 2);\n    unfilteredLine[x] = rawByte + f3Add;\n  }\n};\n\nFilter.prototype._unFilterType4 = function(rawData, unfilteredLine, byteWidth) {\n\n  var xComparison = this._xComparison;\n  var xBiggerThan = xComparison - 1;\n  var lastLine = this._lastLine;\n\n  for (var x = 0; x < byteWidth; x++) {\n    var rawByte = rawData[1 + x];\n    var f4Up = lastLine ? lastLine[x] : 0;\n    var f4Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;\n    var f4UpLeft = x > xBiggerThan && lastLine ? lastLine[x - xComparison] : 0;\n    var f4Add = paethPredictor(f4Left, f4Up, f4UpLeft);\n    unfilteredLine[x] = rawByte + f4Add;\n  }\n};\n\nFilter.prototype._reverseFilterLine = function(rawData) {\n\n  var filter = rawData[0];\n  var unfilteredLine;\n  var currentImage = this._images[this._imageIndex];\n  var byteWidth = currentImage.byteWidth;\n\n  if (filter === 0) {\n    unfilteredLine = rawData.slice(1, byteWidth + 1);\n  }\n  else {\n\n    unfilteredLine = new Buffer(byteWidth);\n\n    switch (filter) {\n      case 1:\n        this._unFilterType1(rawData, unfilteredLine, byteWidth);\n        break;\n      case 2:\n        this._unFilterType2(rawData, unfilteredLine, byteWidth);\n        break;\n      case 3:\n        this._unFilterType3(rawData, unfilteredLine, byteWidth);\n        break;\n      case 4:\n        this._unFilterType4(rawData, unfilteredLine, byteWidth);\n        break;\n      default:\n        throw new Error('Unrecognised filter type - ' + filter);\n    }\n  }\n\n  this.write(unfilteredLine);\n\n  currentImage.lineIndex++;\n  if (currentImage.lineIndex >= currentImage.height) {\n    this._lastLine = null;\n    this._imageIndex++;\n    currentImage = this._images[this._imageIndex];\n  }\n  else {\n    this._lastLine = unfilteredLine;\n  }\n\n  if (currentImage) {\n    // read, using the byte width that may be from the new current image\n    this.read(currentImage.byteWidth + 1, this._reverseFilterLine.bind(this));\n  }\n  else {\n    this._lastLine = null;\n    this.complete();\n  }\n};\n", "'use strict';\n\nvar util = require('util');\nvar ChunkStream = require('./chunkstream');\nvar Filter = require('./filter-parse');\n\n\nvar FilterAsync = module.exports = function(bitmapInfo) {\n  ChunkStream.call(this);\n\n  var buffers = [];\n  var that = this;\n  this._filter = new Filter(bitmapInfo, {\n    read: this.read.bind(this),\n    write: function(buffer) {\n      buffers.push(buffer);\n    },\n    complete: function() {\n      that.emit('complete', Buffer.concat(buffers));\n    }\n  });\n\n  this._filter.start();\n};\nutil.inherits(FilterAsync, ChunkStream);\n", "'use strict';\n\n\nmodule.exports = {\n\n  PNG_SIGNATURE: [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a],\n\n  TYPE_IHDR: 0x49484452,\n  TYPE_IEND: 0x49454e44,\n  TYPE_IDAT: 0x49444154,\n  TYPE_PLTE: 0x504c5445,\n  TYPE_tRNS: 0x74524e53, // eslint-disable-line camelcase\n  TYPE_gAMA: 0x67414d41, // eslint-disable-line camelcase\n\n  // color-type bits\n  COLORTYPE_GRAYSCALE: 0,\n  COLORTYPE_PALETTE: 1,\n  COLORTYPE_COLOR: 2,\n  COLORTYPE_ALPHA: 4, // e.g. grayscale and alpha\n\n  // color-type combinations\n  COLORTYPE_PALETTE_COLOR: 3,\n  COLORTYPE_COLOR_ALPHA: 6,\n\n  COLORTYPE_TO_BPP_MAP: {\n    0: 1,\n    2: 3,\n    3: 1,\n    4: 2,\n    6: 4\n  },\n\n  GAMMA_DIVISION: 100000\n};\n", "'use strict';\n\nvar crcTable = [];\n\n(function() {\n  for (var i = 0; i < 256; i++) {\n    var currentCrc = i;\n    for (var j = 0; j < 8; j++) {\n      if (currentCrc & 1) {\n        currentCrc = 0xedb88320 ^ (currentCrc >>> 1);\n      }\n      else {\n        currentCrc = currentCrc >>> 1;\n      }\n    }\n    crcTable[i] = currentCrc;\n  }\n}());\n\nvar CrcCalculator = module.exports = function() {\n  this._crc = -1;\n};\n\nCrcCalculator.prototype.write = function(data) {\n\n  for (var i = 0; i < data.length; i++) {\n    this._crc = crcTable[(this._crc ^ data[i]) & 0xff] ^ (this._crc >>> 8);\n  }\n  return true;\n};\n\nCrcCalculator.prototype.crc32 = function() {\n  return this._crc ^ -1;\n};\n\n\nCrcCalculator.crc32 = function(buf) {\n\n  var crc = -1;\n  for (var i = 0; i < buf.length; i++) {\n    crc = crcTable[(crc ^ buf[i]) & 0xff] ^ (crc >>> 8);\n  }\n  return crc ^ -1;\n};\n", "'use strict';\n\nvar constants = require('./constants');\nvar CrcCalculator = require('./crc');\n\n\nvar Parser = module.exports = function(options, dependencies) {\n\n  this._options = options;\n  options.checkCRC = options.checkCRC !== false;\n\n  this._hasIHDR = false;\n  this._hasIEND = false;\n\n  // input flags/metadata\n  this._palette = [];\n  this._colorType = 0;\n\n  this._chunks = {};\n  this._chunks[constants.TYPE_IHDR] = this._handleIHDR.bind(this);\n  this._chunks[constants.TYPE_IEND] = this._handleIEND.bind(this);\n  this._chunks[constants.TYPE_IDAT] = this._handleIDAT.bind(this);\n  this._chunks[constants.TYPE_PLTE] = this._handlePLTE.bind(this);\n  this._chunks[constants.TYPE_tRNS] = this._handleTRNS.bind(this);\n  this._chunks[constants.TYPE_gAMA] = this._handleGAMA.bind(this);\n\n  this.read = dependencies.read;\n  this.error = dependencies.error;\n  this.metadata = dependencies.metadata;\n  this.gamma = dependencies.gamma;\n  this.transColor = dependencies.transColor;\n  this.palette = dependencies.palette;\n  this.parsed = dependencies.parsed;\n  this.inflateData = dependencies.inflateData;\n  this.inflateData = dependencies.inflateData;\n  this.finished = dependencies.finished;\n};\n\nParser.prototype.start = function() {\n  this.read(constants.PNG_SIGNATURE.length,\n    this._parseSignature.bind(this)\n  );\n};\n\nParser.prototype._parseSignature = function(data) {\n\n  var signature = constants.PNG_SIGNATURE;\n\n  for (var i = 0; i < signature.length; i++) {\n    if (data[i] !== signature[i]) {\n      this.error(new Error('Invalid file signature'));\n      return;\n    }\n  }\n  this.read(8, this._parseChunkBegin.bind(this));\n};\n\nParser.prototype._parseChunkBegin = function(data) {\n\n  // chunk content length\n  var length = data.readUInt32BE(0);\n\n  // chunk type\n  var type = data.readUInt32BE(4);\n  var name = '';\n  for (var i = 4; i < 8; i++) {\n    name += String.fromCharCode(data[i]);\n  }\n\n  //console.log('chunk ', name, length);\n\n  // chunk flags\n  var ancillary = Boolean(data[4] & 0x20); // or critical\n//    priv = Boolean(data[5] & 0x20), // or public\n//    safeToCopy = Boolean(data[7] & 0x20); // or unsafe\n\n  if (!this._hasIHDR && type !== constants.TYPE_IHDR) {\n    this.error(new Error('Expected IHDR on beggining'));\n    return;\n  }\n\n  this._crc = new CrcCalculator();\n  this._crc.write(new Buffer(name));\n\n  if (this._chunks[type]) {\n    return this._chunks[type](length);\n  }\n\n  if (!ancillary) {\n    this.error(new Error('Unsupported critical chunk type ' + name));\n    return;\n  }\n\n  this.read(length + 4, this._skipChunk.bind(this));\n};\n\nParser.prototype._skipChunk = function(/*data*/) {\n  this.read(8, this._parseChunkBegin.bind(this));\n};\n\nParser.prototype._handleChunkEnd = function() {\n  this.read(4, this._parseChunkEnd.bind(this));\n};\n\nParser.prototype._parseChunkEnd = function(data) {\n\n  var fileCrc = data.readInt32BE(0);\n  var calcCrc = this._crc.crc32();\n\n  // check CRC\n  if (this._options.checkCRC && calcCrc !== fileCrc) {\n    this.error(new Error('Crc error - ' + fileCrc + ' - ' + calcCrc));\n    return;\n  }\n\n  if (!this._hasIEND) {\n    this.read(8, this._parseChunkBegin.bind(this));\n  }\n};\n\nParser.prototype._handleIHDR = function(length) {\n  this.read(length, this._parseIHDR.bind(this));\n};\nParser.prototype._parseIHDR = function(data) {\n\n  this._crc.write(data);\n\n  var width = data.readUInt32BE(0);\n  var height = data.readUInt32BE(4);\n  var depth = data[8];\n  var colorType = data[9]; // bits: 1 palette, 2 color, 4 alpha\n  var compr = data[10];\n  var filter = data[11];\n  var interlace = data[12];\n\n  // console.log('    width', width, 'height', height,\n  //     'depth', depth, 'colorType', colorType,\n  //     'compr', compr, 'filter', filter, 'interlace', interlace\n  // );\n\n  if (depth !== 8 && depth !== 4 && depth !== 2 && depth !== 1 && depth !== 16) {\n    this.error(new Error('Unsupported bit depth ' + depth));\n    return;\n  }\n  if (!(colorType in constants.COLORTYPE_TO_BPP_MAP)) {\n    this.error(new Error('Unsupported color type'));\n    return;\n  }\n  if (compr !== 0) {\n    this.error(new Error('Unsupported compression method'));\n    return;\n  }\n  if (filter !== 0) {\n    this.error(new Error('Unsupported filter method'));\n    return;\n  }\n  if (interlace !== 0 && interlace !== 1) {\n    this.error(new Error('Unsupported interlace method'));\n    return;\n  }\n\n  this._colorType = colorType;\n\n  var bpp = constants.COLORTYPE_TO_BPP_MAP[this._colorType];\n\n  this._hasIHDR = true;\n\n  this.metadata({\n    width: width,\n    height: height,\n    depth: depth,\n    interlace: Boolean(interlace),\n    palette: Boolean(colorType & constants.COLORTYPE_PALETTE),\n    color: Boolean(colorType & constants.COLORTYPE_COLOR),\n    alpha: Boolean(colorType & constants.COLORTYPE_ALPHA),\n    bpp: bpp,\n    colorType: colorType\n  });\n\n  this._handleChunkEnd();\n};\n\n\nParser.prototype._handlePLTE = function(length) {\n  this.read(length, this._parsePLTE.bind(this));\n};\nParser.prototype._parsePLTE = function(data) {\n\n  this._crc.write(data);\n\n  var entries = Math.floor(data.length / 3);\n  // console.log('Palette:', entries);\n\n  for (var i = 0; i < entries; i++) {\n    this._palette.push([\n      data[i * 3],\n      data[i * 3 + 1],\n      data[i * 3 + 2],\n      0xff\n    ]);\n  }\n\n  this.palette(this._palette);\n\n  this._handleChunkEnd();\n};\n\nParser.prototype._handleTRNS = function(length) {\n  this.read(length, this._parseTRNS.bind(this));\n};\nParser.prototype._parseTRNS = function(data) {\n\n  this._crc.write(data);\n\n  // palette\n  if (this._colorType === constants.COLORTYPE_PALETTE_COLOR) {\n    if (this._palette.length === 0) {\n      this.error(new Error('Transparency chunk must be after palette'));\n      return;\n    }\n    if (data.length > this._palette.length) {\n      this.error(new Error('More transparent colors than palette size'));\n      return;\n    }\n    for (var i = 0; i < data.length; i++) {\n      this._palette[i][3] = data[i];\n    }\n    this.palette(this._palette);\n  }\n\n  // for colorType 0 (grayscale) and 2 (rgb)\n  // there might be one gray/color defined as transparent\n  if (this._colorType === constants.COLORTYPE_GRAYSCALE) {\n    // grey, 2 bytes\n    this.transColor([data.readUInt16BE(0)]);\n  }\n  if (this._colorType === constants.COLORTYPE_COLOR) {\n    this.transColor([data.readUInt16BE(0), data.readUInt16BE(2), data.readUInt16BE(4)]);\n  }\n\n  this._handleChunkEnd();\n};\n\nParser.prototype._handleGAMA = function(length) {\n  this.read(length, this._parseGAMA.bind(this));\n};\nParser.prototype._parseGAMA = function(data) {\n\n  this._crc.write(data);\n  this.gamma(data.readUInt32BE(0) / constants.GAMMA_DIVISION);\n\n  this._handleChunkEnd();\n};\n\nParser.prototype._handleIDAT = function(length) {\n  this.read(-length, this._parseIDAT.bind(this, length));\n};\nParser.prototype._parseIDAT = function(length, data) {\n\n  this._crc.write(data);\n\n  if (this._colorType === constants.COLORTYPE_PALETTE_COLOR && this._palette.length === 0) {\n    throw new Error('Expected palette not found');\n  }\n\n  this.inflateData(data);\n  var leftOverLength = length - data.length;\n\n  if (leftOverLength > 0) {\n    this._handleIDAT(leftOverLength);\n  }\n  else {\n    this._handleChunkEnd();\n  }\n};\n\nParser.prototype._handleIEND = function(length) {\n  this.read(length, this._parseIEND.bind(this));\n};\nParser.prototype._parseIEND = function(data) {\n\n  this._crc.write(data);\n\n  this._hasIEND = true;\n  this._handleChunkEnd();\n\n  if (this.finished) {\n    this.finished();\n  }\n};\n", "'use strict';\n\nvar interlaceUtils = require('./interlace');\n\nvar pixelBppMap = {\n  1: { // L\n    0: 0,\n    1: 0,\n    2: 0,\n    3: 0xff\n  },\n  2: { // LA\n    0: 0,\n    1: 0,\n    2: 0,\n    3: 1\n  },\n  3: { // RGB\n    0: 0,\n    1: 1,\n    2: 2,\n    3: 0xff\n  },\n  4: { // RGBA\n    0: 0,\n    1: 1,\n    2: 2,\n    3: 3\n  }\n};\n\nfunction bitRetriever(data, depth) {\n\n  var leftOver = [];\n  var i = 0;\n\n  function split() {\n    if (i === data.length) {\n      throw new Error('Ran out of data');\n    }\n    var byte = data[i];\n    i++;\n    var byte8, byte7, byte6, byte5, byte4, byte3, byte2, byte1;\n    switch (depth) {\n      default:\n        throw new Error('unrecognised depth');\n      case 16:\n        byte2 = data[i];\n        i++;\n        leftOver.push(((byte << 8) + byte2));\n        break;\n      case 4:\n        byte2 = byte & 0x0f;\n        byte1 = byte >> 4;\n        leftOver.push(byte1, byte2);\n        break;\n      case 2:\n        byte4 = byte & 3;\n        byte3 = byte >> 2 & 3;\n        byte2 = byte >> 4 & 3;\n        byte1 = byte >> 6 & 3;\n        leftOver.push(byte1, byte2, byte3, byte4);\n        break;\n      case 1:\n        byte8 = byte & 1;\n        byte7 = byte >> 1 & 1;\n        byte6 = byte >> 2 & 1;\n        byte5 = byte >> 3 & 1;\n        byte4 = byte >> 4 & 1;\n        byte3 = byte >> 5 & 1;\n        byte2 = byte >> 6 & 1;\n        byte1 = byte >> 7 & 1;\n        leftOver.push(byte1, byte2, byte3, byte4, byte5, byte6, byte7, byte8);\n        break;\n    }\n  }\n\n  return {\n    get: function(count) {\n      while (leftOver.length < count) {\n        split();\n      }\n      var returner = leftOver.slice(0, count);\n      leftOver = leftOver.slice(count);\n      return returner;\n    },\n    resetAfterLine: function() {\n      leftOver.length = 0;\n    },\n    end: function() {\n      if (i !== data.length) {\n        throw new Error('extra data found');\n      }\n    }\n  };\n}\n\nfunction mapImage8Bit(image, pxData, getPxPos, bpp, data, rawPos) { // eslint-disable-line max-params\n  var imageWidth = image.width;\n  var imageHeight = image.height;\n  var imagePass = image.index;\n  for (var y = 0; y < imageHeight; y++) {\n    for (var x = 0; x < imageWidth; x++) {\n      var pxPos = getPxPos(x, y, imagePass);\n\n      for (var i = 0; i < 4; i++) {\n        var idx = pixelBppMap[bpp][i];\n        if (i === data.length) {\n          throw new Error('Ran out of data');\n        }\n        pxData[pxPos + i] = idx !== 0xff ? data[idx + rawPos] : 0xff;\n      }\n      rawPos += bpp; //eslint-disable-line no-param-reassign\n    }\n  }\n  return rawPos;\n}\n\nfunction mapImageCustomBit(image, pxData, getPxPos, bpp, bits, maxBit) { // eslint-disable-line max-params\n  var imageWidth = image.width;\n  var imageHeight = image.height;\n  var imagePass = image.index;\n  for (var y = 0; y < imageHeight; y++) {\n    for (var x = 0; x < imageWidth; x++) {\n      var pixelData = bits.get(bpp);\n      var pxPos = getPxPos(x, y, imagePass);\n\n      for (var i = 0; i < 4; i++) {\n        var idx = pixelBppMap[bpp][i];\n        pxData[pxPos + i] = idx !== 0xff ? pixelData[idx] : maxBit;\n      }\n    }\n    bits.resetAfterLine();\n  }\n}\n\nexports.dataToBitMap = function(data, bitmapInfo) {\n\n  var width = bitmapInfo.width;\n  var height = bitmapInfo.height;\n  var depth = bitmapInfo.depth;\n  var bpp = bitmapInfo.bpp;\n  var interlace = bitmapInfo.interlace;\n\n  if (depth !== 8) {\n    var bits = bitRetriever(data, depth);\n  }\n  var pxData;\n  if (depth <= 8) {\n    pxData = new Buffer(width * height * 4);\n  }\n  else {\n    pxData = new Uint16Array(width * height * 4);\n  }\n  var maxBit = Math.pow(2, depth) - 1;\n  var rawPos = 0;\n  var images;\n  var getPxPos;\n\n  if (interlace) {\n    images = interlaceUtils.getImagePasses(width, height);\n    getPxPos = interlaceUtils.getInterlaceIterator(width, height);\n  }\n  else {\n    var nonInterlacedPxPos = 0;\n    getPxPos = function() {\n      var returner = nonInterlacedPxPos;\n      nonInterlacedPxPos += 4;\n      return returner;\n    };\n    images = [{ width: width, height: height }];\n  }\n\n  for (var imageIndex = 0; imageIndex < images.length; imageIndex++) {\n    if (depth === 8) {\n      rawPos = mapImage8Bit(images[imageIndex], pxData, getPxPos, bpp, data, rawPos);\n    }\n    else {\n      mapImageCustomBit(images[imageIndex], pxData, getPxPos, bpp, bits, maxBit);\n    }\n  }\n  if (depth === 8) {\n    if (rawPos !== data.length) {\n      throw new Error('extra data found');\n    }\n  }\n  else {\n    bits.end();\n  }\n\n  return pxData;\n};\n", "'use strict';\n\nfunction dePalette(indata, outdata, width, height, palette) {\n  var pxPos = 0;\n  // use values from palette\n  for (var y = 0; y < height; y++) {\n    for (var x = 0; x < width; x++) {\n      var color = palette[indata[pxPos]];\n\n      if (!color) {\n        throw new Error('index ' + indata[pxPos] + ' not in palette');\n      }\n\n      for (var i = 0; i < 4; i++) {\n        outdata[pxPos + i] = color[i];\n      }\n      pxPos += 4;\n    }\n  }\n}\n\nfunction replaceTransparentColor(indata, outdata, width, height, transColor) {\n  var pxPos = 0;\n  for (var y = 0; y < height; y++) {\n    for (var x = 0; x < width; x++) {\n      var makeTrans = false;\n\n      if (transColor.length === 1) {\n        if (transColor[0] === indata[pxPos]) {\n          makeTrans = true;\n        }\n      }\n      else if (transColor[0] === indata[pxPos] && transColor[1] === indata[pxPos + 1] && transColor[2] === indata[pxPos + 2]) {\n        makeTrans = true;\n      }\n      if (makeTrans) {\n        for (var i = 0; i < 4; i++) {\n          outdata[pxPos + i] = 0;\n        }\n      }\n      pxPos += 4;\n    }\n  }\n}\n\nfunction scaleDepth(indata, outdata, width, height, depth) {\n  var maxOutSample = 255;\n  var maxInSample = Math.pow(2, depth) - 1;\n  var pxPos = 0;\n\n  for (var y = 0; y < height; y++) {\n    for (var x = 0; x < width; x++) {\n      for (var i = 0; i < 4; i++) {\n        outdata[pxPos + i] = Math.floor((indata[pxPos + i] * maxOutSample) / maxInSample + 0.5);\n      }\n      pxPos += 4;\n    }\n  }\n}\n\nmodule.exports = function(indata, imageData) {\n\n  var depth = imageData.depth;\n  var width = imageData.width;\n  var height = imageData.height;\n  var colorType = imageData.colorType;\n  var transColor = imageData.transColor;\n  var palette = imageData.palette;\n\n  var outdata = indata; // only different for 16 bits\n\n  if (colorType === 3) { // paletted\n    dePalette(indata, outdata, width, height, palette);\n  }\n  else {\n    if (transColor) {\n      replaceTransparentColor(indata, outdata, width, height, transColor);\n    }\n    // if it needs scaling\n    if (depth !== 8) {\n      // if we need to change the buffer size\n      if (depth === 16) {\n        outdata = new Buffer(width * height * 4);\n      }\n      scaleDepth(indata, outdata, width, height, depth);\n    }\n  }\n  return outdata;\n};\n", "'use strict';\n\nvar util = require('util');\nvar zlib = require('zlib');\nvar ChunkStream = require('./chunkstream');\nvar FilterAsync = require('./filter-parse-async');\nvar Parser = require('./parser');\nvar bitmapper = require('./bitmapper');\nvar formatNormaliser = require('./format-normaliser');\n\nvar ParserAsync = module.exports = function(options) {\n  ChunkStream.call(this);\n\n  this._parser = new Parser(options, {\n    read: this.read.bind(this),\n    error: this._handleError.bind(this),\n    metadata: this._handleMetaData.bind(this),\n    gamma: this.emit.bind(this, 'gamma'),\n    palette: this._handlePalette.bind(this),\n    transColor: this._handleTransColor.bind(this),\n    finished: this._finished.bind(this),\n    inflateData: this._inflateData.bind(this)\n  });\n  this._options = options;\n  this.writable = true;\n\n  this._parser.start();\n};\nutil.inherits(ParserAsync, ChunkStream);\n\n\nParserAsync.prototype._handleError = function(err) {\n\n  this.emit('error', err);\n\n  this.writable = false;\n\n  this.destroy();\n\n  if (this._inflate && this._inflate.destroy) {\n    this._inflate.destroy();\n  }\n\n  this.errord = true;\n};\n\nParserAsync.prototype._inflateData = function(data) {\n  if (!this._inflate) {\n    this._inflate = zlib.createInflate();\n\n    this._inflate.on('error', this.emit.bind(this, 'error'));\n    this._filter.on('complete', this._complete.bind(this));\n\n    this._inflate.pipe(this._filter);\n  }\n  this._inflate.write(data);\n};\n\nParserAsync.prototype._handleMetaData = function(metaData) {\n\n  this.emit('metadata', metaData);\n\n  this._bitmapInfo = Object.create(metaData);\n\n  this._filter = new FilterAsync(this._bitmapInfo);\n};\n\nParserAsync.prototype._handleTransColor = function(transColor) {\n  this._bitmapInfo.transColor = transColor;\n};\n\nParserAsync.prototype._handlePalette = function(palette) {\n  this._bitmapInfo.palette = palette;\n};\n\n\nParserAsync.prototype._finished = function() {\n  if (this.errord) {\n    return;\n  }\n\n  if (!this._inflate) {\n    this.emit('error', 'No Inflate block');\n  }\n  else {\n    // no more data to inflate\n    this._inflate.end();\n  }\n  this.destroySoon();\n};\n\nParserAsync.prototype._complete = function(filteredData) {\n\n  if (this.errord) {\n    return;\n  }\n\n  try {\n    var bitmapData = bitmapper.dataToBitMap(filteredData, this._bitmapInfo);\n\n    var normalisedBitmapData = formatNormaliser(bitmapData, this._bitmapInfo);\n    bitmapData = null;\n  }\n  catch (ex) {\n    this._handleError(ex);\n    return;\n  }\n\n  this.emit('parsed', normalisedBitmapData);\n};\n", "'use strict';\n\nvar constants = require('./constants');\n\nmodule.exports = function(data, width, height, options) {\n  var outHasAlpha = options.colorType === constants.COLORTYPE_COLOR_ALPHA;\n  if (options.inputHasAlpha && outHasAlpha) {\n    return data;\n  }\n  if (!options.inputHasAlpha && !outHasAlpha) {\n    return data;\n  }\n\n  var outBpp = outHasAlpha ? 4 : 3;\n  var outData = new Buffer(width * height * outBpp);\n  var inBpp = options.inputHasAlpha ? 4 : 3;\n  var inIndex = 0;\n  var outIndex = 0;\n\n  var bgColor = options.bgColor || {};\n  if (bgColor.red === undefined) {\n    bgColor.red = 255;\n  }\n  if (bgColor.green === undefined) {\n    bgColor.green = 255;\n  }\n  if (bgColor.blue === undefined) {\n    bgColor.blue = 255;\n  }\n\n  for (var y = 0; y < height; y++) {\n    for (var x = 0; x < width; x++) {\n      var red = data[inIndex];\n      var green = data[inIndex + 1];\n      var blue = data[inIndex + 2];\n\n      var alpha;\n      if (options.inputHasAlpha) {\n        alpha = data[inIndex + 3];\n        if (!outHasAlpha) {\n          alpha /= 255;\n          red = Math.min(Math.max(Math.round((1 - alpha) * bgColor.red + alpha * red), 0), 255);\n          green = Math.min(Math.max(Math.round((1 - alpha) * bgColor.green + alpha * green), 0), 255);\n          blue = Math.min(Math.max(Math.round((1 - alpha) * bgColor.blue + alpha * blue), 0), 255);\n        }\n      }\n      else {\n        alpha = 255;\n      }\n\n      outData[outIndex] = red;\n      outData[outIndex + 1] = green;\n      outData[outIndex + 2] = blue;\n      if (outHasAlpha) {\n        outData[outIndex + 3] = alpha;\n      }\n\n      inIndex += inBpp;\n      outIndex += outBpp;\n    }\n  }\n\n  return outData;\n};\n", "'use strict';\n\nvar paethPredictor = require('./paeth-predictor');\n\nfunction filterNone(pxData, pxPos, byteWidth, rawData, rawPos) {\n  pxData.copy(rawData, rawPos, pxPos, pxPos + byteWidth);\n}\n\nfunction filterSumNone(pxData, pxPos, byteWidth) {\n\n  var sum = 0;\n  var length = pxPos + byteWidth;\n\n  for (var i = pxPos; i < length; i++) {\n    sum += Math.abs(pxData[i]);\n  }\n  return sum;\n}\n\nfunction filterSub(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var val = pxData[pxPos + x] - left;\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumSub(pxData, pxPos, byteWidth, bpp) {\n\n  var sum = 0;\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var val = pxData[pxPos + x] - left;\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterUp(pxData, pxPos, byteWidth, rawData, rawPos) {\n\n  for (var x = 0; x < byteWidth; x++) {\n\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var val = pxData[pxPos + x] - up;\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumUp(pxData, pxPos, byteWidth) {\n\n  var sum = 0;\n  var length = pxPos + byteWidth;\n  for (var x = pxPos; x < length; x++) {\n\n    var up = pxPos > 0 ? pxData[x - byteWidth] : 0;\n    var val = pxData[x] - up;\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterAvg(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var val = pxData[pxPos + x] - ((left + up) >> 1);\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumAvg(pxData, pxPos, byteWidth, bpp) {\n\n  var sum = 0;\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var val = pxData[pxPos + x] - ((left + up) >> 1);\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterPaeth(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n    var val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumPaeth(pxData, pxPos, byteWidth, bpp) {\n  var sum = 0;\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n    var val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nvar filters = {\n  0: filterNone,\n  1: filterSub,\n  2: filterUp,\n  3: filterAvg,\n  4: filterPaeth\n};\n\nvar filterSums = {\n  0: filterSumNone,\n  1: filterSumSub,\n  2: filterSumUp,\n  3: filterSumAvg,\n  4: filterSumPaeth\n};\n\nmodule.exports = function(pxData, width, height, options, bpp) {\n\n  var filterTypes;\n  if (!('filterType' in options) || options.filterType === -1) {\n    filterTypes = [0, 1, 2, 3, 4];\n  }\n  else if (typeof options.filterType === 'number') {\n    filterTypes = [options.filterType];\n  }\n  else {\n    throw new Error('unrecognised filter types');\n  }\n\n  var byteWidth = width * bpp;\n  var rawPos = 0;\n  var pxPos = 0;\n  var rawData = new Buffer((byteWidth + 1) * height);\n  var sel = filterTypes[0];\n\n  for (var y = 0; y < height; y++) {\n\n    if (filterTypes.length > 1) {\n      // find best filter for this line (with lowest sum of values)\n      var min = Infinity;\n\n      for (var i = 0; i < filterTypes.length; i++) {\n        var sum = filterSums[filterTypes[i]](pxData, pxPos, byteWidth, bpp);\n        if (sum < min) {\n          sel = filterTypes[i];\n          min = sum;\n        }\n      }\n    }\n\n    rawData[rawPos] = sel;\n    rawPos++;\n    filters[sel](pxData, pxPos, byteWidth, rawData, rawPos, bpp);\n    rawPos += byteWidth;\n    pxPos += byteWidth;\n  }\n  return rawData;\n};\n", "'use strict';\n\nvar constants = require('./constants');\nvar CrcStream = require('./crc');\nvar bitPacker = require('./bitpacker');\nvar filter = require('./filter-pack');\nvar zlib = require('zlib');\n\nvar Packer = module.exports = function(options) {\n  this._options = options;\n\n  options.deflateChunkSize = options.deflateChunkSize || 32 * 1024;\n  options.deflateLevel = options.deflateLevel != null ? options.deflateLevel : 9;\n  options.deflateStrategy = options.deflateStrategy != null ? options.deflateStrategy : 3;\n  options.inputHasAlpha = options.inputHasAlpha != null ? options.inputHasAlpha : true;\n  options.deflateFactory = options.deflateFactory || zlib.createDeflate;\n  options.bitDepth = options.bitDepth || 8;\n  options.colorType = (typeof options.colorType === 'number') ? options.colorType : constants.COLORTYPE_COLOR_ALPHA;\n\n  if (options.colorType !== constants.COLORTYPE_COLOR && options.colorType !== constants.COLORTYPE_COLOR_ALPHA) {\n    throw new Error('option color type:' + options.colorType + ' is not supported at present');\n  }\n  if (options.bitDepth !== 8) {\n    throw new Error('option bit depth:' + options.bitDepth + ' is not supported at present');\n  }\n};\n\nPacker.prototype.getDeflateOptions = function() {\n  return {\n    chunkSize: this._options.deflateChunkSize,\n    level: this._options.deflateLevel,\n    strategy: this._options.deflateStrategy\n  };\n};\n\nPacker.prototype.createDeflate = function() {\n  return this._options.deflateFactory(this.getDeflateOptions());\n};\n\nPacker.prototype.filterData = function(data, width, height) {\n  // convert to correct format for filtering (e.g. right bpp and bit depth)\n  var packedData = bitPacker(data, width, height, this._options);\n\n  // filter pixel data\n  var bpp = constants.COLORTYPE_TO_BPP_MAP[this._options.colorType];\n  var filteredData = filter(packedData, width, height, this._options, bpp);\n  return filteredData;\n};\n\nPacker.prototype._packChunk = function(type, data) {\n\n  var len = (data ? data.length : 0);\n  var buf = new Buffer(len + 12);\n\n  buf.writeUInt32BE(len, 0);\n  buf.writeUInt32BE(type, 4);\n\n  if (data) {\n    data.copy(buf, 8);\n  }\n\n  buf.writeInt32BE(CrcStream.crc32(buf.slice(4, buf.length - 4)), buf.length - 4);\n  return buf;\n};\n\nPacker.prototype.packGAMA = function(gamma) {\n  var buf = new Buffer(4);\n  buf.writeUInt32BE(Math.floor(gamma * constants.GAMMA_DIVISION), 0);\n  return this._packChunk(constants.TYPE_gAMA, buf);\n};\n\nPacker.prototype.packIHDR = function(width, height) {\n\n  var buf = new Buffer(13);\n  buf.writeUInt32BE(width, 0);\n  buf.writeUInt32BE(height, 4);\n  buf[8] = this._options.bitDepth;  // Bit depth\n  buf[9] = this._options.colorType; // colorType\n  buf[10] = 0; // compression\n  buf[11] = 0; // filter\n  buf[12] = 0; // interlace\n\n  return this._packChunk(constants.TYPE_IHDR, buf);\n};\n\nPacker.prototype.packIDAT = function(data) {\n  return this._packChunk(constants.TYPE_IDAT, data);\n};\n\nPacker.prototype.packIEND = function() {\n  return this._packChunk(constants.TYPE_IEND, null);\n};", "'use strict';\n\nvar util = require('util');\nvar Stream = require('stream');\nvar constants = require('./constants');\nvar Packer = require('./packer');\n\nvar PackerAsync = module.exports = function(opt) {\n  Stream.call(this);\n\n  var options = opt || {};\n\n  this._packer = new Packer(options);\n  this._deflate = this._packer.createDeflate();\n\n  this.readable = true;\n};\nutil.inherits(PackerAsync, Stream);\n\n\nPackerAsync.prototype.pack = function(data, width, height, gamma) {\n  // Signature\n  this.emit('data', new Buffer(constants.PNG_SIGNATURE));\n  this.emit('data', this._packer.packIHDR(width, height));\n\n  if (gamma) {\n    this.emit('data', this._packer.packGAMA(gamma));\n  }\n\n  var filteredData = this._packer.filterData(data, width, height);\n\n  // compress it\n  this._deflate.on('error', this.emit.bind(this, 'error'));\n\n  this._deflate.on('data', function(compressedData) {\n    this.emit('data', this._packer.packIDAT(compressedData));\n  }.bind(this));\n\n  this._deflate.on('end', function() {\n    this.emit('data', this._packer.packIEND());\n    this.emit('end');\n  }.bind(this));\n\n  this._deflate.end(filteredData);\n};\n", "'use strict';\n\nvar SyncReader = module.exports = function(buffer) {\n\n  this._buffer = buffer;\n  this._reads = [];\n};\n\nSyncReader.prototype.read = function(length, callback) {\n\n  this._reads.push({\n    length: Math.abs(length),  // if length < 0 then at most this length\n    allowLess: length < 0,\n    func: callback\n  });\n};\n\nSyncReader.prototype.process = function() {\n\n  // as long as there is any data and read requests\n  while (this._reads.length > 0 && this._buffer.length) {\n\n    var read = this._reads[0];\n\n    if (this._buffer.length && (this._buffer.length >= read.length || read.allowLess)) {\n\n      // ok there is any data so that we can satisfy this request\n      this._reads.shift(); // == read\n\n      var buf = this._buffer;\n\n      this._buffer = buf.slice(read.length);\n\n      read.func.call(this, buf.slice(0, read.length));\n\n    }\n    else {\n      break;\n    }\n\n  }\n\n  if (this._reads.length > 0) {\n    return new Error('There are some read requests waitng on finished stream');\n  }\n\n  if (this._buffer.length > 0) {\n    return new Error('unrecognised content at end of stream');\n  }\n\n};\n", "'use strict';\n\nvar SyncReader = require('./sync-reader');\nvar Filter = require('./filter-parse');\n\n\nexports.process = function(inBuffer, bitmapInfo) {\n\n  var outBuffers = [];\n  var reader = new SyncReader(inBuffer);\n  var filter = new Filter(bitmapInfo, {\n    read: reader.read.bind(reader),\n    write: function(bufferPart) {\n      outBuffers.push(bufferPart);\n    },\n    complete: function() {\n    }\n  });\n\n  filter.start();\n  reader.process();\n\n  return Buffer.concat(outBuffers);\n};", "'use strict';\n\nvar hasSyncZlib = true;\nvar zlib = require('zlib');\nif (!zlib.deflateSync) {\n  hasSyncZlib = false;\n}\nvar SyncReader = require('./sync-reader');\nvar FilterSync = require('./filter-parse-sync');\nvar Parser = require('./parser');\nvar bitmapper = require('./bitmapper');\nvar formatNormaliser = require('./format-normaliser');\n\n\nmodule.exports = function(buffer, options) {\n\n  if (!hasSyncZlib) {\n    throw new Error('To use the sync capability of this library in old node versions, please also add a dependency on node-zlb-backport');\n  }\n\n  var err;\n  function handleError(_err_) {\n    err = _err_;\n  }\n\n  var metaData;\n  function handleMetaData(_metaData_) {\n    metaData = _metaData_;\n  }\n\n  function handleTransColor(transColor) {\n    metaData.transColor = transColor;\n  }\n\n  function handlePalette(palette) {\n    metaData.palette = palette;\n  }\n\n  var gamma;\n  function handleGamma(_gamma_) {\n    gamma = _gamma_;\n  }\n\n  var inflateDataList = [];\n  function handleInflateData(inflatedData) {\n    inflateDataList.push(inflatedData);\n  }\n\n  var reader = new SyncReader(buffer);\n\n  var parser = new Parser(options, {\n    read: reader.read.bind(reader),\n    error: handleError,\n    metadata: handleMetaData,\n    gamma: handleGamma,\n    palette: handlePalette,\n    transColor: handleTransColor,\n    inflateData: handleInflateData\n  });\n\n  parser.start();\n  reader.process();\n\n  if (err) {\n    throw err;\n  }\n\n  //join together the inflate datas\n  var inflateData = Buffer.concat(inflateDataList);\n  inflateDataList.length = 0;\n\n  var inflatedData = zlib.inflateSync(inflateData);\n  inflateData = null;\n\n  if (!inflatedData || !inflatedData.length) {\n    throw new Error('bad png - invalid inflate data response');\n  }\n\n  var unfilteredData = FilterSync.process(inflatedData, metaData);\n  inflateData = null;\n\n  var bitmapData = bitmapper.dataToBitMap(unfilteredData, metaData);\n  unfilteredData = null;\n\n  var normalisedBitmapData = formatNormaliser(bitmapData, metaData);\n\n  metaData.data = normalisedBitmapData;\n  metaData.gamma = gamma || 0;\n\n  return metaData;\n};\n", "'use strict';\n\nvar hasSyncZlib = true;\nvar zlib = require('zlib');\nif (!zlib.deflateSync) {\n  hasSyncZlib = false;\n}\nvar constants = require('./constants');\nvar Packer = require('./packer');\n\nmodule.exports = function(metaData, opt) {\n\n  if (!hasSyncZlib) {\n    throw new Error('To use the sync capability of this library in old node versions, please also add a dependency on node-zlb-backport');\n  }\n\n  var options = opt || {};\n\n  var packer = new Packer(options);\n\n  var chunks = [];\n\n  // Signature\n  chunks.push(new Buffer(constants.PNG_SIGNATURE));\n\n  // Header\n  chunks.push(packer.packIHDR(metaData.width, metaData.height));\n\n  if (metaData.gamma) {\n    chunks.push(packer.packGAMA(metaData.gamma));\n  }\n\n  var filteredData = packer.filterData(metaData.data, metaData.width, metaData.height);\n\n  // compress it\n  var compressedData = zlib.deflateSync(filteredData, packer.getDeflateOptions());\n  filteredData = null;\n\n  if (!compressedData || !compressedData.length) {\n    throw new Error('bad png - invalid compressed data response');\n  }\n  chunks.push(packer.packIDAT(compressedData));\n\n  // End\n  chunks.push(packer.packIEND());\n\n  return Buffer.concat(chunks);\n};\n", "'use strict';\n\n\nvar parse = require('./parser-sync');\nvar pack = require('./packer-sync');\n\n\nexports.read = function(buffer, options) {\n\n  return parse(buffer, options || {});\n};\n\nexports.write = function(png) {\n\n  return pack(png);\n};\n", "'use strict';\n\nvar util = require('util');\nvar Stream = require('stream');\nvar Parser = require('./parser-async');\nvar Packer = require('./packer-async');\nvar PNGSync = require('./png-sync');\n\n\nvar PNG = exports.PNG = function(options) {\n  Stream.call(this);\n\n  options = options || {}; // eslint-disable-line no-param-reassign\n\n  this.width = options.width || 0;\n  this.height = options.height || 0;\n\n  this.data = this.width > 0 && this.height > 0 ?\n    new Buffer(4 * this.width * this.height) : null;\n\n  if (options.fill && this.data) {\n    this.data.fill(0);\n  }\n\n  this.gamma = 0;\n  this.readable = this.writable = true;\n\n  this._parser = new Parser(options);\n\n  this._parser.on('error', this.emit.bind(this, 'error'));\n  this._parser.on('close', this._handleClose.bind(this));\n  this._parser.on('metadata', this._metadata.bind(this));\n  this._parser.on('gamma', this._gamma.bind(this));\n  this._parser.on('parsed', function(data) {\n    this.data = data;\n    this.emit('parsed', data);\n  }.bind(this));\n\n  this._packer = new Packer(options);\n  this._packer.on('data', this.emit.bind(this, 'data'));\n  this._packer.on('end', this.emit.bind(this, 'end'));\n  this._parser.on('close', this._handleClose.bind(this));\n  this._packer.on('error', this.emit.bind(this, 'error'));\n\n};\nutil.inherits(PNG, Stream);\n\nPNG.sync = PNGSync;\n\nPNG.prototype.pack = function() {\n\n  if (!this.data || !this.data.length) {\n    this.emit('error', 'No data provided');\n    return this;\n  }\n\n  process.nextTick(function() {\n    this._packer.pack(this.data, this.width, this.height, this.gamma);\n  }.bind(this));\n\n  return this;\n};\n\n\nPNG.prototype.parse = function(data, callback) {\n\n  if (callback) {\n    var onParsed, onError;\n\n    onParsed = function(parsedData) {\n      this.removeListener('error', onError);\n\n      this.data = parsedData;\n      callback(null, this);\n    }.bind(this);\n\n    onError = function(err) {\n      this.removeListener('parsed', onParsed);\n\n      callback(err, null);\n    }.bind(this);\n\n    this.once('parsed', onParsed);\n    this.once('error', onError);\n  }\n\n  this.end(data);\n  return this;\n};\n\nPNG.prototype.write = function(data) {\n  this._parser.write(data);\n  return true;\n};\n\nPNG.prototype.end = function(data) {\n  this._parser.end(data);\n};\n\nPNG.prototype._metadata = function(metadata) {\n  this.width = metadata.width;\n  this.height = metadata.height;\n\n  this.emit('metadata', metadata);\n};\n\nPNG.prototype._gamma = function(gamma) {\n  this.gamma = gamma;\n};\n\nPNG.prototype._handleClose = function() {\n  if (!this._parser.writable && !this._packer.readable) {\n    this.emit('close');\n  }\n};\n\n\nPNG.bitblt = function(src, dst, srcX, srcY, width, height, deltaX, deltaY) { // eslint-disable-line max-params\n\n  if (srcX > src.width || srcY > src.height || srcX + width > src.width || srcY + height > src.height) {\n    throw new Error('bitblt reading outside image');\n  }\n\n  if (deltaX > dst.width || deltaY > dst.height || deltaX + width > dst.width || deltaY + height > dst.height) {\n    throw new Error('bitblt writing outside image');\n  }\n\n  for (var y = 0; y < height; y++) {\n    src.data.copy(dst.data,\n      ((deltaY + y) * dst.width + deltaX) << 2,\n      ((srcY + y) * src.width + srcX) << 2,\n      ((srcY + y) * src.width + srcX + width) << 2\n    );\n  }\n};\n\n\nPNG.prototype.bitblt = function(dst, srcX, srcY, width, height, deltaX, deltaY) { // eslint-disable-line max-params\n\n  PNG.bitblt(this, dst, srcX, srcY, width, height, deltaX, deltaY);\n  return this;\n};\n\nPNG.adjustGamma = function(src) {\n  if (src.gamma) {\n    for (var y = 0; y < src.height; y++) {\n      for (var x = 0; x < src.width; x++) {\n        var idx = (src.width * y + x) << 2;\n\n        for (var i = 0; i < 3; i++) {\n          var sample = src.data[idx + i] / 255;\n          sample = Math.pow(sample, 1 / 2.2 / src.gamma);\n          src.data[idx + i] = Math.round(sample * 255);\n        }\n      }\n    }\n    src.gamma = 0;\n  }\n};\n\nPNG.prototype.adjustGamma = function() {\n  PNG.adjustGamma(this);\n};\n", "\"use strict\"\n\nvar compile = require(\"cwise-compiler\")\n\nvar EmptyProc = {\n  body: \"\",\n  args: [],\n  thisVars: [],\n  localVars: []\n}\n\nfunction fixup(x) {\n  if(!x) {\n    return EmptyProc\n  }\n  for(var i=0; i<x.args.length; ++i) {\n    var a = x.args[i]\n    if(i === 0) {\n      x.args[i] = {name: a, lvalue:true, rvalue: !!x.rvalue, count:x.count||1 }\n    } else {\n      x.args[i] = {name: a, lvalue:false, rvalue:true, count: 1}\n    }\n  }\n  if(!x.thisVars) {\n    x.thisVars = []\n  }\n  if(!x.localVars) {\n    x.localVars = []\n  }\n  return x\n}\n\nfunction pcompile(user_args) {\n  return compile({\n    args:     user_args.args,\n    pre:      fixup(user_args.pre),\n    body:     fixup(user_args.body),\n    post:     fixup(user_args.proc),\n    funcName: user_args.funcName\n  })\n}\n\nfunction makeOp(user_args) {\n  var args = []\n  for(var i=0; i<user_args.args.length; ++i) {\n    args.push(\"a\"+i)\n  }\n  var wrapper = new Function(\"P\", [\n    \"return function \", user_args.funcName, \"_ndarrayops(\", args.join(\",\"), \") {P(\", args.join(\",\"), \");return a0}\"\n  ].join(\"\"))\n  return wrapper(pcompile(user_args))\n}\n\nvar assign_ops = {\n  add:  \"+\",\n  sub:  \"-\",\n  mul:  \"*\",\n  div:  \"/\",\n  mod:  \"%\",\n  band: \"&\",\n  bor:  \"|\",\n  bxor: \"^\",\n  lshift: \"<<\",\n  rshift: \">>\",\n  rrshift: \">>>\"\n}\n;(function(){\n  for(var id in assign_ops) {\n    var op = assign_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\",\"array\",\"array\"],\n      body: {args:[\"a\",\"b\",\"c\"],\n             body: \"a=b\"+op+\"c\"},\n      funcName: id\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\",\"array\"],\n      body: {args:[\"a\",\"b\"],\n             body:\"a\"+op+\"=b\"},\n      rvalue: true,\n      funcName: id+\"eq\"\n    })\n    exports[id+\"s\"] = makeOp({\n      args: [\"array\", \"array\", \"scalar\"],\n      body: {args:[\"a\",\"b\",\"s\"],\n             body:\"a=b\"+op+\"s\"},\n      funcName: id+\"s\"\n    })\n    exports[id+\"seq\"] = makeOp({\n      args: [\"array\",\"scalar\"],\n      body: {args:[\"a\",\"s\"],\n             body:\"a\"+op+\"=s\"},\n      rvalue: true,\n      funcName: id+\"seq\"\n    })\n  }\n})();\n\nvar unary_ops = {\n  not: \"!\",\n  bnot: \"~\",\n  neg: \"-\",\n  recip: \"1.0/\"\n}\n;(function(){\n  for(var id in unary_ops) {\n    var op = unary_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\", \"array\"],\n      body: {args:[\"a\",\"b\"],\n             body:\"a=\"+op+\"b\"},\n      funcName: id\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\"],\n      body: {args:[\"a\"],\n             body:\"a=\"+op+\"a\"},\n      rvalue: true,\n      count: 2,\n      funcName: id+\"eq\"\n    })\n  }\n})();\n\nvar binary_ops = {\n  and: \"&&\",\n  or: \"||\",\n  eq: \"===\",\n  neq: \"!==\",\n  lt: \"<\",\n  gt: \">\",\n  leq: \"<=\",\n  geq: \">=\"\n}\n;(function() {\n  for(var id in binary_ops) {\n    var op = binary_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\",\"array\",\"array\"],\n      body: {args:[\"a\", \"b\", \"c\"],\n             body:\"a=b\"+op+\"c\"},\n      funcName: id\n    })\n    exports[id+\"s\"] = makeOp({\n      args: [\"array\",\"array\",\"scalar\"],\n      body: {args:[\"a\", \"b\", \"s\"],\n             body:\"a=b\"+op+\"s\"},\n      funcName: id+\"s\"\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\", \"array\"],\n      body: {args:[\"a\", \"b\"],\n             body:\"a=a\"+op+\"b\"},\n      rvalue:true,\n      count:2,\n      funcName: id+\"eq\"\n    })\n    exports[id+\"seq\"] = makeOp({\n      args: [\"array\", \"scalar\"],\n      body: {args:[\"a\",\"s\"],\n             body:\"a=a\"+op+\"s\"},\n      rvalue:true,\n      count:2,\n      funcName: id+\"seq\"\n    })\n  }\n})();\n\nvar math_unary = [\n  \"abs\",\n  \"acos\",\n  \"asin\",\n  \"atan\",\n  \"ceil\",\n  \"cos\",\n  \"exp\",\n  \"floor\",\n  \"log\",\n  \"round\",\n  \"sin\",\n  \"sqrt\",\n  \"tan\"\n]\n;(function() {\n  for(var i=0; i<math_unary.length; ++i) {\n    var f = math_unary[i]\n    exports[f] = makeOp({\n                    args: [\"array\", \"array\"],\n                    pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                    body: {args:[\"a\",\"b\"], body:\"a=this_f(b)\", thisVars:[\"this_f\"]},\n                    funcName: f\n                  })\n    exports[f+\"eq\"] = makeOp({\n                      args: [\"array\"],\n                      pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                      body: {args: [\"a\"], body:\"a=this_f(a)\", thisVars:[\"this_f\"]},\n                      rvalue: true,\n                      count: 2,\n                      funcName: f+\"eq\"\n                    })\n  }\n})();\n\nvar math_comm = [\n  \"max\",\n  \"min\",\n  \"atan2\",\n  \"pow\"\n]\n;(function(){\n  for(var i=0; i<math_comm.length; ++i) {\n    var f= math_comm[i]\n    exports[f] = makeOp({\n                  args:[\"array\", \"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(b,c)\", thisVars:[\"this_f\"]},\n                  funcName: f\n                })\n    exports[f+\"s\"] = makeOp({\n                  args:[\"array\", \"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(b,c)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"s\"\n                  })\n    exports[f+\"eq\"] = makeOp({ args:[\"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(a,b)\", thisVars:[\"this_f\"]},\n                  rvalue: true,\n                  count: 2,\n                  funcName: f+\"eq\"\n                  })\n    exports[f+\"seq\"] = makeOp({ args:[\"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(a,b)\", thisVars:[\"this_f\"]},\n                  rvalue:true,\n                  count:2,\n                  funcName: f+\"seq\"\n                  })\n  }\n})();\n\nvar math_noncomm = [\n  \"atan2\",\n  \"pow\"\n]\n;(function(){\n  for(var i=0; i<math_noncomm.length; ++i) {\n    var f= math_noncomm[i]\n    exports[f+\"op\"] = makeOp({\n                  args:[\"array\", \"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(c,b)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"op\"\n                })\n    exports[f+\"ops\"] = makeOp({\n                  args:[\"array\", \"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(c,b)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"ops\"\n                  })\n    exports[f+\"opeq\"] = makeOp({ args:[\"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(b,a)\", thisVars:[\"this_f\"]},\n                  rvalue: true,\n                  count: 2,\n                  funcName: f+\"opeq\"\n                  })\n    exports[f+\"opseq\"] = makeOp({ args:[\"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(b,a)\", thisVars:[\"this_f\"]},\n                  rvalue:true,\n                  count:2,\n                  funcName: f+\"opseq\"\n                  })\n  }\n})();\n\nexports.any = compile({\n  args:[\"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"if(a){return true}\", localVars: [], thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return false\"},\n  funcName: \"any\"\n})\n\nexports.all = compile({\n  args:[\"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"x\", lvalue:false, rvalue:true, count:1}], body: \"if(!x){return false}\", localVars: [], thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return true\"},\n  funcName: \"all\"\n})\n\nexports.sum = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"this_s+=a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"sum\"\n})\n\nexports.prod = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=1\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"this_s*=a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"prod\"\n})\n\nexports.norm2squared = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:2}], body: \"this_s+=a*a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norm2squared\"\n})\n  \nexports.norm2 = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:2}], body: \"this_s+=a*a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return Math.sqrt(this_s)\"},\n  funcName: \"norm2\"\n})\n  \n\nexports.norminf = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:4}], body:\"if(-a>this_s){this_s=-a}else if(a>this_s){this_s=a}\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norminf\"\n})\n\nexports.norm1 = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:3}], body: \"this_s+=a<0?-a:a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norm1\"\n})\n\nexports.sup = compile({\n  args: [ \"array\" ],\n  pre:\n   { body: \"this_h=-Infinity\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  body:\n   { body: \"if(_inline_1_arg0_>this_h)this_h=_inline_1_arg0_\",\n     args: [{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":2} ],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  post:\n   { body: \"return this_h\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] }\n })\n\nexports.inf = compile({\n  args: [ \"array\" ],\n  pre:\n   { body: \"this_h=Infinity\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  body:\n   { body: \"if(_inline_1_arg0_<this_h)this_h=_inline_1_arg0_\",\n     args: [{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":2} ],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  post:\n   { body: \"return this_h\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] }\n })\n\nexports.argmin = compile({\n  args:[\"index\",\"array\",\"shape\"],\n  pre:{\n    body:\"{this_v=Infinity;this_i=_inline_0_arg2_.slice(0)}\",\n    args:[\n      {name:\"_inline_0_arg0_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg1_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg2_\",lvalue:false,rvalue:true,count:1}\n      ],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[]},\n  body:{\n    body:\"{if(_inline_1_arg1_<this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}\",\n    args:[\n      {name:\"_inline_1_arg0_\",lvalue:false,rvalue:true,count:2},\n      {name:\"_inline_1_arg1_\",lvalue:false,rvalue:true,count:2}],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[\"_inline_1_k\"]},\n  post:{\n    body:\"{return this_i}\",\n    args:[],\n    thisVars:[\"this_i\"],\n    localVars:[]}\n})\n\nexports.argmax = compile({\n  args:[\"index\",\"array\",\"shape\"],\n  pre:{\n    body:\"{this_v=-Infinity;this_i=_inline_0_arg2_.slice(0)}\",\n    args:[\n      {name:\"_inline_0_arg0_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg1_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg2_\",lvalue:false,rvalue:true,count:1}\n      ],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[]},\n  body:{\n    body:\"{if(_inline_1_arg1_>this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}\",\n    args:[\n      {name:\"_inline_1_arg0_\",lvalue:false,rvalue:true,count:2},\n      {name:\"_inline_1_arg1_\",lvalue:false,rvalue:true,count:2}],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[\"_inline_1_k\"]},\n  post:{\n    body:\"{return this_i}\",\n    args:[],\n    thisVars:[\"this_i\"],\n    localVars:[]}\n})  \n\nexports.random = makeOp({\n  args: [\"array\"],\n  pre: {args:[], body:\"this_f=Math.random\", thisVars:[\"this_f\"]},\n  body: {args: [\"a\"], body:\"a=this_f()\", thisVars:[\"this_f\"]},\n  funcName: \"random\"\n})\n\nexports.assign = makeOp({\n  args:[\"array\", \"array\"],\n  body: {args:[\"a\", \"b\"], body:\"a=b\"},\n  funcName: \"assign\" })\n\nexports.assigns = makeOp({\n  args:[\"array\", \"scalar\"],\n  body: {args:[\"a\", \"b\"], body:\"a=b\"},\n  funcName: \"assigns\" })\n\n\nexports.equals = compile({\n  args:[\"array\", \"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"x\", lvalue:false, rvalue:true, count:1},\n               {name:\"y\", lvalue:false, rvalue:true, count:1}], \n        body: \"if(x!==y){return false}\", \n        localVars: [], \n        thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return true\"},\n  funcName: \"equals\"\n})\n\n\n", "'use strict'\n\nvar ContentStream = require('contentstream')\nvar GifEncoder = require('gif-encoder')\nvar jpegJs = require('jpeg-js')\nvar PNG = require('pngjs-nozlib').PNG\nvar ndarray = require('ndarray')\nvar ops = require('ndarray-ops')\nvar through = require('through')\n\nfunction handleData (array, data, frame) {\n  var i, j, ptr = 0, c\n  if (array.shape.length === 4) {\n    return handleData(array.pick(frame), data, 0)\n  } else if (array.shape.length === 3) {\n    if (array.shape[2] === 3) {\n      ops.assign(\n        ndarray(data,\n          [array.shape[0], array.shape[1], 3],\n          [4, 4 * array.shape[0], 1]),\n        array)\n      ops.assigns(\n        ndarray(data,\n          [array.shape[0] * array.shape[1]],\n          [4],\n          3),\n        255)\n    } else if (array.shape[2] === 4) {\n      ops.assign(\n        ndarray(data,\n          [array.shape[0], array.shape[1], 4],\n          [4, array.shape[0] * 4, 1]),\n        array)\n    } else if (array.shape[2] === 1) {\n      ops.assign(\n        ndarray(data,\n          [array.shape[0], array.shape[1], 3],\n          [4, 4 * array.shape[0], 1]),\n        ndarray(array.data,\n          [array.shape[0], array.shape[1], 3],\n          [array.stride[0], array.stride[1], 0],\n          array.offset))\n      ops.assigns(\n        ndarray(data,\n          [array.shape[0] * array.shape[1]],\n          [4],\n          3),\n        255)\n    } else {\n      return new Error('Incompatible array shape')\n    }\n  } else if (array.shape.length === 2) {\n    ops.assign(\n      ndarray(data,\n        [array.shape[0], array.shape[1], 3],\n        [4, 4 * array.shape[0], 1]),\n      ndarray(array.data,\n        [array.shape[0], array.shape[1], 3],\n        [array.stride[0], array.stride[1], 0],\n        array.offset))\n    ops.assigns(\n      ndarray(data,\n        [array.shape[0] * array.shape[1]],\n        [4],\n        3),\n      255)\n  } else {\n    return new Error('Incompatible array shape')\n  }\n  return data\n}\n\nfunction haderror (err) {\n  var result = through()\n  result.emit('error', err)\n  return result\n}\n\nmodule.exports = function savePixels (array, type, options) {\n  options = options || {}\n  switch (type.toUpperCase()) {\n    case 'JPG':\n    case '.JPG':\n    case 'JPEG':\n    case '.JPEG':\n    case 'JPE':\n    case '.JPE':\n      var width = array.shape[0]\n      var height = array.shape[1]\n      var data = new Buffer(width * height * 4)\n      data = handleData(array, data)\n      var rawImageData = {\n        data: data,\n        width: width,\n        height: height\n      }\n      var jpegImageData = jpegJs.encode(rawImageData, options.quality)\n      return new ContentStream(jpegImageData.data)\n\n    case 'GIF':\n    case '.GIF':\n      var frames = array.shape.length === 4 ? array.shape[0] : 1\n      var width = array.shape.length === 4 ? array.shape[1] : array.shape[0]\n      var height = array.shape.length === 4 ? array.shape[2] : array.shape[1]\n      var data = new Buffer(width * height * 4)\n      var gif = new GifEncoder(width, height)\n      gif.writeHeader()\n      for (var i = 0; i < frames; i++) {\n        data = handleData(array, data, i)\n        gif.addFrame(data)\n      }\n      gif.finish()\n      return gif\n\n    case 'PNG':\n    case '.PNG':\n      var png = new PNG({\n        width: array.shape[0],\n        height: array.shape[1]\n      })\n      var data = handleData(array, png.data)\n      if (typeof data === 'Error') return haderror(data)\n      png.data = data\n      return png.pack()\n\n    case 'CANVAS':\n      var canvas = document.createElement('canvas')\n      var context = canvas.getContext('2d')\n      canvas.width = array.shape[0]\n      canvas.height = array.shape[1]\n      var imageData = context.getImageData(0, 0, canvas.width, canvas.height)\n      var data = imageData.data\n      data = handleData(array, data)\n      if (typeof data === 'Error') return haderror(data)\n      context.putImageData(imageData, 0, 0)\n      return canvas\n\n    default:\n      return haderror(new Error('Unsupported file type: ' + type))\n  }\n}\n", "var MultiRange = require('multi-integer-range').MultiRange;\nvar getPixels = require('get-pixels-frame-info-update');\nvar savePixels = require('save-pixels-jpeg-js-upgrade');\n\nfunction nopromises () {\n  throw new Error(\n    'Promises not supported in your environment. ' +\n    'Use the callback argument or a Promise polyfill.'\n  );\n}\n\nvar brokenPromise = {\n  then: nopromises,\n  catch: nopromises\n};\n\nfunction gifFrames (options, callback) {\n  options = options || {};\n  callback = callback || function () {};\n\n  var promise;\n  var resolve;\n  var reject;\n  if (typeof Promise === 'function') {\n    promise = new Promise(function (_resolve, _reject) {\n      resolve = function (res) {\n        callback(null, res);\n        _resolve(res);\n      };\n      reject = function (err) {\n        callback(err);\n        _reject(err);\n      };\n    });\n  } else {\n    promise = brokenPromise;\n    resolve = function (res) {\n      callback(null, res);\n    };\n    reject = callback;\n  }\n\n  var url = options.url;\n  if (!url) {\n    reject(new Error('\"url\" option is required.'));\n    return promise;\n  }\n  var frames = options.frames;\n  if (!frames && frames !== 0) {\n    reject(new Error('\"frames\" option is required.'));\n    return promise;\n  }\n  var outputType = options.outputType || 'jpg';\n  var quality = options.quality;\n  var cumulative = options.cumulative;\n\n  var acceptedFrames = frames === 'all' ? 'all' : new MultiRange(frames);\n\n  // Necessary to check if we're in Node or the browser until this is fixed:\n  // https://github.com/scijs/get-pixels/issues/33\n  var inputType = typeof window === 'undefined' ? 'image/gif' : '.GIF';\n  getPixels(url, inputType, function (err, pixels, framesInfo) {\n    if (err) {\n      reject(err);\n      return;\n    }\n    if (pixels.shape.length < 4) {\n      reject(new Error('\"url\" input should be multi-frame GIF.'));\n      return;\n    }\n    var frameData = [];\n    var maxAccumulatedFrame = 0;\n    for (var i = 0; i < pixels.shape[0]; i++) {\n      if (acceptedFrames !== 'all' && !acceptedFrames.has(i)) {\n        continue;\n      }\n      (function (frameIndex) {\n        frameData.push({\n          getImage: function () {\n            if (cumulative && frameIndex > maxAccumulatedFrame) {\n              // for each frame, replace any invisible pixel with\n              // the corresponding pixel from the previous frame (beginning\n              // with the second frame).\n              // to avoid doing too much work at once we only compute the\n              // frames up to and including the requested frame.\n              var lastFrame = pixels.pick(maxAccumulatedFrame);\n              for (var f = maxAccumulatedFrame + 1; f <= frameIndex; f++) {\n                var frame = pixels.pick(f);\n                for (var x = 0; x < frame.shape[0]; x++) {\n                  for (var y = 0; y < frame.shape[1]; y++) {\n                    if (frame.get(x, y, 3) === 0) {\n                      // if alpha is fully transparent, use the pixel\n                      // from the last frame\n                      frame.set(x, y, 0, lastFrame.get(x, y, 0));\n                      frame.set(x, y, 1, lastFrame.get(x, y, 1));\n                      frame.set(x, y, 2, lastFrame.get(x, y, 2));\n                      frame.set(x, y, 3, lastFrame.get(x, y, 3));\n                    }\n                  }\n                }\n                lastFrame = frame;\n              }\n              maxAccumulatedFrame = frameIndex;\n            }\n            return savePixels(pixels.pick(frameIndex), outputType, {\n              quality: quality\n            });\n          },\n          frameIndex: frameIndex,\n          frameInfo: framesInfo && framesInfo[frameIndex]\n        });\n      })(i);\n    }\n    resolve(frameData);\n  });\n\n  return promise;\n}\n\nmodule.exports = gifFrames;\n", "export default require(\"./node_modules/gif-frames/gif-frames.js\");"],
  "mappings": "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AAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QACnC;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QACnC;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QACnC;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QACnC;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QACnC;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QACnC;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QACnC;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QACnC;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QACnC;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QACnC;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QACnC;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QACnC;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QACnC;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QACnC;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QA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",
  "names": []
}
